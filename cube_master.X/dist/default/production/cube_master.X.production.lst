

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Nov 19 19:19:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _ANCON0	set	3933
    18  0000                     _BAUDCON2bits	set	4025
    19  0000                     _INTCON	set	4082
    20  0000                     _OSCCON	set	4051
    21  0000                     _OSCTUNEbits	set	3995
    22  0000                     _PIE3bits	set	4003
    23  0000                     _PIR3bits	set	4004
    24  0000                     _PORTA	set	3968
    25  0000                     _PORTB	set	3969
    26  0000                     _PORTC	set	3970
    27  0000                     _PORTCbits	set	3970
    28  0000                     _RCONbits	set	4048
    29  0000                     _RCREG2	set	3962
    30  0000                     _RCSTA2bits	set	4006
    31  0000                     _SPBRG	set	4015
    32  0000                     _SPBRG2	set	3963
    33  0000                     _SPBRGH2	set	3964
    34  0000                     _TRISA	set	3986
    35  0000                     _TRISB	set	3987
    36  0000                     _TRISC	set	3988
    37  0000                     _TXREG2	set	3961
    38  0000                     _TXSTA2bits	set	4026
    39  0000                     _ADON	set	32272
    40  0000                     _GIE	set	32663
    41  0000                     _PEIE	set	32662
    42  0000                     _PSA	set	32427
    43  0000                     _RC2IF	set	32037
    44  0000                     _T08BIT	set	32430
    45  0000                     _T0CS	set	32429
    46  0000                     _T0PS0	set	32424
    47  0000                     _T0PS1	set	32425
    48  0000                     _T0PS2	set	32426
    49  0000                     _TMR0IE	set	32661
    50  0000                     _TMR0IF	set	32658
    51                           
    52 ;; *************** function _low_isr *****************
    53 ;; Defined at:
    54 ;;		line 99 in file "main.c"
    55 ;; Parameters:    Size  Location     Type
    56 ;;		None
    57 ;; Auto vars:     Size  Location     Type
    58 ;;		None
    59 ;; Return value:  Size  Location     Type
    60 ;;		None               void
    61 ;; Registers used:
    62 ;;		wreg, status,2, status,0, cstack
    63 ;; Tracked objects:
    64 ;;		On entry : 0/0
    65 ;;		On exit  : 0/0
    66 ;;		Unchanged: 0/0
    67 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    68 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    69 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    70 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    71 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    72 ;;Total ram usage:       17 bytes
    73 ;; Hardware stack levels used:    1
    74 ;; Hardware stack levels required when called:    1
    75 ;; This function calls:
    76 ;;		_writeDataToUART
    77 ;; This function is called by:
    78 ;;		Interrupt level 1
    79 ;; This function uses a non-reentrant model
    80 ;;
    81                           
    82 ;; *************** function _timer_isr *****************
    83 ;; Defined at:
    84 ;;		line 113 in file "main.c"
    85 ;; Parameters:    Size  Location     Type
    86 ;;		None
    87 ;; Auto vars:     Size  Location     Type
    88 ;;		None
    89 ;; Return value:  Size  Location     Type
    90 ;;		None               void
    91 ;; Registers used:
    92 ;;		None
    93 ;; Tracked objects:
    94 ;;		On entry : 0/0
    95 ;;		On exit  : 0/0
    96 ;;		Unchanged: 0/0
    97 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    98 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    99 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   100 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   101 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   102 ;;Total ram usage:       17 bytes
   103 ;; Hardware stack levels used:    1
   104 ;; This function calls:
   105 ;;		Nothing
   106 ;; This function is called by:
   107 ;;		Interrupt level 1
   108 ;; This function uses a non-reentrant model
   109 ;;
   110                           
   111                           	psect	intcodelo
   112  000018                     __pintcodelo:
   113                           	opt stack 0
   114                           
   115                           ; #config settings
   116  000018                     _low_isr:
   117                           	opt stack 28
   118                           
   119                           ;incstack = 0
   120  000018  CFD8 F002          	movff	status,??_low_isr
   121  00001C  CFE8 F003          	movff	wreg,??_low_isr+1
   122  000020  CFE0 F004          	movff	bsr,??_low_isr+2
   123  000024  CFFA F005          	movff	pclath,??_low_isr+3
   124  000028  CFFB F006          	movff	pclatu,??_low_isr+4
   125  00002C  CFE9 F007          	movff	fsr0l,??_low_isr+5
   126  000030  CFEA F008          	movff	fsr0h,??_low_isr+6
   127  000034  CFE1 F009          	movff	fsr1l,??_low_isr+7
   128  000038  CFE2 F00A          	movff	fsr1h,??_low_isr+8
   129  00003C  CFD9 F00B          	movff	fsr2l,??_low_isr+9
   130  000040  CFDA F00C          	movff	fsr2h,??_low_isr+10
   131  000044  CFF3 F00D          	movff	prodl,??_low_isr+11
   132  000048  CFF4 F00E          	movff	prodh,??_low_isr+12
   133  00004C  CFF6 F00F          	movff	tblptrl,??_low_isr+13
   134  000050  CFF7 F010          	movff	tblptrh,??_low_isr+14
   135  000054  CFF8 F011          	movff	tblptru,??_low_isr+15
   136  000058  CFF5 F012          	movff	tablat,??_low_isr+16
   137                           
   138                           ;main.c: 101: if (RC2IF ) {
   139  00005C  AAA4               	btfss	4004,5,c	;volatile
   140  00005E  D00C               	goto	i1l858
   141                           
   142                           ;main.c: 102: tampon = RCREG2;
   143  000060  CF7A F02E          	movff	3962,_tampon	;volatile
   144                           
   145                           ;main.c: 103: if (compteur == 128) {
   146  000064  502B               	movf	_compteur,w,c
   147  000066  0A80               	xorlw	128
   148  000068  A4D8               	btfss	status,2,c
   149  00006A  D002               	goto	i1l854
   150                           
   151                           ;main.c: 104: compteur = 0;
   152  00006C  0E00               	movlw	0
   153  00006E  6E2B               	movwf	_compteur,c
   154  000070                     i1l854:
   155                           
   156                           ;main.c: 105: }
   157                           ;main.c: 106: writeDataToUART(tampon);
   158  000070  502E               	movf	_tampon,w,c
   159  000072  ECA7  F001         	call	_writeDataToUART
   160                           
   161                           ;main.c: 107: compteur++;
   162  000076  2A2B               	incf	_compteur,f,c
   163  000078                     i1l858:
   164                           
   165                           ;main.c: 108: }
   166                           ;main.c: 109: RC2IF = 0;
   167  000078  9AA4               	bcf	4004,5,c	;volatile
   168  00007A  C012  FFF5         	movff	??_low_isr+16,tablat
   169  00007E  C011  FFF8         	movff	??_low_isr+15,tblptru
   170  000082  C010  FFF7         	movff	??_low_isr+14,tblptrh
   171  000086  C00F  FFF6         	movff	??_low_isr+13,tblptrl
   172  00008A  C00E  FFF4         	movff	??_low_isr+12,prodh
   173  00008E  C00D  FFF3         	movff	??_low_isr+11,prodl
   174  000092  C00C  FFDA         	movff	??_low_isr+10,fsr2h
   175  000096  C00B  FFD9         	movff	??_low_isr+9,fsr2l
   176  00009A  C00A  FFE2         	movff	??_low_isr+8,fsr1h
   177  00009E  C009  FFE1         	movff	??_low_isr+7,fsr1l
   178  0000A2  C008  FFEA         	movff	??_low_isr+6,fsr0h
   179  0000A6  C007  FFE9         	movff	??_low_isr+5,fsr0l
   180  0000AA  C006  FFFB         	movff	??_low_isr+4,pclatu
   181  0000AE  C005  FFFA         	movff	??_low_isr+3,pclath
   182  0000B2  C004  FFE0         	movff	??_low_isr+2,bsr
   183  0000B6  C003  FFE8         	movff	??_low_isr+1,wreg
   184  0000BA  C002  FFD8         	movff	??_low_isr,status
   185  0000BE  0010               	retfie	
   186  0000C0                     __end_of_low_isr:
   187                           	opt stack 0
   188  0000C0                     _timer_isr:
   189                           	opt stack 29
   190                           
   191                           ;incstack = 0
   192  0000C0  CFD8 F013          	movff	status,??_timer_isr
   193  0000C4  CFE8 F014          	movff	wreg,??_timer_isr+1
   194  0000C8  CFE0 F015          	movff	bsr,??_timer_isr+2
   195  0000CC  CFFA F016          	movff	pclath,??_timer_isr+3
   196  0000D0  CFFB F017          	movff	pclatu,??_timer_isr+4
   197  0000D4  CFE9 F018          	movff	fsr0l,??_timer_isr+5
   198  0000D8  CFEA F019          	movff	fsr0h,??_timer_isr+6
   199  0000DC  CFE1 F01A          	movff	fsr1l,??_timer_isr+7
   200  0000E0  CFE2 F01B          	movff	fsr1h,??_timer_isr+8
   201  0000E4  CFD9 F01C          	movff	fsr2l,??_timer_isr+9
   202  0000E8  CFDA F01D          	movff	fsr2h,??_timer_isr+10
   203  0000EC  CFF3 F01E          	movff	prodl,??_timer_isr+11
   204  0000F0  CFF4 F01F          	movff	prodh,??_timer_isr+12
   205  0000F4  CFF6 F020          	movff	tblptrl,??_timer_isr+13
   206  0000F8  CFF7 F021          	movff	tblptrh,??_timer_isr+14
   207  0000FC  CFF8 F022          	movff	tblptru,??_timer_isr+15
   208  000100  CFF5 F023          	movff	tablat,??_timer_isr+16
   209                           
   210                           ;main.c: 115: if (TMR0IE && TMR0IF) {
   211  000104  BAF2               	btfsc	intcon,5,c	;volatile
   212  000106  D000               	goto	i1l52
   213  000108                     i1l52:
   214                           
   215                           ;main.c: 117: }
   216                           ;main.c: 118: TMR0IF = 0;
   217  000108  94F2               	bcf	intcon,2,c	;volatile
   218  00010A  C023  FFF5         	movff	??_timer_isr+16,tablat
   219  00010E  C022  FFF8         	movff	??_timer_isr+15,tblptru
   220  000112  C021  FFF7         	movff	??_timer_isr+14,tblptrh
   221  000116  C020  FFF6         	movff	??_timer_isr+13,tblptrl
   222  00011A  C01F  FFF4         	movff	??_timer_isr+12,prodh
   223  00011E  C01E  FFF3         	movff	??_timer_isr+11,prodl
   224  000122  C01D  FFDA         	movff	??_timer_isr+10,fsr2h
   225  000126  C01C  FFD9         	movff	??_timer_isr+9,fsr2l
   226  00012A  C01B  FFE2         	movff	??_timer_isr+8,fsr1h
   227  00012E  C01A  FFE1         	movff	??_timer_isr+7,fsr1l
   228  000132  C019  FFEA         	movff	??_timer_isr+6,fsr0h
   229  000136  C018  FFE9         	movff	??_timer_isr+5,fsr0l
   230  00013A  C017  FFFB         	movff	??_timer_isr+4,pclatu
   231  00013E  C016  FFFA         	movff	??_timer_isr+3,pclath
   232  000142  C015  FFE0         	movff	??_timer_isr+2,bsr
   233  000146  C014  FFE8         	movff	??_timer_isr+1,wreg
   234  00014A  C013  FFD8         	movff	??_timer_isr,status
   235  00014E  0010               	retfie	
   236  000150                     __end_of_timer_isr:
   237                           	opt stack 0
   238  0000                     pclatu	equ	0xFFB
   239                           pclath	equ	0xFFA
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           prodh	equ	0xFF4
   245                           prodl	equ	0xFF3
   246                           intcon	equ	0xFF2
   247                           fsr0h	equ	0xFEA
   248                           fsr0l	equ	0xFE9
   249                           wreg	equ	0xFE8
   250                           fsr1h	equ	0xFE2
   251                           fsr1l	equ	0xFE1
   252                           bsr	equ	0xFE0
   253                           fsr2h	equ	0xFDA
   254                           fsr2l	equ	0xFD9
   255                           status	equ	0xFD8
   256                           
   257                           	psect	cinit
   258  000330                     __pcinit:
   259                           	opt stack 0
   260  000330                     start_initialization:
   261                           	opt stack 0
   262  000330                     __initialization:
   263                           	opt stack 0
   264                           
   265                           ; Clear objects allocated to BANK0 (80 bytes)
   266  000330  EE00  F060         	lfsr	0,__pbssBANK0
   267  000334  0E50               	movlw	80
   268  000336                     clear_0:
   269  000336  6AEE               	clrf	postinc0,c
   270  000338  06E8               	decf	wreg,f,c
   271  00033A  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to COMRAM (4 bytes)
   274  00033C  6A2E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   275  00033E  6A2D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   276  000340  6A2C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   277  000342  6A2B               	clrf	__pbssCOMRAM& (0+255),c
   278  000344                     end_of_initialization:
   279                           	opt stack 0
   280  000344                     __end_of__initialization:
   281                           	opt stack 0
   282  000344  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  000346  6EF8               	movwf	tblptru,c
   284  000348  0100               	movlb	0
   285  00034A  EF1B  F001         	goto	_main	;jump to C main() function
   286                           pclatu	equ	0xFFB
   287                           pclath	equ	0xFFA
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           prodh	equ	0xFF4
   293                           prodl	equ	0xFF3
   294                           intcon	equ	0xFF2
   295                           postinc0	equ	0xFEE
   296                           fsr0h	equ	0xFEA
   297                           fsr0l	equ	0xFE9
   298                           wreg	equ	0xFE8
   299                           fsr1h	equ	0xFE2
   300                           fsr1l	equ	0xFE1
   301                           bsr	equ	0xFE0
   302                           fsr2h	equ	0xFDA
   303                           fsr2l	equ	0xFD9
   304                           status	equ	0xFD8
   305                           
   306                           	psect	bssCOMRAM
   307  00002B                     __pbssCOMRAM:
   308                           	opt stack 0
   309  00002B                     _compteur:
   310                           	opt stack 0
   311  00002B                     	ds	1
   312  00002C                     _flag_reception:
   313                           	opt stack 0
   314  00002C                     	ds	1
   315  00002D                     _it:
   316                           	opt stack 0
   317  00002D                     	ds	1
   318  00002E                     _tampon:
   319                           	opt stack 0
   320  00002E                     	ds	1
   321                           pclatu	equ	0xFFB
   322                           pclath	equ	0xFFA
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           prodh	equ	0xFF4
   328                           prodl	equ	0xFF3
   329                           intcon	equ	0xFF2
   330                           postinc0	equ	0xFEE
   331                           fsr0h	equ	0xFEA
   332                           fsr0l	equ	0xFE9
   333                           wreg	equ	0xFE8
   334                           fsr1h	equ	0xFE2
   335                           fsr1l	equ	0xFE1
   336                           bsr	equ	0xFE0
   337                           fsr2h	equ	0xFDA
   338                           fsr2l	equ	0xFD9
   339                           status	equ	0xFD8
   340                           
   341                           	psect	bssBANK0
   342  000060                     __pbssBANK0:
   343                           	opt stack 0
   344  000060                     _msg:
   345                           	opt stack 0
   346  000060                     	ds	80
   347                           pclatu	equ	0xFFB
   348                           pclath	equ	0xFFA
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           prodh	equ	0xFF4
   354                           prodl	equ	0xFF3
   355                           intcon	equ	0xFF2
   356                           postinc0	equ	0xFEE
   357                           fsr0h	equ	0xFEA
   358                           fsr0l	equ	0xFE9
   359                           wreg	equ	0xFE8
   360                           fsr1h	equ	0xFE2
   361                           fsr1l	equ	0xFE1
   362                           bsr	equ	0xFE0
   363                           fsr2h	equ	0xFDA
   364                           fsr2l	equ	0xFD9
   365                           status	equ	0xFD8
   366                           
   367                           	psect	cstackCOMRAM
   368  000001                     __pcstackCOMRAM:
   369                           	opt stack 0
   370  000001                     writeDataToUART@data:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x0
   374  000001                     	ds	1
   375  000002                     ??_low_isr:
   376                           
   377                           ; 0 bytes @ 0x1
   378  000002                     	ds	17
   379  000013                     ??_timer_isr:
   380                           
   381                           ; 0 bytes @ 0x12
   382  000013                     	ds	17
   383  000024                     multiplexeur@n:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x23
   387  000024                     	ds	1
   388  000025                     multiplexeur@d:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x24
   392  000025                     	ds	1
   393  000026                     main@j:
   394                           	opt stack 0
   395                           
   396                           ; 4 bytes @ 0x25
   397  000026                     	ds	4
   398  00002A                     main@i:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x29
   402  00002A                     	ds	1
   403                           pclatu	equ	0xFFB
   404                           pclath	equ	0xFFA
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           prodh	equ	0xFF4
   410                           prodl	equ	0xFF3
   411                           intcon	equ	0xFF2
   412                           postinc0	equ	0xFEE
   413                           fsr0h	equ	0xFEA
   414                           fsr0l	equ	0xFE9
   415                           wreg	equ	0xFE8
   416                           fsr1h	equ	0xFE2
   417                           fsr1l	equ	0xFE1
   418                           bsr	equ	0xFE0
   419                           fsr2h	equ	0xFDA
   420                           fsr2l	equ	0xFD9
   421                           status	equ	0xFD8
   422                           
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 125 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  j               4   37[COMRAM] long 
   433 ;;  i               1   41[COMRAM] unsigned char 
   434 ;; Return value:  Size  Location     Type
   435 ;;		None               void
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   444 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   446 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   447 ;;Total ram usage:        5 bytes
   448 ;; Hardware stack levels required when called:    3
   449 ;; This function calls:
   450 ;;		_initComms
   451 ;;		_initPorts
   452 ;;		_multiplexeur
   453 ;; This function is called by:
   454 ;;		Startup code after reset
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text0
   459  000236                     __ptext0:
   460                           	opt stack 0
   461  000236                     _main:
   462                           	opt stack 28
   463                           
   464                           ;main.c: 127: char i = 0;
   465                           
   466                           ;incstack = 0
   467  000236  0E00               	movlw	0
   468  000238  6E2A               	movwf	main@i,c
   469                           
   470                           ;main.c: 128: long j = 0;
   471  00023A  0E00               	movlw	0
   472  00023C  6E26               	movwf	main@j,c
   473  00023E  0E00               	movlw	0
   474  000240  6E27               	movwf	main@j+1,c
   475  000242  0E00               	movlw	0
   476  000244  6E28               	movwf	main@j+2,c
   477  000246  0E00               	movlw	0
   478  000248  6E29               	movwf	main@j+3,c
   479                           
   480                           ;main.c: 130: initPorts();
   481  00024A  EC80  F001         	call	_initPorts	;wreg free
   482                           
   483                           ;main.c: 131: initComms();
   484  00024E  EC60  F001         	call	_initComms	;wreg free
   485  000252                     l56:
   486                           
   487                           ;main.c: 134: for (i = 0; i < 8; i++) {
   488  000252  0E00               	movlw	0
   489  000254  6E2A               	movwf	main@i,c
   490  000256  0E07               	movlw	7
   491  000258  642A               	cpfsgt	main@i,c
   492  00025A  D001               	goto	l874
   493  00025C  D7FA               	goto	l56
   494  00025E                     l874:
   495                           
   496                           ;main.c: 135: multiplexeur(i);
   497  00025E  502A               	movf	main@i,w,c
   498  000260  ECAA  F000         	call	_multiplexeur
   499                           
   500                           ;main.c: 136: for (j = 0; j < 100000; j++) {
   501  000264  0E00               	movlw	0
   502  000266  6E26               	movwf	main@j,c
   503  000268  0E00               	movlw	0
   504  00026A  6E27               	movwf	main@j+1,c
   505  00026C  0E00               	movlw	0
   506  00026E  6E28               	movwf	main@j+2,c
   507  000270  0E00               	movlw	0
   508  000272  6E29               	movwf	main@j+3,c
   509  000274  5029               	movf	main@j+3,w,c
   510  000276  0A80               	xorlw	128
   511  000278  0F80               	addlw	128
   512  00027A  E108               	bnz	u225
   513  00027C  0E01               	movlw	1
   514  00027E  5C28               	subwf	main@j+2,w,c
   515  000280  E105               	bnz	u225
   516  000282  0E86               	movlw	134
   517  000284  5C27               	subwf	main@j+1,w,c
   518  000286  E102               	bnz	u225
   519  000288  0EA0               	movlw	160
   520  00028A  5C26               	subwf	main@j,w,c
   521  00028C                     u225:
   522  00028C  B0D8               	btfsc	status,0,c
   523  00028E  D013               	goto	l884
   524  000290  0E01               	movlw	1
   525  000292  2626               	addwf	main@j,f,c
   526  000294  0E00               	movlw	0
   527  000296  2227               	addwfc	main@j+1,f,c
   528  000298  2228               	addwfc	main@j+2,f,c
   529  00029A  2229               	addwfc	main@j+3,f,c
   530  00029C  5029               	movf	main@j+3,w,c
   531  00029E  0A80               	xorlw	128
   532  0002A0  0F80               	addlw	128
   533  0002A2  E108               	bnz	u235
   534  0002A4  0E01               	movlw	1
   535  0002A6  5C28               	subwf	main@j+2,w,c
   536  0002A8  E105               	bnz	u235
   537  0002AA  0E86               	movlw	134
   538  0002AC  5C27               	subwf	main@j+1,w,c
   539  0002AE  E102               	bnz	u235
   540  0002B0  0EA0               	movlw	160
   541  0002B2  5C26               	subwf	main@j,w,c
   542  0002B4                     u235:
   543  0002B4  D7EB               	goto	u225
   544  0002B6                     l884:
   545  0002B6  2A2A               	incf	main@i,f,c
   546  0002B8  0E07               	movlw	7
   547  0002BA  642A               	cpfsgt	main@i,c
   548  0002BC  D7D0               	goto	l874
   549  0002BE  D7C9               	goto	l56
   550  0002C0                     __end_of_main:
   551                           	opt stack 0
   552                           pclatu	equ	0xFFB
   553                           pclath	equ	0xFFA
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           prodh	equ	0xFF4
   559                           prodl	equ	0xFF3
   560                           intcon	equ	0xFF2
   561                           postinc0	equ	0xFEE
   562                           fsr0h	equ	0xFEA
   563                           fsr0l	equ	0xFE9
   564                           wreg	equ	0xFE8
   565                           fsr1h	equ	0xFE2
   566                           fsr1l	equ	0xFE1
   567                           bsr	equ	0xFE0
   568                           fsr2h	equ	0xFDA
   569                           fsr2l	equ	0xFD9
   570                           status	equ	0xFD8
   571                           
   572 ;; *************** function _multiplexeur *****************
   573 ;; Defined at:
   574 ;;		line 144 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  n               1    wreg     unsigned char 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  n               1   35[COMRAM] unsigned char 
   579 ;;  d               1   36[COMRAM] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;		None               void
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;Total ram usage:        2 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    2
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text1
   604  000154                     __ptext1:
   605                           	opt stack 0
   606  000154                     _multiplexeur:
   607                           	opt stack 28
   608                           
   609                           ;incstack = 0
   610                           ;multiplexeur@n stored from wreg
   611  000154  6E24               	movwf	multiplexeur@n,c
   612                           
   613                           ;main.c: 145: char d=0;
   614  000156  0E00               	movlw	0
   615  000158  6E25               	movwf	multiplexeur@d,c
   616                           
   617                           ;main.c: 146: PORTCbits.RC0 = 0;for(d=0;d<4;d++){}
   618  00015A  9082               	bcf	3970,0,c	;volatile
   619  00015C  0E00               	movlw	0
   620  00015E  6E25               	movwf	multiplexeur@d,c
   621  000160  D001               	goto	L1
   622  000162                     l768:
   623  000162  2A25               	incf	multiplexeur@d,f,c
   624  000164                     L1:
   625  000164  0E03               	movlw	3
   626  000166  6425               	cpfsgt	multiplexeur@d,c
   627  000168  D7FC               	goto	l768
   628                           
   629                           ;main.c: 147: PORTCbits.RC1 = 0;for(d=0;d<4;d++){}
   630  00016A  9282               	bcf	3970,1,c	;volatile
   631  00016C  0E00               	movlw	0
   632  00016E  6E25               	movwf	multiplexeur@d,c
   633  000170  D001               	goto	L2
   634  000172                     l778:
   635  000172  2A25               	incf	multiplexeur@d,f,c
   636  000174                     L2:
   637  000174  0E03               	movlw	3
   638  000176  6425               	cpfsgt	multiplexeur@d,c
   639  000178  D7FC               	goto	l778
   640                           
   641                           ;main.c: 148: PORTCbits.RC2 = 0;for(d=0;d<4;d++){}
   642  00017A  9482               	bcf	3970,2,c	;volatile
   643  00017C  0E00               	movlw	0
   644  00017E  6E25               	movwf	multiplexeur@d,c
   645  000180  D001               	goto	L3
   646  000182                     l788:
   647  000182  2A25               	incf	multiplexeur@d,f,c
   648  000184                     L3:
   649  000184  0E03               	movlw	3
   650  000186  6425               	cpfsgt	multiplexeur@d,c
   651  000188  D7FC               	goto	l788
   652                           
   653                           ;main.c: 149: PORTCbits.RC3 = 0;for(d=0;d<4;d++){}
   654  00018A  9682               	bcf	3970,3,c	;volatile
   655  00018C  0E00               	movlw	0
   656  00018E  6E25               	movwf	multiplexeur@d,c
   657  000190  D001               	goto	L4
   658  000192                     l798:
   659  000192  2A25               	incf	multiplexeur@d,f,c
   660  000194                     L4:
   661  000194  0E03               	movlw	3
   662  000196  6425               	cpfsgt	multiplexeur@d,c
   663  000198  D7FC               	goto	l798
   664                           
   665                           ;main.c: 150: PORTCbits.RC4 = 0;for(d=0;d<4;d++){}
   666  00019A  9882               	bcf	3970,4,c	;volatile
   667  00019C  0E00               	movlw	0
   668  00019E  6E25               	movwf	multiplexeur@d,c
   669  0001A0  D001               	goto	L5
   670  0001A2                     l808:
   671  0001A2  2A25               	incf	multiplexeur@d,f,c
   672  0001A4                     L5:
   673  0001A4  0E03               	movlw	3
   674  0001A6  6425               	cpfsgt	multiplexeur@d,c
   675  0001A8  D7FC               	goto	l808
   676                           
   677                           ;main.c: 151: PORTCbits.RC5 = 0;for(d=0;d<4;d++){}
   678  0001AA  9A82               	bcf	3970,5,c	;volatile
   679  0001AC  0E00               	movlw	0
   680  0001AE  6E25               	movwf	multiplexeur@d,c
   681  0001B0  D001               	goto	L6
   682  0001B2                     l818:
   683  0001B2  2A25               	incf	multiplexeur@d,f,c
   684  0001B4                     L6:
   685  0001B4  0E03               	movlw	3
   686  0001B6  6425               	cpfsgt	multiplexeur@d,c
   687  0001B8  D7FC               	goto	l818
   688                           
   689                           ;main.c: 152: PORTCbits.RC6 = 0;for(d=0;d<4;d++){}
   690  0001BA  9C82               	bcf	3970,6,c	;volatile
   691  0001BC  0E00               	movlw	0
   692  0001BE  6E25               	movwf	multiplexeur@d,c
   693  0001C0  D001               	goto	L7
   694  0001C2                     l828:
   695  0001C2  2A25               	incf	multiplexeur@d,f,c
   696  0001C4                     L7:
   697  0001C4  0E03               	movlw	3
   698  0001C6  6425               	cpfsgt	multiplexeur@d,c
   699  0001C8  D7FC               	goto	l828
   700                           
   701                           ;main.c: 153: PORTCbits.RC7 = 0;for(d=0;d<4;d++){}
   702  0001CA  9E82               	bcf	3970,7,c	;volatile
   703  0001CC  0E00               	movlw	0
   704  0001CE  6E25               	movwf	multiplexeur@d,c
   705  0001D0  0E03               	movlw	3
   706  0001D2  6425               	cpfsgt	multiplexeur@d,c
   707  0001D4  D001               	goto	l838
   708  0001D6  D015               	goto	l844
   709  0001D8                     l838:
   710  0001D8  2A25               	incf	multiplexeur@d,f,c
   711  0001DA  0E03               	movlw	3
   712  0001DC  6425               	cpfsgt	multiplexeur@d,c
   713  0001DE  D7FC               	goto	l838
   714  0001E0  D010               	goto	l844
   715  0001E2                     l83:
   716                           
   717                           ;main.c: 157: PORTCbits.RC0 = 1;
   718  0001E2  8082               	bsf	3970,0,c	;volatile
   719                           
   720                           ;main.c: 158: break;
   721  0001E4  0012               	return	
   722  0001E6                     l85:
   723                           
   724                           ;main.c: 161: PORTCbits.RC1 = 1;
   725  0001E6  8282               	bsf	3970,1,c	;volatile
   726                           
   727                           ;main.c: 162: break;
   728  0001E8  0012               	return	
   729  0001EA                     l86:
   730                           
   731                           ;main.c: 165: PORTCbits.RC2 = 1;
   732  0001EA  8482               	bsf	3970,2,c	;volatile
   733                           
   734                           ;main.c: 166: break;
   735  0001EC  0012               	return	
   736  0001EE                     l87:
   737                           
   738                           ;main.c: 169: PORTCbits.RC3 = 1;
   739  0001EE  8682               	bsf	3970,3,c	;volatile
   740                           
   741                           ;main.c: 170: break;
   742  0001F0  0012               	return	
   743  0001F2                     l88:
   744                           
   745                           ;main.c: 173: PORTCbits.RC4 = 1;
   746  0001F2  8882               	bsf	3970,4,c	;volatile
   747                           
   748                           ;main.c: 174: break;
   749  0001F4  0012               	return	
   750  0001F6                     l89:
   751                           
   752                           ;main.c: 177: PORTCbits.RC5 = 1;
   753  0001F6  8A82               	bsf	3970,5,c	;volatile
   754                           
   755                           ;main.c: 178: break;
   756  0001F8  0012               	return	
   757  0001FA                     l90:
   758                           
   759                           ;main.c: 181: PORTCbits.RC6 = 1;
   760  0001FA  8C82               	bsf	3970,6,c	;volatile
   761                           
   762                           ;main.c: 182: break;
   763  0001FC  0012               	return	
   764  0001FE                     l91:
   765                           
   766                           ;main.c: 185: PORTCbits.RC7 = 1;
   767  0001FE  8E82               	bsf	3970,7,c	;volatile
   768                           
   769                           ;main.c: 186: break;
   770  000200  0012               	return	
   771  000202                     l844:
   772  000202  5024               	movf	multiplexeur@n,w,c
   773                           
   774                           ; Switch size 1, requested type "space"
   775                           ; Number of cases is 8, Range of values is 0 to 7
   776                           ; switch strategies available:
   777                           ; Name         Instructions Cycles
   778                           ; simple_byte           25    13 (average)
   779                           ;	Chosen strategy is simple_byte
   780  000204  0A00               	xorlw	0	; case 0
   781  000206  B4D8               	btfsc	status,2,c
   782  000208  D7EC               	goto	l83
   783  00020A  0A01               	xorlw	1	; case 1
   784  00020C  B4D8               	btfsc	status,2,c
   785  00020E  D7EB               	goto	l85
   786  000210  0A03               	xorlw	3	; case 2
   787  000212  B4D8               	btfsc	status,2,c
   788  000214  D7EA               	goto	l86
   789  000216  0A01               	xorlw	1	; case 3
   790  000218  B4D8               	btfsc	status,2,c
   791  00021A  D7E9               	goto	l87
   792  00021C  0A07               	xorlw	7	; case 4
   793  00021E  B4D8               	btfsc	status,2,c
   794  000220  D7E8               	goto	l88
   795  000222  0A01               	xorlw	1	; case 5
   796  000224  B4D8               	btfsc	status,2,c
   797  000226  D7E7               	goto	l89
   798  000228  0A03               	xorlw	3	; case 6
   799  00022A  B4D8               	btfsc	status,2,c
   800  00022C  D7E6               	goto	l90
   801  00022E  0A01               	xorlw	1	; case 7
   802  000230  A4D8               	btfss	status,2,c
   803  000232  0012               	return	
   804  000234  D7E4               	goto	l91
   805  000236                     __end_of_multiplexeur:
   806                           	opt stack 0
   807                           pclatu	equ	0xFFB
   808                           pclath	equ	0xFFA
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           prodh	equ	0xFF4
   814                           prodl	equ	0xFF3
   815                           intcon	equ	0xFF2
   816                           postinc0	equ	0xFEE
   817                           fsr0h	equ	0xFEA
   818                           fsr0l	equ	0xFE9
   819                           wreg	equ	0xFE8
   820                           fsr1h	equ	0xFE2
   821                           fsr1l	equ	0xFE1
   822                           bsr	equ	0xFE0
   823                           fsr2h	equ	0xFDA
   824                           fsr2l	equ	0xFD9
   825                           status	equ	0xFD8
   826                           
   827 ;; *************** function _initPorts *****************
   828 ;; Defined at:
   829 ;;		line 7 in file "port.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;		None               void
   836 ;; Registers used:
   837 ;;		wreg, status,2
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    2
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text2
   858  000300                     __ptext2:
   859                           	opt stack 0
   860  000300                     _initPorts:
   861                           	opt stack 28
   862                           
   863                           ;port.c: 12: OSCCON = 0x70;
   864                           
   865                           ;incstack = 0
   866  000300  0E70               	movlw	112
   867  000302  6ED3               	movwf	4051,c	;volatile
   868                           
   869                           ;port.c: 14: ANCON0 = 0b00000000;
   870  000304  0E00               	movlw	0
   871  000306  010F               	movlb	15	; () banked
   872  000308  6F5D               	movwf	93,b	;volatile
   873                           
   874                           ; BSR set to: 15
   875                           ;port.c: 17: ADON = 0;
   876  00030A  90C2               	bcf	4034,0,c	;volatile
   877                           
   878                           ;port.c: 20: PORTA = 0b00000000;
   879  00030C  0E00               	movlw	0
   880  00030E  6E80               	movwf	3968,c	;volatile
   881                           
   882                           ;port.c: 21: TRISA = 0b00000000;
   883  000310  0E00               	movlw	0
   884  000312  6E92               	movwf	3986,c	;volatile
   885                           
   886                           ;port.c: 23: PORTB = 0b01000000;
   887  000314  0E40               	movlw	64
   888  000316  6E81               	movwf	3969,c	;volatile
   889                           
   890                           ;port.c: 24: TRISB = 0b10000000;
   891  000318  0E80               	movlw	128
   892  00031A  6E93               	movwf	3987,c	;volatile
   893                           
   894                           ;port.c: 26: PORTC = 0b00000000;
   895  00031C  0E00               	movlw	0
   896  00031E  6E82               	movwf	3970,c	;volatile
   897                           
   898                           ;port.c: 27: TRISC = 0b00000000;
   899  000320  0E00               	movlw	0
   900  000322  6E94               	movwf	3988,c	;volatile
   901                           
   902                           ; BSR set to: 15
   903                           ;port.c: 30: GIE = 1;
   904  000324  8EF2               	bsf	intcon,7,c	;volatile
   905                           
   906                           ; BSR set to: 15
   907                           ;port.c: 31: PEIE = 1;
   908  000326  8CF2               	bsf	intcon,6,c	;volatile
   909                           
   910                           ;port.c: 32: INTCON =0b11000000;
   911  000328  0EC0               	movlw	192
   912  00032A  6EF2               	movwf	intcon,c	;volatile
   913                           
   914                           ; BSR set to: 15
   915                           ;port.c: 34: OSCTUNEbits.PLLEN = 1;
   916  00032C  8C9B               	bsf	3995,6,c	;volatile
   917                           
   918                           ; BSR set to: 15
   919  00032E  0012               	return	
   920  000330                     __end_of_initPorts:
   921                           	opt stack 0
   922                           pclatu	equ	0xFFB
   923                           pclath	equ	0xFFA
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           prodh	equ	0xFF4
   929                           prodl	equ	0xFF3
   930                           intcon	equ	0xFF2
   931                           postinc0	equ	0xFEE
   932                           fsr0h	equ	0xFEA
   933                           fsr0l	equ	0xFE9
   934                           wreg	equ	0xFE8
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           bsr	equ	0xFE0
   938                           fsr2h	equ	0xFDA
   939                           fsr2l	equ	0xFD9
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _initComms *****************
   943 ;; Defined at:
   944 ;;		line 6 in file "usart.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;		None               void
   951 ;; Registers used:
   952 ;;		wreg, status,2
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text3
   973  0002C0                     __ptext3:
   974                           	opt stack 0
   975  0002C0                     _initComms:
   976                           	opt stack 28
   977                           
   978                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   979                           
   980                           ; BSR set to: 15
   981                           ;incstack = 0
   982  0002C0  9EBA               	bcf	4026,7,c	;volatile
   983                           
   984                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   985  0002C2  9CBA               	bcf	4026,6,c	;volatile
   986                           
   987                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   988  0002C4  8ABA               	bsf	4026,5,c	;volatile
   989                           
   990                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   991  0002C6  98BA               	bcf	4026,4,c	;volatile
   992                           
   993                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   994  0002C8  96BA               	bcf	4026,3,c	;volatile
   995                           
   996                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   997  0002CA  84BA               	bsf	4026,2,c	;volatile
   998                           
   999                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
  1000  0002CC  82BA               	bsf	4026,1,c	;volatile
  1001                           
  1002                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
  1003  0002CE  90BA               	bcf	4026,0,c	;volatile
  1004                           
  1005                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
  1006  0002D0  8EA6               	bsf	4006,7,c	;volatile
  1007                           
  1008                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
  1009  0002D2  9CA6               	bcf	4006,6,c	;volatile
  1010                           
  1011                           ;usart.c: 19: RCSTA2bits.SREN = 0;
  1012  0002D4  9AA6               	bcf	4006,5,c	;volatile
  1013                           
  1014                           ;usart.c: 20: RCSTA2bits.CREN = 1;
  1015  0002D6  88A6               	bsf	4006,4,c	;volatile
  1016                           
  1017                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
  1018  0002D8  96A6               	bcf	4006,3,c	;volatile
  1019                           
  1020                           ;usart.c: 22: RCSTA2bits.FERR = 0;
  1021  0002DA  94A6               	bcf	4006,2,c	;volatile
  1022                           
  1023                           ;usart.c: 23: RCSTA2bits.OERR = 0;
  1024  0002DC  92A6               	bcf	4006,1,c	;volatile
  1025                           
  1026                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
  1027  0002DE  90A6               	bcf	4006,0,c	;volatile
  1028                           
  1029                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
  1030  0002E0  9EB9               	bcf	4025,7,c	;volatile
  1031                           
  1032                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
  1033  0002E2  8CB9               	bsf	4025,6,c	;volatile
  1034                           
  1035                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
  1036  0002E4  9AB9               	bcf	4025,5,c	;volatile
  1037                           
  1038                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
  1039  0002E6  98B9               	bcf	4025,4,c	;volatile
  1040                           
  1041                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
  1042  0002E8  86B9               	bsf	4025,3,c	;volatile
  1043                           
  1044                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
  1045  0002EA  92B9               	bcf	4025,1,c	;volatile
  1046                           
  1047                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
  1048  0002EC  90B9               	bcf	4025,0,c	;volatile
  1049                           
  1050                           ;usart.c: 36: PIE3bits.RC2IE = 1;
  1051  0002EE  8AA3               	bsf	4003,5,c	;volatile
  1052                           
  1053                           ;usart.c: 37: RCONbits.IPEN = 1;
  1054  0002F0  8ED0               	bsf	4048,7,c	;volatile
  1055                           
  1056                           ;usart.c: 48: SPBRG = 115;
  1057  0002F2  0E73               	movlw	115
  1058  0002F4  6EAF               	movwf	4015,c	;volatile
  1059                           
  1060                           ;usart.c: 49: SPBRGH2 = 0;
  1061  0002F6  0E00               	movlw	0
  1062  0002F8  6E7C               	movwf	3964,c	;volatile
  1063                           
  1064                           ;usart.c: 50: SPBRG2 = 137;
  1065  0002FA  0E89               	movlw	137
  1066  0002FC  6E7B               	movwf	3963,c	;volatile
  1067  0002FE  0012               	return	
  1068  000300                     __end_of_initComms:
  1069                           	opt stack 0
  1070                           pclatu	equ	0xFFB
  1071                           pclath	equ	0xFFA
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           prodh	equ	0xFF4
  1077                           prodl	equ	0xFF3
  1078                           intcon	equ	0xFF2
  1079                           postinc0	equ	0xFEE
  1080                           fsr0h	equ	0xFEA
  1081                           fsr0l	equ	0xFE9
  1082                           wreg	equ	0xFE8
  1083                           fsr1h	equ	0xFE2
  1084                           fsr1l	equ	0xFE1
  1085                           bsr	equ	0xFE0
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _writeDataToUART *****************
  1091 ;; Defined at:
  1092 ;;		line 62 in file "usart.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  data            1    wreg     unsigned char 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  data            1    0[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;		None               void
  1099 ;; Registers used:
  1100 ;;		wreg
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1110 ;;Total ram usage:        1 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_low_isr
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text5
  1120  00034E                     __ptext5:
  1121                           	opt stack 0
  1122  00034E                     _writeDataToUART:
  1123                           	opt stack 28
  1124                           
  1125                           ;incstack = 0
  1126                           ;writeDataToUART@data stored from wreg
  1127  00034E  6E01               	movwf	writeDataToUART@data,c
  1128  000350                     i1l132:
  1129  000350  A8A4               	btfss	4004,4,c	;volatile
  1130  000352  D7FE               	goto	i1l132
  1131                           
  1132                           ;usart.c: 65: TXREG2 = data;
  1133  000354  C001  FF79         	movff	writeDataToUART@data,3961	;volatile
  1134  000358  0012               	return	
  1135  00035A                     __end_of_writeDataToUART:
  1136                           	opt stack 0
  1137                           pclatu	equ	0xFFB
  1138                           pclath	equ	0xFFA
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           prodh	equ	0xFF4
  1144                           prodl	equ	0xFF3
  1145                           intcon	equ	0xFF2
  1146                           postinc0	equ	0xFEE
  1147                           fsr0h	equ	0xFEA
  1148                           fsr0l	equ	0xFE9
  1149                           wreg	equ	0xFE8
  1150                           fsr1h	equ	0xFE2
  1151                           fsr1l	equ	0xFE1
  1152                           bsr	equ	0xFE0
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           status	equ	0xFD8
  1156                           pclatu	equ	0xFFB
  1157                           pclath	equ	0xFFA
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           prodh	equ	0xFF4
  1163                           prodl	equ	0xFF3
  1164                           intcon	equ	0xFF2
  1165                           postinc0	equ	0xFEE
  1166                           fsr0h	equ	0xFEA
  1167                           fsr0l	equ	0xFE9
  1168                           wreg	equ	0xFE8
  1169                           fsr1h	equ	0xFE2
  1170                           fsr1l	equ	0xFE1
  1171                           bsr	equ	0xFE0
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           status	equ	0xFD8
  1175                           
  1176                           	psect	rparam
  1177  0000                     pclatu	equ	0xFFB
  1178                           pclath	equ	0xFFA
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           prodh	equ	0xFF4
  1184                           prodl	equ	0xFF3
  1185                           intcon	equ	0xFF2
  1186                           postinc0	equ	0xFEE
  1187                           fsr0h	equ	0xFEA
  1188                           fsr0l	equ	0xFE9
  1189                           wreg	equ	0xFE8
  1190                           fsr1h	equ	0xFE2
  1191                           fsr1l	equ	0xFE1
  1192                           bsr	equ	0xFE0
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      46
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_multiplexeur

Critical Paths under _low_isr in COMRAM

    _low_isr->_writeDataToUART

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     330
                                             37 COMRAM     5     5      0
                          _initComms
                          _initPorts
                       _multiplexeur
 ---------------------------------------------------------------------------------
 (1) _multiplexeur                                         2     2      0     255
                                             35 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0      15
                                              1 COMRAM    17    17      0
                    _writeDataToUART
 ---------------------------------------------------------------------------------
 (3) _writeDataToUART                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             18 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initComms
   _initPorts
   _multiplexeur

 _low_isr (ROOT)
   _writeDataToUART

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      2E       1       48.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7E       6        0.0%
DATA                 0      0      7E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Nov 19 19:19:09 2014

             __CFG_CP0$ON 000000               __CFG_CP1$ON 000000               __CFG_CP2$ON 000000  
             __CFG_CP3$ON 000000                        l56 0252                        l90 01FA  
                      l91 01FE                        l83 01E2                        l85 01E6  
                      l86 01EA                        l87 01EE                        l88 01F2  
                      l89 01F6               __CFG_CPB$ON 000000               __CFG_CPD$ON 000000  
                      _it 002D                        bsr 000FE0               __CFG_BORV$3 000000  
                     l808 01A2                       l818 01B2                       l844 0202  
                     l828 01C2                       l838 01D8                       l768 0162  
                     l778 0172                       l874 025E                       l788 0182  
                     l884 02B6                       l798 0192                       _GIE 007F97  
                     u225 028C                       u235 02B4                       _PSA 007EAB  
                     _msg 0060                       wreg 000FE8              __CFG_IESO$ON 000000  
              _TXSTA2bits 000FBA                      _ADON 007E10                      _T0CS 007EAD  
                    _PEIE 007F96                      i1l52 0108              __CFG_WRT0$ON 000000  
            __CFG_WRT1$ON 000000              __CFG_WRT2$ON 000000              __CFG_WRT3$ON 000000  
           __CFG_EBTR0$ON 000000             __CFG_EBTR1$ON 000000             __CFG_EBTR2$ON 000000  
           __CFG_EBTR3$ON 000000              __CFG_WRTB$ON 000000              __CFG_WRTC$ON 000000  
            __CFG_WRTD$ON 000000             __CFG_EBTRB$ON 000000                      _main 0236  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr0l 000FE9  
                    fsr2h 000FDA                      fsr1l 000FE1                      fsr2l 000FD9  
                    pclat 000FFA                      prodh 000FF4                      prodl 000FF3  
                    start 0150         ??_writeDataToUART 0001             __CFG_RETEN$ON 000000  
            _BAUDCON2bits 000FB9                     ?_main 0001                     _T0PS0 007EA8  
                   _T0PS1 007EA9                     _T0PS2 007EAA                     _RC2IF 007D25  
                   i1l132 0350                     i1l854 0070                     i1l858 0078  
                   _SPBRG 000FAF                     _PORTA 000F80                     _PORTB 000F81  
                   _PORTC 000F82                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94            __CFG_FCMEN$OFF 000000                     main@i 002A  
                   main@j 0026           __end_of_low_isr 00C0                     tablat 000FF5  
                   status 000FD8             multiplexeur@d 0025             multiplexeur@n 0024  
          __CFG_MCLRE$OFF 000000           __initialization 0330              __end_of_main 02C0  
                  ??_main 0026             __activetblptr 000002            __CFG_PLLCFG$ON 000000  
                  _ANCON0 000F5D                    _T08BIT 007EAE           __CFG_BBSIZ$BB2K 000000  
          __CFG_WDTEN$OFF 000000                    _INTCON 000FF2                    _RCREG2 000F7A  
                  _OSCCON 000FD3                    _TMR0IE 007F95                    _TMR0IF 007F92  
                  _SPBRG2 000F7B                    _TXREG2 000F79            __CFG_PWRTEN$ON 000000  
          __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000                    clear_0 0336  
                  _tampon 002E                 ??_low_isr 0002                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 0344            __pcstackCOMRAM 0001           _writeDataToUART 034E  
              __pbssBANK0 0060        __size_of_initComms 0040        __size_of_initPorts 0030  
        __CFG_CANMX$PORTB 000000        __size_of_timer_isr 0090                   _SPBRGH2 000F7C  
                 __Hparam 0000                   __Lparam 0000                   __pcinit 0330  
                 __ramtop 0F00                   __ptext0 0236                   __ptext1 0154  
                 __ptext2 0300                   __ptext3 02C0                   __ptext5 034E  
 __end_of_writeDataToUART 035A         __end_of_initComms 0300         __end_of_initPorts 0330  
       __CFG_MSSPMSK$MSK7 000000                   _low_isr 0018      end_of_initialization 0344  
           __Lmediumconst 0000         __end_of_timer_isr 0150                   postinc0 000FEE  
               _PORTCbits 000F82          __CFG_FOSC$INTIO1 000000             ?_multiplexeur 0001  
        ?_writeDataToUART 0001            ??_multiplexeur 0024       start_initialization 0330  
          _flag_reception 002C               __pbssCOMRAM 002B               __pintcodelo 0018  
                ?_low_isr 0001                 _initComms 02C0                 _initPorts 0300  
                _PIE3bits 000FA3      __end_of_multiplexeur 0236                  _PIR3bits 000FA4  
                _RCONbits 000FD0                 _timer_isr 00C0          __CFG_SOSCSEL$DIG 000000  
              ?_initComms 0001                ?_initPorts 0001                  __Hrparam 0000  
                __Lrparam 0000        __CFG_BOREN$SBORDIS 000000                ?_timer_isr 0001  
        __size_of_low_isr 00A8                  _compteur 002B             __size_of_main 008A  
     __CFG_INTOSCSEL$HIGH 000000               _OSCTUNEbits 000F9B               ??_initComms 0024  
             ??_initPorts 0024  __size_of_writeDataToUART 000C                  intlevel1 0000  
   __size_of_multiplexeur 00E2                _RCSTA2bits 000FA6        __CFG_WDTPS$1048576 000000  
             ??_timer_isr 0013              _multiplexeur 0154       __CFG_BORPWR$ZPBORMV 000000  
     writeDataToUART@data 0001  
