

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 18 14:04:20 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000586                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _MASK
    25  000586  80                 	db	128
    26  000587  40                 	db	64
    27  000588  20                 	db	32
    28  000589  10                 	db	16
    29  00058A  08                 	db	8
    30  00058B  04                 	db	4
    31  00058C  02                 	db	2
    32  00058D  01                 	db	1
    33  0000                     _ADCON1	set	4033
    34  0000                     _ANCON0	set	3933
    35  0000                     _BAUDCON2bits	set	4025
    36  0000                     _INTCON	set	4082
    37  0000                     _OSCCON	set	4051
    38  0000                     _OSCTUNEbits	set	3995
    39  0000                     _PIE3bits	set	4003
    40  0000                     _PIR3bits	set	4004
    41  0000                     _PORTA	set	3968
    42  0000                     _PORTAbits	set	3968
    43  0000                     _PORTB	set	3969
    44  0000                     _PORTBbits	set	3969
    45  0000                     _PORTC	set	3970
    46  0000                     _PORTCbits	set	3970
    47  0000                     _RCONbits	set	4048
    48  0000                     _RCREG2	set	3962
    49  0000                     _RCSTA2bits	set	4006
    50  0000                     _SPBRG	set	4015
    51  0000                     _SPBRG2	set	3963
    52  0000                     _SPBRGH2	set	3964
    53  0000                     _TRISA	set	3986
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISC	set	3988
    56  0000                     _TXREG2	set	3961
    57  0000                     _TXSTA2bits	set	4026
    58  0000                     _GIE	set	32663
    59  0000                     _PEIE	set	32662
    60  0000                     _RC2IF	set	32037
    61  0000                     _TMR0IE	set	32661
    62  0000                     _TMR0IF	set	32658
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  0004D2                     __pcinit:
    68                           	opt stack 0
    69  0004D2                     start_initialization:
    70                           	opt stack 0
    71  0004D2                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to BANK0 (140 bytes)
    75  0004D2  EE00  F060         	lfsr	0,__pbssBANK0
    76  0004D6  0E8C               	movlw	140
    77  0004D8                     clear_0:
    78  0004D8  6AEE               	clrf	postinc0,c
    79  0004DA  06E8               	decf	wreg,f,c
    80  0004DC  E1FD               	bnz	clear_0
    81                           
    82                           ; Clear objects allocated to COMRAM (22 bytes)
    83  0004DE  EE00  F02D         	lfsr	0,__pbssCOMRAM
    84  0004E2  0E16               	movlw	22
    85  0004E4                     clear_1:
    86  0004E4  6AEE               	clrf	postinc0,c
    87  0004E6  06E8               	decf	wreg,f,c
    88  0004E8  E1FD               	bnz	clear_1
    89                           
    90                           ; Initialize objects allocated to COMRAM (8 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  0004EA  0E86               	movlw	low __pidataCOMRAM
    93  0004EC  6EF6               	movwf	tblptrl,c
    94  0004EE  0E05               	movlw	high __pidataCOMRAM
    95  0004F0  6EF7               	movwf	tblptrh,c
    96  0004F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  0004F4  6EF8               	movwf	tblptru,c
    98  0004F6  EE00  F043         	lfsr	0,__pdataCOMRAM
    99  0004FA  EE10 F008          	lfsr	1,8
   100  0004FE                     copy_data0:
   101  0004FE  0009               	tblrd		*+
   102  000500  CFF5 FFEE          	movff	tablat,postinc0
   103  000504  50E5               	movf	postdec1,w,c
   104  000506  50E1               	movf	fsr1l,w,c
   105  000508  E1FA               	bnz	copy_data0
   106  00050A                     end_of_initialization:
   107                           	opt stack 0
   108  00050A                     __end_of__initialization:
   109                           	opt stack 0
   110  00050A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111  00050C  6EF8               	movwf	tblptru,c
   112  00050E  0100               	movlb	0
   113  000510  EF21  F002         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           tblptrl	equ	0xFF6
   117                           tablat	equ	0xFF5
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           postdec1	equ	0xFE5
   121                           fsr1l	equ	0xFE1
   122                           
   123                           	psect	bssCOMRAM
   124  00002D                     __pbssCOMRAM:
   125                           	opt stack 0
   126  00002D                     _led_state:
   127                           	opt stack 0
   128  00002D                     	ds	16
   129  00003D                     _compteur:
   130                           	opt stack 0
   131  00003D                     	ds	2
   132  00003F                     _compteur_clock:
   133                           	opt stack 0
   134  00003F                     	ds	1
   135  000040                     _mux:
   136                           	opt stack 0
   137  000040                     	ds	1
   138  000041                     _state_clock:
   139                           	opt stack 0
   140  000041                     	ds	1
   141  000042                     _tampon:
   142                           	opt stack 0
   143  000042                     	ds	1
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	dataCOMRAM
   154  000043                     __pdataCOMRAM:
   155                           	opt stack 0
   156  000043                     _MASK:
   157                           	opt stack 0
   158  000043                     	ds	8
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           postdec1	equ	0xFE5
   166                           fsr1l	equ	0xFE1
   167                           
   168                           	psect	bssBANK0
   169  000060                     __pbssBANK0:
   170                           	opt stack 0
   171  000060                     _stock_led:
   172                           	opt stack 0
   173  000060                     	ds	140
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	cstackCOMRAM
   184  000001                     __pcstackCOMRAM:
   185                           	opt stack 0
   186  000001                     ??_high_isr:
   187  000001                     
   188                           ; 0 bytes @ 0x0
   189  000001                     	ds	17
   190  000012                     ??_timer_isr:
   191                           
   192                           ; 0 bytes @ 0x11
   193  000012                     	ds	17
   194  000023                     decodage@n:
   195                           	opt stack 0
   196  000023                     affichage@d:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x22
   200  000023                     	ds	2
   201  000025                     ??_decodage:
   202                           
   203                           ; 0 bytes @ 0x24
   204  000025                     	ds	3
   205  000028                     decodage@a:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x27
   209  000028                     	ds	1
   210  000029                     main@i:
   211                           	opt stack 0
   212                           
   213                           ; 4 bytes @ 0x28
   214  000029                     	ds	4
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           postdec1	equ	0xFE5
   222                           fsr1l	equ	0xFE1
   223                           
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 138 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;  i               4   40[COMRAM] long 
   234 ;; Return value:  Size  Location     Type
   235 ;;		None               void
   236 ;; Registers used:
   237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   247 ;;Total ram usage:        4 bytes
   248 ;; Hardware stack levels required when called:    2
   249 ;; This function calls:
   250 ;;		_affichage
   251 ;;		_decodage
   252 ;;		_initComms
   253 ;;		_initPorts
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text0
   260  000442                     __ptext0:
   261                           	opt stack 0
   262  000442                     _main:
   263                           	opt stack 29
   264                           
   265                           ;main.c: 141: long i = 0;
   266                           
   267                           ;incstack = 0
   268  000442  0E00               	movlw	0
   269  000444  6E29               	movwf	main@i,c
   270  000446  0E00               	movlw	0
   271  000448  6E2A               	movwf	main@i+1,c
   272  00044A  0E00               	movlw	0
   273  00044C  6E2B               	movwf	main@i+2,c
   274  00044E  0E00               	movlw	0
   275  000450  6E2C               	movwf	main@i+3,c
   276                           
   277                           ;main.c: 142: initPorts();
   278  000452  ECAA  F002         	call	_initPorts	;wreg free
   279                           
   280                           ;main.c: 143: initComms();
   281  000456  EC8A  F002         	call	_initComms	;wreg free
   282  00045A                     l879:
   283                           
   284                           ;main.c: 147: decodage(0);
   285  00045A  0E00               	movlw	0
   286  00045C  6E24               	movwf	decodage@n+1,c
   287  00045E  0E00               	movlw	0
   288  000460  6E23               	movwf	decodage@n,c
   289  000462  ECA0  F001         	call	_decodage	;wreg free
   290                           
   291                           ;main.c: 149: for (mux = 0; mux < 4; mux++) {
   292  000466  0E00               	movlw	0
   293  000468  6E40               	movwf	_mux,c
   294  00046A  0E03               	movlw	3
   295  00046C  6440               	cpfsgt	_mux,c
   296  00046E  D001               	goto	l887
   297  000470  D7F4               	goto	l879
   298  000472                     l887:
   299                           
   300                           ;main.c: 150: affichage();
   301  000472  ECB5  F000         	call	_affichage	;wreg free
   302                           
   303                           ;main.c: 152: for (i = 0; i < 100000; i++) {
   304  000476  0E00               	movlw	0
   305  000478  6E29               	movwf	main@i,c
   306  00047A  0E00               	movlw	0
   307  00047C  6E2A               	movwf	main@i+1,c
   308  00047E  0E00               	movlw	0
   309  000480  6E2B               	movwf	main@i+2,c
   310  000482  0E00               	movlw	0
   311  000484  6E2C               	movwf	main@i+3,c
   312  000486  502C               	movf	main@i+3,w,c
   313  000488  0A80               	xorlw	128
   314  00048A  0F80               	addlw	128
   315  00048C  E108               	bnz	u415
   316  00048E  0E01               	movlw	1
   317  000490  5C2B               	subwf	main@i+2,w,c
   318  000492  E105               	bnz	u415
   319  000494  0E86               	movlw	134
   320  000496  5C2A               	subwf	main@i+1,w,c
   321  000498  E102               	bnz	u415
   322  00049A  0EA0               	movlw	160
   323  00049C  5C29               	subwf	main@i,w,c
   324  00049E                     u415:
   325  00049E  B0D8               	btfsc	status,0,c
   326  0004A0  D013               	goto	l897
   327  0004A2  0E01               	movlw	1
   328  0004A4  2629               	addwf	main@i,f,c
   329  0004A6  0E00               	movlw	0
   330  0004A8  222A               	addwfc	main@i+1,f,c
   331  0004AA  222B               	addwfc	main@i+2,f,c
   332  0004AC  222C               	addwfc	main@i+3,f,c
   333  0004AE  502C               	movf	main@i+3,w,c
   334  0004B0  0A80               	xorlw	128
   335  0004B2  0F80               	addlw	128
   336  0004B4  E108               	bnz	u425
   337  0004B6  0E01               	movlw	1
   338  0004B8  5C2B               	subwf	main@i+2,w,c
   339  0004BA  E105               	bnz	u425
   340  0004BC  0E86               	movlw	134
   341  0004BE  5C2A               	subwf	main@i+1,w,c
   342  0004C0  E102               	bnz	u425
   343  0004C2  0EA0               	movlw	160
   344  0004C4  5C29               	subwf	main@i,w,c
   345  0004C6                     u425:
   346  0004C6  D7EB               	goto	u415
   347  0004C8                     l897:
   348  0004C8  2A40               	incf	_mux,f,c
   349  0004CA  0E03               	movlw	3
   350  0004CC  6440               	cpfsgt	_mux,c
   351  0004CE  D7D1               	goto	l887
   352  0004D0  D7C4               	goto	l879
   353  0004D2                     __end_of_main:
   354                           	opt stack 0
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           status	equ	0xFD8
   364                           
   365 ;; *************** function _initPorts *****************
   366 ;; Defined at:
   367 ;;		line 6 in file "port.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;		None               void
   374 ;; Registers used:
   375 ;;		wreg, status,2
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; Hardware stack levels required when called:    1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text1
   396  000554                     __ptext1:
   397                           	opt stack 0
   398  000554                     _initPorts:
   399                           	opt stack 29
   400                           
   401                           ;port.c: 10: OSCCON= 0x70;
   402                           
   403                           ;incstack = 0
   404  000554  0E70               	movlw	112
   405  000556  6ED3               	movwf	4051,c	;volatile
   406                           
   407                           ;port.c: 12: ANCON0 = 0b00000000;
   408  000558  0E00               	movlw	0
   409  00055A  010F               	movlb	15	; () banked
   410  00055C  6F5D               	movwf	93,b	;volatile
   411                           
   412                           ;port.c: 13: ADCON1 = 0b00000000;
   413  00055E  0E00               	movlw	0
   414  000560  6EC1               	movwf	4033,c	;volatile
   415                           
   416                           ;port.c: 18: PORTA = 0b00000000;
   417  000562  0E00               	movlw	0
   418  000564  6E80               	movwf	3968,c	;volatile
   419                           
   420                           ;port.c: 19: TRISA = 0b00000000;
   421  000566  0E00               	movlw	0
   422  000568  6E92               	movwf	3986,c	;volatile
   423                           
   424                           ;port.c: 21: PORTB = 0b01000000;
   425  00056A  0E40               	movlw	64
   426  00056C  6E81               	movwf	3969,c	;volatile
   427                           
   428                           ;port.c: 22: TRISB = 0b10000000;
   429  00056E  0E80               	movlw	128
   430  000570  6E93               	movwf	3987,c	;volatile
   431                           
   432                           ;port.c: 24: PORTC = 0b00000000;
   433  000572  0E00               	movlw	0
   434  000574  6E82               	movwf	3970,c	;volatile
   435                           
   436                           ;port.c: 25: TRISC = 0b00000000;
   437  000576  0E00               	movlw	0
   438  000578  6E94               	movwf	3988,c	;volatile
   439                           
   440                           ; BSR set to: 15
   441                           ;port.c: 27: GIE = 1;
   442  00057A  8EF2               	bsf	intcon,7,c	;volatile
   443                           
   444                           ; BSR set to: 15
   445                           ;port.c: 28: PEIE = 1;
   446  00057C  8CF2               	bsf	intcon,6,c	;volatile
   447                           
   448                           ;port.c: 29: INTCON =0b11100000;
   449  00057E  0EE0               	movlw	224
   450  000580  6EF2               	movwf	intcon,c	;volatile
   451                           
   452                           ; BSR set to: 15
   453                           ;port.c: 30: OSCTUNEbits.PLLEN = 1;
   454  000582  8C9B               	bsf	3995,6,c	;volatile
   455                           
   456                           ; BSR set to: 15
   457  000584  0012               	return	
   458  000586                     __end_of_initPorts:
   459                           	opt stack 0
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           intcon	equ	0xFF2
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _initComms *****************
   472 ;; Defined at:
   473 ;;		line 6 in file "usart.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;		None               void
   480 ;; Registers used:
   481 ;;		wreg, status,2
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text2
   502  000514                     __ptext2:
   503                           	opt stack 0
   504  000514                     _initComms:
   505                           	opt stack 29
   506                           
   507                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   508                           
   509                           ; BSR set to: 15
   510                           ;incstack = 0
   511  000514  9EBA               	bcf	4026,7,c	;volatile
   512                           
   513                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   514  000516  9CBA               	bcf	4026,6,c	;volatile
   515                           
   516                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   517  000518  8ABA               	bsf	4026,5,c	;volatile
   518                           
   519                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   520  00051A  98BA               	bcf	4026,4,c	;volatile
   521                           
   522                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   523  00051C  96BA               	bcf	4026,3,c	;volatile
   524                           
   525                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   526  00051E  84BA               	bsf	4026,2,c	;volatile
   527                           
   528                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   529  000520  82BA               	bsf	4026,1,c	;volatile
   530                           
   531                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   532  000522  90BA               	bcf	4026,0,c	;volatile
   533                           
   534                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   535  000524  8EA6               	bsf	4006,7,c	;volatile
   536                           
   537                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   538  000526  9CA6               	bcf	4006,6,c	;volatile
   539                           
   540                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   541  000528  9AA6               	bcf	4006,5,c	;volatile
   542                           
   543                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   544  00052A  88A6               	bsf	4006,4,c	;volatile
   545                           
   546                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   547  00052C  96A6               	bcf	4006,3,c	;volatile
   548                           
   549                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   550  00052E  94A6               	bcf	4006,2,c	;volatile
   551                           
   552                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   553  000530  92A6               	bcf	4006,1,c	;volatile
   554                           
   555                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
   556  000532  90A6               	bcf	4006,0,c	;volatile
   557                           
   558                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
   559  000534  9EB9               	bcf	4025,7,c	;volatile
   560                           
   561                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
   562  000536  8CB9               	bsf	4025,6,c	;volatile
   563                           
   564                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
   565  000538  9AB9               	bcf	4025,5,c	;volatile
   566                           
   567                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
   568  00053A  98B9               	bcf	4025,4,c	;volatile
   569                           
   570                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
   571  00053C  86B9               	bsf	4025,3,c	;volatile
   572                           
   573                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
   574  00053E  92B9               	bcf	4025,1,c	;volatile
   575                           
   576                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
   577  000540  90B9               	bcf	4025,0,c	;volatile
   578                           
   579                           ;usart.c: 34: PIE3bits.RC2IE = 1;
   580  000542  8AA3               	bsf	4003,5,c	;volatile
   581                           
   582                           ;usart.c: 35: RCONbits.IPEN = 1;
   583  000544  8ED0               	bsf	4048,7,c	;volatile
   584                           
   585                           ;usart.c: 45: SPBRG = 115;
   586  000546  0E73               	movlw	115
   587  000548  6EAF               	movwf	4015,c	;volatile
   588                           
   589                           ;usart.c: 46: SPBRGH2 = 0;
   590  00054A  0E00               	movlw	0
   591  00054C  6E7C               	movwf	3964,c	;volatile
   592                           
   593                           ;usart.c: 47: SPBRG2 = 137;
   594  00054E  0E89               	movlw	137
   595  000550  6E7B               	movwf	3963,c	;volatile
   596  000552  0012               	return	
   597  000554                     __end_of_initComms:
   598                           	opt stack 0
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           intcon	equ	0xFF2
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           postdec1	equ	0xFE5
   607                           fsr1l	equ	0xFE1
   608                           status	equ	0xFD8
   609                           
   610 ;; *************** function _decodage *****************
   611 ;; Defined at:
   612 ;;		line 160 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  n               2   34[COMRAM] int 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  a               1   39[COMRAM] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;		None               void
   619 ;; Registers used:
   620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;Total ram usage:        6 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text3
   641  000340                     __ptext3:
   642                           	opt stack 0
   643  000340                     _decodage:
   644                           	opt stack 29
   645                           
   646                           ;main.c: 161: char a = 0;
   647                           
   648                           ;incstack = 0
   649  000340  0E00               	movlw	0
   650  000342  6E28               	movwf	decodage@a,c
   651                           
   652                           ;main.c: 162: for (a = 0; a < 8; a++) {
   653  000344  0E00               	movlw	0
   654  000346  6E28               	movwf	decodage@a,c
   655  000348  0E07               	movlw	7
   656  00034A  6428               	cpfsgt	decodage@a,c
   657  00034C  D001               	goto	l755
   658  00034E  0012               	return	
   659  000350                     l755:
   660                           
   661                           ;main.c: 163: if (MASK[a] & stock_led[2 * 0 + 16 * n])
   662  000350  C023  F025         	movff	decodage@n,??_decodage
   663  000354  C024  F026         	movff	decodage@n+1,??_decodage+1
   664  000358  3A25               	swapf	??_decodage,f,c
   665  00035A  3A26               	swapf	??_decodage+1,f,c
   666  00035C  0EF0               	movlw	240
   667  00035E  1626               	andwf	??_decodage+1,f,c
   668  000360  5025               	movf	??_decodage,w,c
   669  000362  0B0F               	andlw	15
   670  000364  1226               	iorwf	??_decodage+1,f,c
   671  000366  0EF0               	movlw	240
   672  000368  1625               	andwf	??_decodage,f,c
   673  00036A  0100               	movlb	0	; () banked
   674  00036C  0E60               	movlw	low _stock_led
   675  00036E  2425               	addwf	??_decodage,w,c
   676  000370  6ED9               	movwf	fsr2l,c
   677  000372  0100               	movlb	0	; () banked
   678  000374  0E00               	movlw	high _stock_led
   679  000376  2026               	addwfc	??_decodage+1,w,c
   680  000378  6EDA               	movwf	fsr2h,c
   681  00037A  50DF               	movf	indf2,w,c
   682  00037C  6E27               	movwf	(??_decodage+2)& (0+255),c
   683  00037E  5028               	movf	decodage@a,w,c
   684  000380  0D01               	mullw	1
   685  000382  0E43               	movlw	low _MASK
   686  000384  24F3               	addwf	prodl,w,c
   687  000386  6ED9               	movwf	fsr2l,c
   688  000388  0E00               	movlw	high _MASK
   689  00038A  20F4               	addwfc	prodh,w,c
   690  00038C  6EDA               	movwf	fsr2h,c
   691  00038E  50DF               	movf	indf2,w,c
   692  000390  1427               	andwf	??_decodage+2,w,c
   693  000392  0900               	iorlw	0
   694  000394  B4D8               	btfsc	status,2,c
   695  000396  D00A               	goto	l759
   696                           
   697                           ; BSR set to: 0
   698                           ;main.c: 164: {
   699                           ;main.c: 165: led_state[0][a] = 1;
   700  000398  5028               	movf	decodage@a,w,c
   701  00039A  0D01               	mullw	1
   702  00039C  0E2D               	movlw	low _led_state
   703  00039E  24F3               	addwf	prodl,w,c
   704  0003A0  6ED9               	movwf	fsr2l,c
   705  0003A2  0E00               	movlw	high _led_state
   706  0003A4  20F4               	addwfc	prodh,w,c
   707  0003A6  6EDA               	movwf	fsr2h,c
   708  0003A8  0E01               	movlw	1
   709  0003AA  D009               	goto	L1
   710  0003AC                     l759:
   711                           
   712                           ; BSR set to: 0
   713                           ;main.c: 167: led_state[0][a] = 0;
   714  0003AC  5028               	movf	decodage@a,w,c
   715  0003AE  0D01               	mullw	1
   716  0003B0  0E2D               	movlw	low _led_state
   717  0003B2  24F3               	addwf	prodl,w,c
   718  0003B4  6ED9               	movwf	fsr2l,c
   719  0003B6  0E00               	movlw	high _led_state
   720  0003B8  20F4               	addwfc	prodh,w,c
   721  0003BA  6EDA               	movwf	fsr2h,c
   722  0003BC  0E00               	movlw	0
   723  0003BE                     L1:
   724  0003BE  6EDF               	movwf	indf2,c
   725                           
   726                           ; BSR set to: 0
   727                           ;main.c: 168: }
   728                           ;main.c: 170: if (MASK[a] & stock_led[2 * 0 + 1 + 16 * n]) {
   729  0003C0  C023  F025         	movff	decodage@n,??_decodage
   730  0003C4  C024  F026         	movff	decodage@n+1,??_decodage+1
   731  0003C8  3A25               	swapf	??_decodage,f,c
   732  0003CA  3A26               	swapf	??_decodage+1,f,c
   733  0003CC  0EF0               	movlw	240
   734  0003CE  1626               	andwf	??_decodage+1,f,c
   735  0003D0  5025               	movf	??_decodage,w,c
   736  0003D2  0B0F               	andlw	15
   737  0003D4  1226               	iorwf	??_decodage+1,f,c
   738  0003D6  0EF0               	movlw	240
   739  0003D8  1625               	andwf	??_decodage,f,c
   740  0003DA  0E01               	movlw	1
   741  0003DC  2625               	addwf	??_decodage,f,c
   742  0003DE  0E00               	movlw	0
   743  0003E0  2226               	addwfc	??_decodage+1,f,c
   744  0003E2  0100               	movlb	0	; () banked
   745  0003E4  0E60               	movlw	low _stock_led
   746  0003E6  2425               	addwf	??_decodage,w,c
   747  0003E8  6ED9               	movwf	fsr2l,c
   748  0003EA  0100               	movlb	0	; () banked
   749  0003EC  0E00               	movlw	high _stock_led
   750  0003EE  2026               	addwfc	??_decodage+1,w,c
   751  0003F0  6EDA               	movwf	fsr2h,c
   752  0003F2  50DF               	movf	indf2,w,c
   753  0003F4  6E27               	movwf	(??_decodage+2)& (0+255),c
   754  0003F6  5028               	movf	decodage@a,w,c
   755  0003F8  0D01               	mullw	1
   756  0003FA  0E43               	movlw	low _MASK
   757  0003FC  24F3               	addwf	prodl,w,c
   758  0003FE  6ED9               	movwf	fsr2l,c
   759  000400  0E00               	movlw	high _MASK
   760  000402  20F4               	addwfc	prodh,w,c
   761  000404  6EDA               	movwf	fsr2h,c
   762  000406  50DF               	movf	indf2,w,c
   763  000408  1427               	andwf	??_decodage+2,w,c
   764  00040A  0900               	iorlw	0
   765  00040C  B4D8               	btfsc	status,2,c
   766  00040E  D00A               	goto	l763
   767                           
   768                           ; BSR set to: 0
   769                           ;main.c: 171: led_state[1][a] = 1;
   770  000410  5028               	movf	decodage@a,w,c
   771  000412  0D01               	mullw	1
   772  000414  0E35               	movlw	low (_led_state+8)
   773  000416  24F3               	addwf	prodl,w,c
   774  000418  6ED9               	movwf	fsr2l,c
   775  00041A  0E00               	movlw	high (_led_state+8)
   776  00041C  20F4               	addwfc	prodh,w,c
   777  00041E  6EDA               	movwf	fsr2h,c
   778  000420  0E01               	movlw	1
   779  000422  D009               	goto	L2
   780  000424                     l763:
   781                           
   782                           ; BSR set to: 0
   783                           ;main.c: 173: led_state[1][a] = 0;
   784  000424  5028               	movf	decodage@a,w,c
   785  000426  0D01               	mullw	1
   786  000428  0E35               	movlw	low (_led_state+8)
   787  00042A  24F3               	addwf	prodl,w,c
   788  00042C  6ED9               	movwf	fsr2l,c
   789  00042E  0E00               	movlw	high (_led_state+8)
   790  000430  20F4               	addwfc	prodh,w,c
   791  000432  6EDA               	movwf	fsr2h,c
   792  000434  0E00               	movlw	0
   793  000436                     L2:
   794  000436  6EDF               	movwf	indf2,c
   795                           
   796                           ; BSR set to: 0
   797                           
   798                           ; BSR set to: 0
   799  000438  2A28               	incf	decodage@a,f,c
   800                           
   801                           ; BSR set to: 0
   802  00043A  0E07               	movlw	7
   803  00043C  6428               	cpfsgt	decodage@a,c
   804  00043E  D788               	goto	l755
   805  000440  0012               	return	
   806  000442                     __end_of_decodage:
   807                           	opt stack 0
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           prodh	equ	0xFF4
   813                           prodl	equ	0xFF3
   814                           intcon	equ	0xFF2
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           postdec1	equ	0xFE5
   818                           fsr1l	equ	0xFE1
   819                           indf2	equ	0xFDF
   820                           fsr2h	equ	0xFDA
   821                           fsr2l	equ	0xFD9
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _affichage *****************
   825 ;; Defined at:
   826 ;;		line 190 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  d               2   34[COMRAM] int 
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text4
   855  00016A                     __ptext4:
   856                           	opt stack 0
   857  00016A                     _affichage:
   858                           	opt stack 29
   859                           
   860                           ;main.c: 191: int d;
   861                           ;main.c: 192: PORTAbits.RA0 = 0;for (d = 0; d < 10; d++) {}
   862                           
   863                           ;incstack = 0
   864  00016A  9080               	bcf	3968,0,c	;volatile
   865  00016C  0E00               	movlw	0
   866  00016E  6E24               	movwf	affichage@d+1,c
   867  000170  0E00               	movlw	0
   868  000172  6E23               	movwf	affichage@d,c
   869  000174  5024               	movf	affichage@d+1,w,c
   870  000176  0A80               	xorlw	128
   871  000178  0F80               	addlw	-128
   872  00017A  0E0A               	movlw	10
   873  00017C  B4D8               	btfsc	status,2,c
   874  00017E  5C23               	subwf	affichage@d,w,c
   875  000180  B0D8               	btfsc	status,0,c
   876  000182  D003               	goto	l73
   877  000184  4A23               	infsnz	affichage@d,f,c
   878  000186  2A24               	incf	affichage@d+1,f,c
   879  000188  D7F5               	goto	L3
   880  00018A                     l73:
   881                           
   882                           ;main.c: 193: PORTAbits.RA3 = 0;for (d = 0; d < 10; d++) {}
   883  00018A  9680               	bcf	3968,3,c	;volatile
   884  00018C  0E00               	movlw	0
   885  00018E  6E24               	movwf	affichage@d+1,c
   886  000190  0E00               	movlw	0
   887  000192  6E23               	movwf	affichage@d,c
   888  000194  5024               	movf	affichage@d+1,w,c
   889  000196  0A80               	xorlw	128
   890  000198  0F80               	addlw	-128
   891  00019A  0E0A               	movlw	10
   892  00019C  B4D8               	btfsc	status,2,c
   893  00019E  5C23               	subwf	affichage@d,w,c
   894  0001A0  B0D8               	btfsc	status,0,c
   895  0001A2  D003               	goto	l75
   896  0001A4  4A23               	infsnz	affichage@d,f,c
   897  0001A6  2A24               	incf	affichage@d+1,f,c
   898  0001A8  D7F5               	goto	L4
   899  0001AA                     l75:
   900                           
   901                           ;main.c: 194: PORTAbits.RA6 = 0;for (d = 0; d < 10; d++) {}
   902  0001AA  9C80               	bcf	3968,6,c	;volatile
   903  0001AC  0E00               	movlw	0
   904  0001AE  6E24               	movwf	affichage@d+1,c
   905  0001B0  0E00               	movlw	0
   906  0001B2  6E23               	movwf	affichage@d,c
   907  0001B4  5024               	movf	affichage@d+1,w,c
   908  0001B6  0A80               	xorlw	128
   909  0001B8  0F80               	addlw	-128
   910  0001BA  0E0A               	movlw	10
   911  0001BC  B4D8               	btfsc	status,2,c
   912  0001BE  5C23               	subwf	affichage@d,w,c
   913  0001C0  B0D8               	btfsc	status,0,c
   914  0001C2  D003               	goto	l77
   915  0001C4  4A23               	infsnz	affichage@d,f,c
   916  0001C6  2A24               	incf	affichage@d+1,f,c
   917  0001C8  D7F5               	goto	L5
   918  0001CA                     l77:
   919                           
   920                           ;main.c: 195: PORTCbits.RC3 = 0;for (d = 0; d < 10; d++) {}
   921  0001CA  9682               	bcf	3970,3,c	;volatile
   922  0001CC  0E00               	movlw	0
   923  0001CE  6E24               	movwf	affichage@d+1,c
   924  0001D0  0E00               	movlw	0
   925  0001D2  6E23               	movwf	affichage@d,c
   926  0001D4  5024               	movf	affichage@d+1,w,c
   927  0001D6  0A80               	xorlw	128
   928  0001D8  0F80               	addlw	-128
   929  0001DA  0E0A               	movlw	10
   930  0001DC  B4D8               	btfsc	status,2,c
   931  0001DE  5C23               	subwf	affichage@d,w,c
   932  0001E0  B0D8               	btfsc	status,0,c
   933  0001E2  D003               	goto	l79
   934  0001E4  4A23               	infsnz	affichage@d,f,c
   935  0001E6  2A24               	incf	affichage@d+1,f,c
   936  0001E8  D7F5               	goto	L6
   937  0001EA                     l79:
   938                           
   939                           ;main.c: 196: PORTBbits.RB5 = 0;for (d = 0; d < 10; d++) {}
   940  0001EA  9A81               	bcf	3969,5,c	;volatile
   941  0001EC  0E00               	movlw	0
   942  0001EE  6E24               	movwf	affichage@d+1,c
   943  0001F0  0E00               	movlw	0
   944  0001F2  6E23               	movwf	affichage@d,c
   945  0001F4  5024               	movf	affichage@d+1,w,c
   946  0001F6  0A80               	xorlw	128
   947  0001F8  0F80               	addlw	-128
   948  0001FA  0E0A               	movlw	10
   949  0001FC  B4D8               	btfsc	status,2,c
   950  0001FE  5C23               	subwf	affichage@d,w,c
   951  000200  B0D8               	btfsc	status,0,c
   952  000202  D003               	goto	l81
   953  000204  4A23               	infsnz	affichage@d,f,c
   954  000206  2A24               	incf	affichage@d+1,f,c
   955  000208  D7F5               	goto	L7
   956  00020A                     l81:
   957                           
   958                           ;main.c: 197: PORTBbits.RB3 = 0;for (d = 0; d < 10; d++) {}
   959  00020A  9681               	bcf	3969,3,c	;volatile
   960  00020C  0E00               	movlw	0
   961  00020E  6E24               	movwf	affichage@d+1,c
   962  000210  0E00               	movlw	0
   963  000212  6E23               	movwf	affichage@d,c
   964  000214  5024               	movf	affichage@d+1,w,c
   965  000216  0A80               	xorlw	128
   966  000218  0F80               	addlw	-128
   967  00021A  0E0A               	movlw	10
   968  00021C  B4D8               	btfsc	status,2,c
   969  00021E  5C23               	subwf	affichage@d,w,c
   970  000220  B0D8               	btfsc	status,0,c
   971  000222  D003               	goto	l83
   972  000224  4A23               	infsnz	affichage@d,f,c
   973  000226  2A24               	incf	affichage@d+1,f,c
   974  000228  D7F5               	goto	L8
   975  00022A                     l83:
   976                           
   977                           ;main.c: 198: PORTBbits.RB0 = 0;for (d = 0; d < 10; d++) {}
   978  00022A  9081               	bcf	3969,0,c	;volatile
   979  00022C  0E00               	movlw	0
   980  00022E  6E24               	movwf	affichage@d+1,c
   981  000230  0E00               	movlw	0
   982  000232  6E23               	movwf	affichage@d,c
   983  000234  5024               	movf	affichage@d+1,w,c
   984  000236  0A80               	xorlw	128
   985  000238  0F80               	addlw	-128
   986  00023A  0E0A               	movlw	10
   987  00023C  B4D8               	btfsc	status,2,c
   988  00023E  5C23               	subwf	affichage@d,w,c
   989  000240  B0D8               	btfsc	status,0,c
   990  000242  D003               	goto	l85
   991  000244  4A23               	infsnz	affichage@d,f,c
   992  000246  2A24               	incf	affichage@d+1,f,c
   993  000248  D7F5               	goto	L9
   994  00024A                     l85:
   995                           
   996                           ;main.c: 199: PORTCbits.RC5 = 0;for (d = 0; d < 10; d++) {}
   997  00024A  9A82               	bcf	3970,5,c	;volatile
   998  00024C  0E00               	movlw	0
   999  00024E  6E24               	movwf	affichage@d+1,c
  1000  000250  0E00               	movlw	0
  1001  000252  6E23               	movwf	affichage@d,c
  1002  000254  5024               	movf	affichage@d+1,w,c
  1003  000256  0A80               	xorlw	128
  1004  000258  0F80               	addlw	-128
  1005  00025A  0E0A               	movlw	10
  1006  00025C  B4D8               	btfsc	status,2,c
  1007  00025E  5C23               	subwf	affichage@d,w,c
  1008  000260  B0D8               	btfsc	status,0,c
  1009  000262  D003               	goto	l87
  1010  000264  4A23               	infsnz	affichage@d,f,c
  1011  000266  2A24               	incf	affichage@d+1,f,c
  1012  000268  D7F5               	goto	L10
  1013  00026A                     l87:
  1014                           
  1015                           ;main.c: 201: PORTAbits.RA1 = 0;
  1016  00026A  9280               	bcf	3968,1,c	;volatile
  1017                           
  1018                           ;main.c: 202: PORTAbits.RA2 = 0;
  1019  00026C  9480               	bcf	3968,2,c	;volatile
  1020                           
  1021                           ;main.c: 203: PORTCbits.RC0 = 0;
  1022  00026E  9082               	bcf	3970,0,c	;volatile
  1023                           
  1024                           ;main.c: 204: PORTCbits.RC2 = 0;
  1025  000270  9482               	bcf	3970,2,c	;volatile
  1026                           
  1027                           ;main.c: 205: PORTBbits.RB4 = 0;
  1028  000272  9881               	bcf	3969,4,c	;volatile
  1029                           
  1030                           ;main.c: 206: PORTBbits.RB2 = 0;
  1031  000274  9481               	bcf	3969,2,c	;volatile
  1032                           
  1033                           ;main.c: 207: PORTCbits.RC6 = 0;
  1034  000276  9C82               	bcf	3970,6,c	;volatile
  1035                           
  1036                           ;main.c: 208: PORTCbits.RC4 = 0;
  1037  000278  9882               	bcf	3970,4,c	;volatile
  1038                           
  1039                           ;main.c: 210: switch (mux) {
  1040  00027A  D054               	goto	l853
  1041  00027C                     l89:
  1042                           
  1043                           ;main.c: 213: PORTAbits.RA0 = led_state[0][0];
  1044  00027C  B02D               	btfsc	_led_state,0,c
  1045  00027E  D002               	bra	u215
  1046  000280  9080               	bcf	3968,0,c	;volatile
  1047  000282  D001               	bra	u216
  1048  000284                     u215:
  1049  000284  8080               	bsf	3968,0,c	;volatile
  1050  000286                     u216:
  1051                           
  1052                           ;main.c: 214: PORTAbits.RA3 = led_state[0][1];
  1053  000286  B02E               	btfsc	_led_state+1,0,c
  1054  000288  D002               	bra	u225
  1055  00028A  9680               	bcf	3968,3,c	;volatile
  1056  00028C  D001               	bra	u226
  1057  00028E                     u225:
  1058  00028E  8680               	bsf	3968,3,c	;volatile
  1059  000290                     u226:
  1060                           
  1061                           ;main.c: 215: PORTAbits.RA6 = led_state[0][2];
  1062  000290  B02F               	btfsc	_led_state+2,0,c
  1063  000292  D002               	bra	u235
  1064  000294  9C80               	bcf	3968,6,c	;volatile
  1065  000296  D001               	bra	u236
  1066  000298                     u235:
  1067  000298  8C80               	bsf	3968,6,c	;volatile
  1068  00029A                     u236:
  1069                           
  1070                           ;main.c: 216: PORTCbits.RC3 = led_state[0][3];
  1071  00029A  B030               	btfsc	_led_state+3,0,c
  1072  00029C  D002               	bra	u245
  1073  00029E  9682               	bcf	3970,3,c	;volatile
  1074  0002A0  D001               	bra	u246
  1075  0002A2                     u245:
  1076  0002A2  8682               	bsf	3970,3,c	;volatile
  1077  0002A4                     u246:
  1078                           
  1079                           ;main.c: 217: break;
  1080  0002A4  0012               	return	
  1081  0002A6                     l91:
  1082                           
  1083                           ;main.c: 220: PORTBbits.RB5 = led_state[0][4];
  1084  0002A6  B031               	btfsc	_led_state+4,0,c
  1085  0002A8  D002               	bra	u255
  1086  0002AA  9A81               	bcf	3969,5,c	;volatile
  1087  0002AC  D001               	bra	u256
  1088  0002AE                     u255:
  1089  0002AE  8A81               	bsf	3969,5,c	;volatile
  1090  0002B0                     u256:
  1091                           
  1092                           ;main.c: 221: PORTBbits.RB3 = led_state[0][5];
  1093  0002B0  B032               	btfsc	_led_state+5,0,c
  1094  0002B2  D002               	bra	u265
  1095  0002B4  9681               	bcf	3969,3,c	;volatile
  1096  0002B6  D001               	bra	u266
  1097  0002B8                     u265:
  1098  0002B8  8681               	bsf	3969,3,c	;volatile
  1099  0002BA                     u266:
  1100                           
  1101                           ;main.c: 222: PORTBbits.RB0 = led_state[0][6];
  1102  0002BA  B033               	btfsc	_led_state+6,0,c
  1103  0002BC  D002               	bra	u275
  1104  0002BE  9081               	bcf	3969,0,c	;volatile
  1105  0002C0  D001               	bra	u276
  1106  0002C2                     u275:
  1107  0002C2  8081               	bsf	3969,0,c	;volatile
  1108  0002C4                     u276:
  1109                           
  1110                           ;main.c: 223: PORTCbits.RC5 = led_state[0][7];
  1111  0002C4  B034               	btfsc	_led_state+7,0,c
  1112  0002C6  D002               	bra	u285
  1113  0002C8  9A82               	bcf	3970,5,c	;volatile
  1114  0002CA  D001               	bra	u286
  1115  0002CC                     u285:
  1116  0002CC  8A82               	bsf	3970,5,c	;volatile
  1117  0002CE                     u286:
  1118                           
  1119                           ;main.c: 224: break;
  1120  0002CE  0012               	return	
  1121  0002D0                     l92:
  1122                           
  1123                           ;main.c: 227: PORTAbits.RA1 = led_state[1][0];
  1124  0002D0  B035               	btfsc	_led_state+8,0,c
  1125  0002D2  D002               	bra	u295
  1126  0002D4  9280               	bcf	3968,1,c	;volatile
  1127  0002D6  D001               	bra	u296
  1128  0002D8                     u295:
  1129  0002D8  8280               	bsf	3968,1,c	;volatile
  1130  0002DA                     u296:
  1131                           
  1132                           ;main.c: 228: PORTAbits.RA2 = led_state[1][1];
  1133  0002DA  B036               	btfsc	_led_state+9,0,c
  1134  0002DC  D002               	bra	u305
  1135  0002DE  9480               	bcf	3968,2,c	;volatile
  1136  0002E0  D001               	bra	u306
  1137  0002E2                     u305:
  1138  0002E2  8480               	bsf	3968,2,c	;volatile
  1139  0002E4                     u306:
  1140                           
  1141                           ;main.c: 229: PORTCbits.RC0 = led_state[1][2];
  1142  0002E4  B037               	btfsc	_led_state+10,0,c
  1143  0002E6  D002               	bra	u315
  1144  0002E8  9082               	bcf	3970,0,c	;volatile
  1145  0002EA  D001               	bra	u316
  1146  0002EC                     u315:
  1147  0002EC  8082               	bsf	3970,0,c	;volatile
  1148  0002EE                     u316:
  1149                           
  1150                           ;main.c: 230: PORTCbits.RC2 = led_state[1][3];
  1151  0002EE  B038               	btfsc	_led_state+11,0,c
  1152  0002F0  D002               	bra	u325
  1153  0002F2  9482               	bcf	3970,2,c	;volatile
  1154  0002F4  D001               	bra	u326
  1155  0002F6                     u325:
  1156  0002F6  8482               	bsf	3970,2,c	;volatile
  1157  0002F8                     u326:
  1158                           
  1159                           ;main.c: 231: break;
  1160  0002F8  0012               	return	
  1161  0002FA                     l93:
  1162                           
  1163                           ;main.c: 235: PORTBbits.RB4 = led_state[1][4];
  1164  0002FA  B039               	btfsc	_led_state+12,0,c
  1165  0002FC  D002               	bra	u335
  1166  0002FE  9881               	bcf	3969,4,c	;volatile
  1167  000300  D001               	bra	u336
  1168  000302                     u335:
  1169  000302  8881               	bsf	3969,4,c	;volatile
  1170  000304                     u336:
  1171                           
  1172                           ;main.c: 236: PORTBbits.RB2 = led_state[1][5];
  1173  000304  B03A               	btfsc	_led_state+13,0,c
  1174  000306  D002               	bra	u345
  1175  000308  9481               	bcf	3969,2,c	;volatile
  1176  00030A  D001               	bra	u346
  1177  00030C                     u345:
  1178  00030C  8481               	bsf	3969,2,c	;volatile
  1179  00030E                     u346:
  1180                           
  1181                           ;main.c: 237: PORTCbits.RC6 = led_state[1][6];
  1182  00030E  B03B               	btfsc	_led_state+14,0,c
  1183  000310  D002               	bra	u355
  1184  000312  9C82               	bcf	3970,6,c	;volatile
  1185  000314  D001               	bra	u356
  1186  000316                     u355:
  1187  000316  8C82               	bsf	3970,6,c	;volatile
  1188  000318                     u356:
  1189                           
  1190                           ;main.c: 238: PORTCbits.RC4 = led_state[1][7];
  1191  000318  B03C               	btfsc	_led_state+15,0,c
  1192  00031A  D002               	bra	u365
  1193  00031C  9882               	bcf	3970,4,c	;volatile
  1194  00031E  D001               	bra	u366
  1195  000320                     u365:
  1196  000320  8882               	bsf	3970,4,c	;volatile
  1197  000322                     u366:
  1198                           
  1199                           ;main.c: 239: break;
  1200  000322  0012               	return	
  1201  000324                     l853:
  1202  000324  5040               	movf	_mux,w,c
  1203                           
  1204                           ; Switch size 1, requested type "space"
  1205                           ; Number of cases is 4, Range of values is 0 to 3
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte           13     7 (average)
  1209                           ;	Chosen strategy is simple_byte
  1210  000326  0A00               	xorlw	0	; case 0
  1211  000328  B4D8               	btfsc	status,2,c
  1212  00032A  D7A8               	goto	l89
  1213  00032C  0A01               	xorlw	1	; case 1
  1214  00032E  B4D8               	btfsc	status,2,c
  1215  000330  D7BA               	goto	l91
  1216  000332  0A03               	xorlw	3	; case 2
  1217  000334  B4D8               	btfsc	status,2,c
  1218  000336  D7CC               	goto	l92
  1219  000338  0A01               	xorlw	1	; case 3
  1220  00033A  A4D8               	btfss	status,2,c
  1221  00033C  0012               	return	
  1222  00033E  D7DD               	goto	l93
  1223  000340                     __end_of_affichage:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           prodh	equ	0xFF4
  1230                           prodl	equ	0xFF3
  1231                           intcon	equ	0xFF2
  1232                           postinc0	equ	0xFEE
  1233                           wreg	equ	0xFE8
  1234                           postdec1	equ	0xFE5
  1235                           fsr1l	equ	0xFE1
  1236                           indf2	equ	0xFDF
  1237                           fsr2h	equ	0xFDA
  1238                           fsr2l	equ	0xFD9
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function _high_isr *****************
  1242 ;; Defined at:
  1243 ;;		line 115 in file "main.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;		None               void
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1261 ;;Total ram usage:       17 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		Interrupt level 1
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270 ;; *************** function _timer_isr *****************
  1271 ;; Defined at:
  1272 ;;		line 127 in file "main.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;		None               void
  1279 ;; Registers used:
  1280 ;;		None
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1290 ;;Total ram usage:       17 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		Interrupt level 1
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	intcodelo
  1300  000018                     __pintcodelo:
  1301                           	opt stack 0
  1302  000018                     _high_isr:
  1303                           	opt stack 29
  1304                           
  1305                           ;incstack = 0
  1306  000018  CFD8 F001          	movff	status,??_high_isr
  1307  00001C  CFE8 F002          	movff	wreg,??_high_isr+1
  1308  000020  CFE0 F003          	movff	bsr,??_high_isr+2
  1309  000024  CFFA F004          	movff	pclath,??_high_isr+3
  1310  000028  CFFB F005          	movff	pclatu,??_high_isr+4
  1311  00002C  CFE9 F006          	movff	fsr0l,??_high_isr+5
  1312  000030  CFEA F007          	movff	fsr0h,??_high_isr+6
  1313  000034  CFE1 F008          	movff	fsr1l,??_high_isr+7
  1314  000038  CFE2 F009          	movff	fsr1h,??_high_isr+8
  1315  00003C  CFD9 F00A          	movff	fsr2l,??_high_isr+9
  1316  000040  CFDA F00B          	movff	fsr2h,??_high_isr+10
  1317  000044  CFF3 F00C          	movff	prodl,??_high_isr+11
  1318  000048  CFF4 F00D          	movff	prodh,??_high_isr+12
  1319  00004C  CFF6 F00E          	movff	tblptrl,??_high_isr+13
  1320  000050  CFF7 F00F          	movff	tblptrh,??_high_isr+14
  1321  000054  CFF8 F010          	movff	tblptru,??_high_isr+15
  1322  000058  CFF5 F011          	movff	tablat,??_high_isr+16
  1323                           
  1324                           ;main.c: 116: if (RC2IF) {
  1325  00005C  AAA4               	btfss	4004,5,c	;volatile
  1326  00005E  D017               	goto	i1l867
  1327                           
  1328                           ;main.c: 117: tampon = RCREG2;
  1329  000060  CF7A F042          	movff	3962,_tampon	;volatile
  1330                           
  1331                           ;main.c: 118: if (compteur == 128) {
  1332  000064  503D               	movf	_compteur,w,c
  1333  000066  0A80               	xorlw	128
  1334  000068  103E               	iorwf	_compteur+1,w,c
  1335  00006A  A4D8               	btfss	status,2,c
  1336  00006C  D004               	goto	i1l863
  1337                           
  1338                           ;main.c: 119: compteur = 0;
  1339  00006E  0E00               	movlw	0
  1340  000070  6E3E               	movwf	_compteur+1,c
  1341  000072  0E00               	movlw	0
  1342  000074  6E3D               	movwf	_compteur,c
  1343  000076                     i1l863:
  1344                           
  1345                           ;main.c: 120: }
  1346                           ;main.c: 121: stock_led[compteur] = tampon;
  1347  000076  0100               	movlb	0	; () banked
  1348  000078  0E60               	movlw	low _stock_led
  1349  00007A  243D               	addwf	_compteur,w,c
  1350  00007C  6ED9               	movwf	fsr2l,c
  1351  00007E  0100               	movlb	0	; () banked
  1352  000080  0E00               	movlw	high _stock_led
  1353  000082  203E               	addwfc	_compteur+1,w,c
  1354  000084  6EDA               	movwf	fsr2h,c
  1355  000086  C042  FFDF         	movff	_tampon,indf2
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;main.c: 122: compteur++;
  1359  00008A  4A3D               	infsnz	_compteur,f,c
  1360  00008C  2A3E               	incf	_compteur+1,f,c
  1361  00008E                     i1l867:
  1362                           
  1363                           ;main.c: 123: }
  1364                           ;main.c: 124: RC2IF = 0;
  1365  00008E  9AA4               	bcf	4004,5,c	;volatile
  1366  000090  C011  FFF5         	movff	??_high_isr+16,tablat
  1367  000094  C010  FFF8         	movff	??_high_isr+15,tblptru
  1368  000098  C00F  FFF7         	movff	??_high_isr+14,tblptrh
  1369  00009C  C00E  FFF6         	movff	??_high_isr+13,tblptrl
  1370  0000A0  C00D  FFF4         	movff	??_high_isr+12,prodh
  1371  0000A4  C00C  FFF3         	movff	??_high_isr+11,prodl
  1372  0000A8  C00B  FFDA         	movff	??_high_isr+10,fsr2h
  1373  0000AC  C00A  FFD9         	movff	??_high_isr+9,fsr2l
  1374  0000B0  C009  FFE2         	movff	??_high_isr+8,fsr1h
  1375  0000B4  C008  FFE1         	movff	??_high_isr+7,fsr1l
  1376  0000B8  C007  FFEA         	movff	??_high_isr+6,fsr0h
  1377  0000BC  C006  FFE9         	movff	??_high_isr+5,fsr0l
  1378  0000C0  C005  FFFB         	movff	??_high_isr+4,pclatu
  1379  0000C4  C004  FFFA         	movff	??_high_isr+3,pclath
  1380  0000C8  C003  FFE0         	movff	??_high_isr+2,bsr
  1381  0000CC  C002  FFE8         	movff	??_high_isr+1,wreg
  1382  0000D0  C001  FFD8         	movff	??_high_isr,status
  1383  0000D4  0010               	retfie	
  1384  0000D6                     __end_of_high_isr:
  1385                           	opt stack 0
  1386  0000D6                     _timer_isr:
  1387                           	opt stack 29
  1388                           
  1389                           ;incstack = 0
  1390  0000D6  CFD8 F012          	movff	status,??_timer_isr
  1391  0000DA  CFE8 F013          	movff	wreg,??_timer_isr+1
  1392  0000DE  CFE0 F014          	movff	bsr,??_timer_isr+2
  1393  0000E2  CFFA F015          	movff	pclath,??_timer_isr+3
  1394  0000E6  CFFB F016          	movff	pclatu,??_timer_isr+4
  1395  0000EA  CFE9 F017          	movff	fsr0l,??_timer_isr+5
  1396  0000EE  CFEA F018          	movff	fsr0h,??_timer_isr+6
  1397  0000F2  CFE1 F019          	movff	fsr1l,??_timer_isr+7
  1398  0000F6  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
  1399  0000FA  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
  1400  0000FE  CFDA F01C          	movff	fsr2h,??_timer_isr+10
  1401  000102  CFF3 F01D          	movff	prodl,??_timer_isr+11
  1402  000106  CFF4 F01E          	movff	prodh,??_timer_isr+12
  1403  00010A  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
  1404  00010E  CFF7 F020          	movff	tblptrh,??_timer_isr+14
  1405  000112  CFF8 F021          	movff	tblptru,??_timer_isr+15
  1406  000116  CFF5 F022          	movff	tablat,??_timer_isr+16
  1407                           
  1408                           ;main.c: 129: if (TMR0IE && TMR0IF) {
  1409  00011A  BAF2               	btfsc	intcon,5,c	;volatile
  1410  00011C  D000               	goto	i1l46
  1411  00011E                     i1l46:
  1412                           
  1413                           ;main.c: 130: }
  1414                           ;main.c: 131: TMR0IF = 0;
  1415  00011E  94F2               	bcf	intcon,2,c	;volatile
  1416  000120  C022  FFF5         	movff	??_timer_isr+16,tablat
  1417  000124  C021  FFF8         	movff	??_timer_isr+15,tblptru
  1418  000128  C020  FFF7         	movff	??_timer_isr+14,tblptrh
  1419  00012C  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
  1420  000130  C01E  FFF4         	movff	??_timer_isr+12,prodh
  1421  000134  C01D  FFF3         	movff	??_timer_isr+11,prodl
  1422  000138  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
  1423  00013C  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
  1424  000140  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
  1425  000144  C019  FFE1         	movff	??_timer_isr+7,fsr1l
  1426  000148  C018  FFEA         	movff	??_timer_isr+6,fsr0h
  1427  00014C  C017  FFE9         	movff	??_timer_isr+5,fsr0l
  1428  000150  C016  FFFB         	movff	??_timer_isr+4,pclatu
  1429  000154  C015  FFFA         	movff	??_timer_isr+3,pclath
  1430  000158  C014  FFE0         	movff	??_timer_isr+2,bsr
  1431  00015C  C013  FFE8         	movff	??_timer_isr+1,wreg
  1432  000160  C012  FFD8         	movff	??_timer_isr,status
  1433  000164  0010               	retfie	
  1434  000166                     __end_of_timer_isr:
  1435                           	opt stack 0
  1436  0000                     pclatu	equ	0xFFB
  1437                           pclath	equ	0xFFA
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           prodh	equ	0xFF4
  1443                           prodl	equ	0xFF3
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           fsr0h	equ	0xFEA
  1447                           fsr0l	equ	0xFE9
  1448                           wreg	equ	0xFE8
  1449                           postdec1	equ	0xFE5
  1450                           fsr1h	equ	0xFE2
  1451                           fsr1l	equ	0xFE1
  1452                           bsr	equ	0xFE0
  1453                           indf2	equ	0xFDF
  1454                           fsr2h	equ	0xFDA
  1455                           fsr2l	equ	0xFD9
  1456                           status	equ	0xFD8
  1457                           pclatu	equ	0xFFB
  1458                           pclath	equ	0xFFA
  1459                           tblptru	equ	0xFF8
  1460                           tblptrh	equ	0xFF7
  1461                           tblptrl	equ	0xFF6
  1462                           tablat	equ	0xFF5
  1463                           prodh	equ	0xFF4
  1464                           prodl	equ	0xFF3
  1465                           intcon	equ	0xFF2
  1466                           postinc0	equ	0xFEE
  1467                           fsr0h	equ	0xFEA
  1468                           fsr0l	equ	0xFE9
  1469                           wreg	equ	0xFE8
  1470                           postdec1	equ	0xFE5
  1471                           fsr1h	equ	0xFE2
  1472                           fsr1l	equ	0xFE1
  1473                           bsr	equ	0xFE0
  1474                           indf2	equ	0xFDF
  1475                           fsr2h	equ	0xFDA
  1476                           fsr2l	equ	0xFD9
  1477                           status	equ	0xFD8
  1478                           
  1479                           	psect	rparam
  1480  0000                     pclatu	equ	0xFFB
  1481                           pclath	equ	0xFFA
  1482                           tblptru	equ	0xFF8
  1483                           tblptrh	equ	0xFF7
  1484                           tblptrl	equ	0xFF6
  1485                           tablat	equ	0xFF5
  1486                           prodh	equ	0xFF4
  1487                           prodl	equ	0xFF3
  1488                           intcon	equ	0xFF2
  1489                           postinc0	equ	0xFEE
  1490                           fsr0h	equ	0xFEA
  1491                           fsr0l	equ	0xFE9
  1492                           wreg	equ	0xFE8
  1493                           postdec1	equ	0xFE5
  1494                           fsr1h	equ	0xFE2
  1495                           fsr1l	equ	0xFE1
  1496                           bsr	equ	0xFE0
  1497                           indf2	equ	0xFDF
  1498                           fsr2h	equ	0xFDA
  1499                           fsr2l	equ	0xFD9
  1500                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      74
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_decodage

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     454
                                             40 COMRAM     4     4      0
                          _affichage
                           _decodage
                          _initComms
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decodage                                             6     4      2     184
                                             34 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _affichage                                            2     2      0     240
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _affichage
   _decodage
   _initComms
   _initPorts

 _high_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      4A       1       77.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6       6        0.0%
DATA                 0      0      D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 18 14:04:20 2014

            __CFG_CP0$ON 000000              __CFG_CP1$ON 000000              __CFG_CP2$ON 000000  
            __CFG_CP3$ON 000000                       l81 020A                       l73 018A  
                     l91 02A6                       l83 022A                       l75 01AA  
                     l92 02D0                       l93 02FA                       l85 024A  
                     l77 01CA                       l87 026A                       l79 01EA  
                     l89 027C              __CFG_CPB$ON 000000              __CFG_CPD$ON 000000  
            _state_clock 0041                       bsr 000FE0              __CFG_BORV$3 000000  
                    l763 0424                      l755 0350                      l853 0324  
                    l759 03AC                      l887 0472                      l879 045A  
                    l897 04C8                      _GIE 007F97                      u215 0284  
                    u216 0286                      u305 02E2                      u225 028E  
                    u306 02E4                      u226 0290                      u315 02EC  
                    u235 0298                      u316 02EE                      u236 029A  
                    u325 02F6                      u245 02A2                      u326 02F8  
                    u246 02A4                      u335 0302                      u255 02AE  
                    u415 049E                      u336 0304                      u256 02B0  
                    u345 030C                      u265 02B8                      u425 04C6  
                    u346 030E                      u266 02BA                      u355 0316  
                    u275 02C2                      u356 0318                      u276 02C4  
                    u365 0320                      u285 02CC                      u366 0322  
                    u286 02CE                      u295 02D8                      u296 02DA  
                    _mux 0040                      prod 000FF3                      wreg 000FE8  
           __CFG_IESO$ON 000000               _TXSTA2bits 000FBA                     _MASK 0043  
                   _PEIE 007F96                     i1l46 011E             __CFG_WRT0$ON 000000  
           __CFG_WRT1$ON 000000             __CFG_WRT2$ON 000000             __CFG_WRT3$ON 000000  
          __CFG_EBTR0$ON 000000            __CFG_EBTR1$ON 000000            __CFG_EBTR2$ON 000000  
          __CFG_EBTR3$ON 000000             __CFG_WRTB$ON 000000             __CFG_WRTC$ON 000000  
           __CFG_WRTD$ON 000000            __CFG_EBTRB$ON 000000                     _main 0442  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0166            __CFG_RETEN$ON 000000  
           _BAUDCON2bits 000FB9                    ?_main 0001                    _RC2IF 007D25  
                  i1l863 0076                    i1l867 008E                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
         __CFG_FCMEN$OFF 000000                    main@i 0029                    tablat 000FF5  
                  status 000FD8           _compteur_clock 003F           __CFG_MCLRE$OFF 000000  
        __initialization 04D2             __end_of_main 04D2                   ??_main 0029  
          __activetblptr 000002           __CFG_PLLCFG$ON 000000                   _ADCON1 000FC1  
                 _ANCON0 000F5D          __CFG_BBSIZ$BB2K 000000           __CFG_WDTEN$OFF 000000  
                 _INTCON 000FF2                   _RCREG2 000F7A                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _SPBRG2 000F7B  
                 _TXREG2 000F79         __end_of_decodage 0442           __CFG_PWRTEN$ON 000000  
         __CFG_XINST$OFF 000000         __end_of_high_isr 00D6           __CFG_STVREN$ON 000000  
                 clear_0 04D8                   clear_1 04E4                   _tampon 0042  
           __pdataCOMRAM 0043                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 050A  
     __size_of_affichage 01D6           __pcstackCOMRAM 0001               __pbssBANK0 0060  
     __size_of_initComms 0040       __size_of_initPorts 0032         __CFG_CANMX$PORTB 000000  
     __size_of_timer_isr 0090                ?_decodage 0023        __end_of_affichage 0340  
                _SPBRGH2 000F7C               affichage@d 0023                ?_high_isr 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 04D2  
                __ramtop 0F00                  __ptext0 0442                  __ptext1 0554  
                __ptext2 0514                  __ptext3 0340                  __ptext4 016A  
      __end_of_initComms 0554        __end_of_initPorts 0586               ??_decodage 0025  
      __CFG_MSSPMSK$MSK7 000000               ??_high_isr 0001     end_of_initialization 050A  
          __Lmediumconst 0000        __end_of_timer_isr 0166                  postdec1 000FE5  
                postinc0 000FEE                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82         __CFG_FOSC$INTIO2 000000            __pidataCOMRAM 0586  
    start_initialization 04D2              __pbssCOMRAM 002D        __size_of_decodage 0102  
              _affichage 016A        __size_of_high_isr 00BE              __pintcodelo 0018  
              _led_state 002D                _initComms 0514                _initPorts 0554  
              decodage@a 0028                decodage@n 0023               ?_affichage 0001  
               _PIE3bits 000FA3                 _PIR3bits 000FA4                 _RCONbits 000FD0  
              _timer_isr 00D6         __CFG_SOSCSEL$DIG 000000                _stock_led 0060  
             ?_initComms 0001               ?_initPorts 0001                copy_data0 04FE  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
             ?_timer_isr 0001                 _decodage 0340                 _high_isr 0018  
               _compteur 003D              ??_affichage 0023            __size_of_main 0090  
    __CFG_INTOSCSEL$HIGH 000000              _OSCTUNEbits 000F9B              ??_initComms 0023  
            ??_initPorts 0023                 intlevel1 0000               _RCSTA2bits 000FA6  
     __CFG_WDTPS$1048576 000000              ??_timer_isr 0012      __CFG_BORPWR$ZPBORMV 000000  
