

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Nov 19 12:36:44 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000370                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _MASK
    25  000370  80                 	db	128
    26  000371  40                 	db	64
    27  000372  20                 	db	32
    28  000373  10                 	db	16
    29  000374  08                 	db	8
    30  000375  04                 	db	4
    31  000376  02                 	db	2
    32  000377  01                 	db	1
    33  0000                     _ADCON1	set	4033
    34  0000                     _ANCON0	set	3933
    35  0000                     _BAUDCON2bits	set	4025
    36  0000                     _INTCON	set	4082
    37  0000                     _OSCCON	set	4051
    38  0000                     _OSCTUNEbits	set	3995
    39  0000                     _PIE3bits	set	4003
    40  0000                     _PIR3bits	set	4004
    41  0000                     _PORTA	set	3968
    42  0000                     _PORTAbits	set	3968
    43  0000                     _PORTB	set	3969
    44  0000                     _PORTBbits	set	3969
    45  0000                     _PORTC	set	3970
    46  0000                     _PORTCbits	set	3970
    47  0000                     _RCONbits	set	4048
    48  0000                     _RCREG2	set	3962
    49  0000                     _RCSTA2bits	set	4006
    50  0000                     _SPBRG	set	4015
    51  0000                     _SPBRG2	set	3963
    52  0000                     _SPBRGH2	set	3964
    53  0000                     _TRISA	set	3986
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISC	set	3988
    56  0000                     _TXREG2	set	3961
    57  0000                     _TXSTA2bits	set	4026
    58  0000                     _GIE	set	32663
    59  0000                     _PEIE	set	32662
    60  0000                     _RC2IF	set	32037
    61  0000                     _TMR0IE	set	32661
    62  0000                     _TMR0IF	set	32658
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  0002EE                     __pcinit:
    68                           	opt stack 0
    69  0002EE                     start_initialization:
    70                           	opt stack 0
    71  0002EE                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to BANK0 (140 bytes)
    75  0002EE  EE00  F060         	lfsr	0,__pbssBANK0
    76  0002F2  0E8C               	movlw	140
    77  0002F4                     clear_0:
    78  0002F4  6AEE               	clrf	postinc0,c
    79  0002F6  06E8               	decf	wreg,f,c
    80  0002F8  E1FD               	bnz	clear_0
    81                           
    82                           ; Clear objects allocated to COMRAM (21 bytes)
    83  0002FA  EE00  F024         	lfsr	0,__pbssCOMRAM
    84  0002FE  0E15               	movlw	21
    85  000300                     clear_1:
    86  000300  6AEE               	clrf	postinc0,c
    87  000302  06E8               	decf	wreg,f,c
    88  000304  E1FD               	bnz	clear_1
    89                           
    90                           ; Initialize objects allocated to COMRAM (8 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  000306  0E70               	movlw	low __pidataCOMRAM
    93  000308  6EF6               	movwf	tblptrl,c
    94  00030A  0E03               	movlw	high __pidataCOMRAM
    95  00030C  6EF7               	movwf	tblptrh,c
    96  00030E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  000310  6EF8               	movwf	tblptru,c
    98  000312  EE00  F039         	lfsr	0,__pdataCOMRAM
    99  000316  EE10 F008          	lfsr	1,8
   100  00031A                     copy_data0:
   101  00031A  0009               	tblrd		*+
   102  00031C  CFF5 FFEE          	movff	tablat,postinc0
   103  000320  50E5               	movf	postdec1,w,c
   104  000322  50E1               	movf	fsr1l,w,c
   105  000324  E1FA               	bnz	copy_data0
   106  000326                     end_of_initialization:
   107                           	opt stack 0
   108  000326                     __end_of__initialization:
   109                           	opt stack 0
   110  000326  0100               	movlb	0
   111  000328  EFAF  F001         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           tblptrl	equ	0xFF6
   115                           tablat	equ	0xFF5
   116                           postinc0	equ	0xFEE
   117                           wreg	equ	0xFE8
   118                           postdec1	equ	0xFE5
   119                           fsr1l	equ	0xFE1
   120                           
   121                           	psect	bssCOMRAM
   122  000024                     __pbssCOMRAM:
   123                           	opt stack 0
   124  000024                     _led_state:
   125                           	opt stack 0
   126  000024                     	ds	16
   127  000034                     _compteur:
   128                           	opt stack 0
   129  000034                     	ds	2
   130  000036                     _compteur_clock:
   131                           	opt stack 0
   132  000036                     	ds	1
   133  000037                     _state_clock:
   134                           	opt stack 0
   135  000037                     	ds	1
   136  000038                     _tampon:
   137                           	opt stack 0
   138  000038                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           tblptrh	equ	0xFF7
   141                           tblptrl	equ	0xFF6
   142                           tablat	equ	0xFF5
   143                           postinc0	equ	0xFEE
   144                           wreg	equ	0xFE8
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	dataCOMRAM
   149  000039                     __pdataCOMRAM:
   150                           	opt stack 0
   151  000039                     _MASK:
   152                           	opt stack 0
   153  000039                     	ds	8
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           wreg	equ	0xFE8
   160                           postdec1	equ	0xFE5
   161                           fsr1l	equ	0xFE1
   162                           
   163                           	psect	bssBANK0
   164  000060                     __pbssBANK0:
   165                           	opt stack 0
   166  000060                     _stock_led:
   167                           	opt stack 0
   168  000060                     	ds	140
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	cstackCOMRAM
   179  000001                     __pcstackCOMRAM:
   180                           	opt stack 0
   181  000001                     ??_high_isr:
   182  000001                     
   183                           ; 0 bytes @ 0x0
   184  000001                     	ds	17
   185  000012                     ??_timer_isr:
   186                           
   187                           ; 0 bytes @ 0x11
   188  000012                     	ds	17
   189  000023                     decodage@a:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x22
   193  000023                     	ds	1
   194  000024                     tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           postdec1	equ	0xFE5
   201                           fsr1l	equ	0xFE1
   202                           
   203                           ; 0 bytes @ 0x23
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 131 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;		None               void
   216 ;; Registers used:
   217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   227 ;;Total ram usage:        0 bytes
   228 ;; Hardware stack levels required when called:    2
   229 ;; This function calls:
   230 ;;		_affichage
   231 ;;		_decodage
   232 ;;		_initComms
   233 ;;		_initPorts
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text0
   240  00035E                     __ptext0:
   241                           	opt stack 0
   242  00035E                     _main:
   243                           	opt stack 29
   244                           
   245                           ;main.c: 134: initPorts();
   246                           
   247                           ;incstack = 0
   248  00035E  EC96  F001         	call	_initPorts	;wreg free
   249                           
   250                           ;main.c: 135: initComms();
   251  000362  EC57  F001         	call	_initComms	;wreg free
   252  000366                     l763:
   253                           
   254                           ;main.c: 138: decodage();
   255  000366  ECB5  F000         	call	_decodage	;wreg free
   256                           
   257                           ;main.c: 139: affichage();
   258  00036A  EC06  F001         	call	_affichage	;wreg free
   259  00036E  D7FB               	goto	l763
   260  000370                     __end_of_main:
   261                           	opt stack 0
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec1	equ	0xFE5
   269                           fsr1l	equ	0xFE1
   270                           
   271 ;; *************** function _initPorts *****************
   272 ;; Defined at:
   273 ;;		line 6 in file "port.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;		None               void
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text1
   302  00032C                     __ptext1:
   303                           	opt stack 0
   304  00032C                     _initPorts:
   305                           	opt stack 29
   306                           
   307                           ;port.c: 10: OSCCON= 0x70;
   308                           
   309                           ;incstack = 0
   310  00032C  0E70               	movlw	112
   311  00032E  6ED3               	movwf	4051,c	;volatile
   312                           
   313                           ;port.c: 12: ANCON0 = 0b00000000;
   314  000330  0E00               	movlw	0
   315  000332  010F               	movlb	15	; () banked
   316  000334  6F5D               	movwf	93,b	;volatile
   317                           
   318                           ;port.c: 13: ADCON1 = 0b00000000;
   319  000336  0E00               	movlw	0
   320  000338  6EC1               	movwf	4033,c	;volatile
   321                           
   322                           ;port.c: 18: PORTA = 0b00000000;
   323  00033A  0E00               	movlw	0
   324  00033C  6E80               	movwf	3968,c	;volatile
   325                           
   326                           ;port.c: 19: TRISA = 0b00000000;
   327  00033E  0E00               	movlw	0
   328  000340  6E92               	movwf	3986,c	;volatile
   329                           
   330                           ;port.c: 21: PORTB = 0b01000000;
   331  000342  0E40               	movlw	64
   332  000344  6E81               	movwf	3969,c	;volatile
   333                           
   334                           ;port.c: 22: TRISB = 0b10000000;
   335  000346  0E80               	movlw	128
   336  000348  6E93               	movwf	3987,c	;volatile
   337                           
   338                           ;port.c: 24: PORTC = 0b00000000;
   339  00034A  0E00               	movlw	0
   340  00034C  6E82               	movwf	3970,c	;volatile
   341                           
   342                           ;port.c: 25: TRISC = 0b00000000;
   343  00034E  0E00               	movlw	0
   344  000350  6E94               	movwf	3988,c	;volatile
   345                           
   346                           ; BSR set to: 15
   347                           ;port.c: 27: GIE = 1;
   348  000352  8EF2               	bsf	intcon,7,c	;volatile
   349                           
   350                           ; BSR set to: 15
   351                           ;port.c: 28: PEIE = 1;
   352  000354  8CF2               	bsf	intcon,6,c	;volatile
   353                           
   354                           ;port.c: 29: INTCON =0b11100000;
   355  000356  0EE0               	movlw	224
   356  000358  6EF2               	movwf	intcon,c	;volatile
   357                           
   358                           ; BSR set to: 15
   359                           ;port.c: 30: OSCTUNEbits.PLLEN = 1;
   360  00035A  8C9B               	bsf	3995,6,c	;volatile
   361                           
   362                           ; BSR set to: 15
   363  00035C  0012               	return	
   364  00035E                     __end_of_initPorts:
   365                           	opt stack 0
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           intcon	equ	0xFF2
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           postdec1	equ	0xFE5
   374                           fsr1l	equ	0xFE1
   375                           
   376 ;; *************** function _initComms *****************
   377 ;; Defined at:
   378 ;;		line 6 in file "usart.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;		None               void
   385 ;; Registers used:
   386 ;;		wreg, status,2
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used:    1
   398 ;; Hardware stack levels required when called:    1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text2
   407  0002AE                     __ptext2:
   408                           	opt stack 0
   409  0002AE                     _initComms:
   410                           	opt stack 29
   411                           
   412                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   413                           
   414                           ; BSR set to: 15
   415                           ;incstack = 0
   416  0002AE  9EBA               	bcf	4026,7,c	;volatile
   417                           
   418                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   419  0002B0  9CBA               	bcf	4026,6,c	;volatile
   420                           
   421                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   422  0002B2  8ABA               	bsf	4026,5,c	;volatile
   423                           
   424                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   425  0002B4  98BA               	bcf	4026,4,c	;volatile
   426                           
   427                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   428  0002B6  96BA               	bcf	4026,3,c	;volatile
   429                           
   430                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   431  0002B8  84BA               	bsf	4026,2,c	;volatile
   432                           
   433                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   434  0002BA  82BA               	bsf	4026,1,c	;volatile
   435                           
   436                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   437  0002BC  90BA               	bcf	4026,0,c	;volatile
   438                           
   439                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   440  0002BE  8EA6               	bsf	4006,7,c	;volatile
   441                           
   442                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   443  0002C0  9CA6               	bcf	4006,6,c	;volatile
   444                           
   445                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   446  0002C2  9AA6               	bcf	4006,5,c	;volatile
   447                           
   448                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   449  0002C4  88A6               	bsf	4006,4,c	;volatile
   450                           
   451                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   452  0002C6  96A6               	bcf	4006,3,c	;volatile
   453                           
   454                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   455  0002C8  94A6               	bcf	4006,2,c	;volatile
   456                           
   457                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   458  0002CA  92A6               	bcf	4006,1,c	;volatile
   459                           
   460                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
   461  0002CC  90A6               	bcf	4006,0,c	;volatile
   462                           
   463                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
   464  0002CE  9EB9               	bcf	4025,7,c	;volatile
   465                           
   466                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
   467  0002D0  8CB9               	bsf	4025,6,c	;volatile
   468                           
   469                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
   470  0002D2  9AB9               	bcf	4025,5,c	;volatile
   471                           
   472                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
   473  0002D4  98B9               	bcf	4025,4,c	;volatile
   474                           
   475                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
   476  0002D6  86B9               	bsf	4025,3,c	;volatile
   477                           
   478                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
   479  0002D8  92B9               	bcf	4025,1,c	;volatile
   480                           
   481                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
   482  0002DA  90B9               	bcf	4025,0,c	;volatile
   483                           
   484                           ;usart.c: 34: PIE3bits.RC2IE = 1;
   485  0002DC  8AA3               	bsf	4003,5,c	;volatile
   486                           
   487                           ;usart.c: 35: RCONbits.IPEN = 1;
   488  0002DE  8ED0               	bsf	4048,7,c	;volatile
   489                           
   490                           ;usart.c: 45: SPBRG = 115;
   491  0002E0  0E73               	movlw	115
   492  0002E2  6EAF               	movwf	4015,c	;volatile
   493                           
   494                           ;usart.c: 46: SPBRGH2 = 0;
   495  0002E4  0E00               	movlw	0
   496  0002E6  6E7C               	movwf	3964,c	;volatile
   497                           
   498                           ;usart.c: 47: SPBRG2 = 137;
   499  0002E8  0E89               	movlw	137
   500  0002EA  6E7B               	movwf	3963,c	;volatile
   501  0002EC  0012               	return	
   502  0002EE                     __end_of_initComms:
   503                           	opt stack 0
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           intcon	equ	0xFF2
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           postdec1	equ	0xFE5
   512                           fsr1l	equ	0xFE1
   513                           
   514 ;; *************** function _decodage *****************
   515 ;; Defined at:
   516 ;;		line 144 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  a               1   34[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;		None               void
   523 ;; Registers used:
   524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text3
   545  00016A                     __ptext3:
   546                           	opt stack 0
   547  00016A                     _decodage:
   548                           	opt stack 29
   549                           
   550                           ;main.c: 145: char a = 0;
   551                           
   552                           ;incstack = 0
   553  00016A  0E00               	movlw	0
   554  00016C  6E23               	movwf	decodage@a,c
   555                           
   556                           ;main.c: 146: for (a = 0; a < 8; a++) {
   557  00016E  0E00               	movlw	0
   558  000170  6E23               	movwf	decodage@a,c
   559  000172  0E07               	movlw	7
   560  000174  6423               	cpfsgt	decodage@a,c
   561  000176  D001               	goto	l727
   562  000178  0012               	return	
   563  00017A                     l727:
   564                           
   565                           ;main.c: 147: if (MASK[a] & stock_led[2 * 0])
   566  00017A  5023               	movf	decodage@a,w,c
   567  00017C  0D01               	mullw	1
   568  00017E  0E39               	movlw	low _MASK
   569  000180  24F3               	addwf	prodl,w,c
   570  000182  6ED9               	movwf	fsr2l,c
   571  000184  0E00               	movlw	high _MASK
   572  000186  20F4               	addwfc	prodh,w,c
   573  000188  6EDA               	movwf	fsr2h,c
   574  00018A  50DF               	movf	indf2,w,c
   575  00018C  0100               	movlb	0	; () banked
   576  00018E  1560               	andwf	_stock_led& (0+255),w,b
   577  000190  0900               	iorlw	0
   578  000192  B4D8               	btfsc	status,2,c
   579  000194  D00A               	goto	l731
   580                           
   581                           ; BSR set to: 0
   582                           ;main.c: 148: {
   583                           ;main.c: 149: led_state[0][a] = 1;
   584  000196  5023               	movf	decodage@a,w,c
   585  000198  0D01               	mullw	1
   586  00019A  0E24               	movlw	low _led_state
   587  00019C  24F3               	addwf	prodl,w,c
   588  00019E  6ED9               	movwf	fsr2l,c
   589  0001A0  0E00               	movlw	high _led_state
   590  0001A2  20F4               	addwfc	prodh,w,c
   591  0001A4  6EDA               	movwf	fsr2h,c
   592  0001A6  0E01               	movlw	1
   593  0001A8  D009               	goto	L1
   594  0001AA                     l731:
   595                           
   596                           ; BSR set to: 0
   597                           ;main.c: 151: led_state[0][a] = 0;
   598  0001AA  5023               	movf	decodage@a,w,c
   599  0001AC  0D01               	mullw	1
   600  0001AE  0E24               	movlw	low _led_state
   601  0001B0  24F3               	addwf	prodl,w,c
   602  0001B2  6ED9               	movwf	fsr2l,c
   603  0001B4  0E00               	movlw	high _led_state
   604  0001B6  20F4               	addwfc	prodh,w,c
   605  0001B8  6EDA               	movwf	fsr2h,c
   606  0001BA  0E00               	movlw	0
   607  0001BC                     L1:
   608  0001BC  6EDF               	movwf	indf2,c
   609                           
   610                           ; BSR set to: 0
   611                           ;main.c: 152: }
   612                           ;main.c: 154: if (MASK[a] & stock_led[2 * 0 + 1]) {
   613  0001BE  5023               	movf	decodage@a,w,c
   614  0001C0  0D01               	mullw	1
   615  0001C2  0E39               	movlw	low _MASK
   616  0001C4  24F3               	addwf	prodl,w,c
   617  0001C6  6ED9               	movwf	fsr2l,c
   618  0001C8  0E00               	movlw	high _MASK
   619  0001CA  20F4               	addwfc	prodh,w,c
   620  0001CC  6EDA               	movwf	fsr2h,c
   621  0001CE  50DF               	movf	indf2,w,c
   622  0001D0  0100               	movlb	0	; () banked
   623  0001D2  1561               	andwf	(_stock_led+1)& (0+255),w,b
   624  0001D4  0900               	iorlw	0
   625  0001D6  B4D8               	btfsc	status,2,c
   626  0001D8  D00A               	goto	l735
   627                           
   628                           ; BSR set to: 0
   629                           ;main.c: 155: led_state[1][a] = 1;
   630  0001DA  5023               	movf	decodage@a,w,c
   631  0001DC  0D01               	mullw	1
   632  0001DE  0E2C               	movlw	low (_led_state+8)
   633  0001E0  24F3               	addwf	prodl,w,c
   634  0001E2  6ED9               	movwf	fsr2l,c
   635  0001E4  0E00               	movlw	high (_led_state+8)
   636  0001E6  20F4               	addwfc	prodh,w,c
   637  0001E8  6EDA               	movwf	fsr2h,c
   638  0001EA  0E01               	movlw	1
   639  0001EC  D009               	goto	L2
   640  0001EE                     l735:
   641                           
   642                           ; BSR set to: 0
   643                           ;main.c: 157: led_state[1][a] = 0;
   644  0001EE  5023               	movf	decodage@a,w,c
   645  0001F0  0D01               	mullw	1
   646  0001F2  0E2C               	movlw	low (_led_state+8)
   647  0001F4  24F3               	addwf	prodl,w,c
   648  0001F6  6ED9               	movwf	fsr2l,c
   649  0001F8  0E00               	movlw	high (_led_state+8)
   650  0001FA  20F4               	addwfc	prodh,w,c
   651  0001FC  6EDA               	movwf	fsr2h,c
   652  0001FE  0E00               	movlw	0
   653  000200                     L2:
   654  000200  6EDF               	movwf	indf2,c
   655                           
   656                           ; BSR set to: 0
   657                           
   658                           ; BSR set to: 0
   659  000202  2A23               	incf	decodage@a,f,c
   660                           
   661                           ; BSR set to: 0
   662  000204  0E07               	movlw	7
   663  000206  6423               	cpfsgt	decodage@a,c
   664  000208  D7B8               	goto	l727
   665  00020A  0012               	return	
   666  00020C                     __end_of_decodage:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           prodh	equ	0xFF4
   673                           prodl	equ	0xFF3
   674                           intcon	equ	0xFF2
   675                           postinc0	equ	0xFEE
   676                           wreg	equ	0xFE8
   677                           postdec1	equ	0xFE5
   678                           fsr1l	equ	0xFE1
   679                           indf2	equ	0xFDF
   680                           fsr2h	equ	0xFDA
   681                           fsr2l	equ	0xFD9
   682                           status	equ	0xFD8
   683                           
   684 ;; *************** function _affichage *****************
   685 ;; Defined at:
   686 ;;		line 174 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;		None               void
   693 ;; Registers used:
   694 ;;		None
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text4
   715  00020C                     __ptext4:
   716                           	opt stack 0
   717  00020C                     _affichage:
   718                           	opt stack 29
   719                           
   720                           ;main.c: 175: PORTAbits.RA0 = led_state[0][0];
   721                           
   722                           ;incstack = 0
   723  00020C  B024               	btfsc	_led_state,0,c
   724  00020E  D002               	bra	u55
   725  000210  9080               	bcf	3968,0,c	;volatile
   726  000212  D001               	bra	u56
   727  000214                     u55:
   728  000214  8080               	bsf	3968,0,c	;volatile
   729  000216                     u56:
   730                           
   731                           ;main.c: 176: PORTAbits.RA3 = led_state[0][1];
   732  000216  B025               	btfsc	_led_state+1,0,c
   733  000218  D002               	bra	u65
   734  00021A  9680               	bcf	3968,3,c	;volatile
   735  00021C  D001               	bra	u66
   736  00021E                     u65:
   737  00021E  8680               	bsf	3968,3,c	;volatile
   738  000220                     u66:
   739                           
   740                           ;main.c: 177: PORTAbits.RA6 = led_state[0][2];
   741  000220  B026               	btfsc	_led_state+2,0,c
   742  000222  D002               	bra	u75
   743  000224  9C80               	bcf	3968,6,c	;volatile
   744  000226  D001               	bra	u76
   745  000228                     u75:
   746  000228  8C80               	bsf	3968,6,c	;volatile
   747  00022A                     u76:
   748                           
   749                           ;main.c: 178: PORTCbits.RC3 = led_state[0][3];
   750  00022A  B027               	btfsc	_led_state+3,0,c
   751  00022C  D002               	bra	u85
   752  00022E  9682               	bcf	3970,3,c	;volatile
   753  000230  D001               	bra	u86
   754  000232                     u85:
   755  000232  8682               	bsf	3970,3,c	;volatile
   756  000234                     u86:
   757                           
   758                           ;main.c: 179: PORTCbits.RC7 = led_state[0][4];
   759  000234  B028               	btfsc	_led_state+4,0,c
   760  000236  D002               	bra	u95
   761  000238  9E82               	bcf	3970,7,c	;volatile
   762  00023A  D001               	bra	u96
   763  00023C                     u95:
   764  00023C  8E82               	bsf	3970,7,c	;volatile
   765  00023E                     u96:
   766                           
   767                           ;main.c: 180: PORTBbits.RB3 = led_state[0][5];
   768  00023E  B029               	btfsc	_led_state+5,0,c
   769  000240  D002               	bra	u105
   770  000242  9681               	bcf	3969,3,c	;volatile
   771  000244  D001               	bra	u106
   772  000246                     u105:
   773  000246  8681               	bsf	3969,3,c	;volatile
   774  000248                     u106:
   775                           
   776                           ;main.c: 181: PORTAbits.RA7 = led_state[0][6];
   777  000248  B02A               	btfsc	_led_state+6,0,c
   778  00024A  D002               	bra	u115
   779  00024C  9E80               	bcf	3968,7,c	;volatile
   780  00024E  D001               	bra	u116
   781  000250                     u115:
   782  000250  8E80               	bsf	3968,7,c	;volatile
   783  000252                     u116:
   784                           
   785                           ;main.c: 182: PORTCbits.RC5 = led_state[0][7];
   786  000252  B02B               	btfsc	_led_state+7,0,c
   787  000254  D002               	bra	u125
   788  000256  9A82               	bcf	3970,5,c	;volatile
   789  000258  D001               	bra	u126
   790  00025A                     u125:
   791  00025A  8A82               	bsf	3970,5,c	;volatile
   792  00025C                     u126:
   793                           
   794                           ;main.c: 184: PORTAbits.RA1 = led_state[1][0];
   795  00025C  B02C               	btfsc	_led_state+8,0,c
   796  00025E  D002               	bra	u135
   797  000260  9280               	bcf	3968,1,c	;volatile
   798  000262  D001               	bra	u136
   799  000264                     u135:
   800  000264  8280               	bsf	3968,1,c	;volatile
   801  000266                     u136:
   802                           
   803                           ;main.c: 185: PORTAbits.RA2 = led_state[1][1];
   804  000266  B02D               	btfsc	_led_state+9,0,c
   805  000268  D002               	bra	u145
   806  00026A  9480               	bcf	3968,2,c	;volatile
   807  00026C  D001               	bra	u146
   808  00026E                     u145:
   809  00026E  8480               	bsf	3968,2,c	;volatile
   810  000270                     u146:
   811                           
   812                           ;main.c: 186: PORTCbits.RC0 = led_state[1][2];
   813  000270  B02E               	btfsc	_led_state+10,0,c
   814  000272  D002               	bra	u155
   815  000274  9082               	bcf	3970,0,c	;volatile
   816  000276  D001               	bra	u156
   817  000278                     u155:
   818  000278  8082               	bsf	3970,0,c	;volatile
   819  00027A                     u156:
   820                           
   821                           ;main.c: 187: PORTCbits.RC2 = led_state[1][3];
   822  00027A  B02F               	btfsc	_led_state+11,0,c
   823  00027C  D002               	bra	u165
   824  00027E  9482               	bcf	3970,2,c	;volatile
   825  000280  D001               	bra	u166
   826  000282                     u165:
   827  000282  8482               	bsf	3970,2,c	;volatile
   828  000284                     u166:
   829                           
   830                           ;main.c: 188: PORTCbits.RC1 = led_state[1][4];
   831  000284  B030               	btfsc	_led_state+12,0,c
   832  000286  D002               	bra	u175
   833  000288  9282               	bcf	3970,1,c	;volatile
   834  00028A  D001               	bra	u176
   835  00028C                     u175:
   836  00028C  8282               	bsf	3970,1,c	;volatile
   837  00028E                     u176:
   838                           
   839                           ;main.c: 189: PORTBbits.RB2 = led_state[1][5];
   840  00028E  B031               	btfsc	_led_state+13,0,c
   841  000290  D002               	bra	u185
   842  000292  9481               	bcf	3969,2,c	;volatile
   843  000294  D001               	bra	u186
   844  000296                     u185:
   845  000296  8481               	bsf	3969,2,c	;volatile
   846  000298                     u186:
   847                           
   848                           ;main.c: 190: PORTCbits.RC6 = led_state[1][6];
   849  000298  B032               	btfsc	_led_state+14,0,c
   850  00029A  D002               	bra	u195
   851  00029C  9C82               	bcf	3970,6,c	;volatile
   852  00029E  D001               	bra	u196
   853  0002A0                     u195:
   854  0002A0  8C82               	bsf	3970,6,c	;volatile
   855  0002A2                     u196:
   856                           
   857                           ;main.c: 191: PORTCbits.RC4 = led_state[1][7];
   858  0002A2  B033               	btfsc	_led_state+15,0,c
   859  0002A4  D002               	bra	u205
   860  0002A6  9882               	bcf	3970,4,c	;volatile
   861  0002A8  D001               	bra	u206
   862  0002AA                     u205:
   863  0002AA  8882               	bsf	3970,4,c	;volatile
   864  0002AC                     u206:
   865  0002AC  0012               	return	
   866  0002AE                     __end_of_affichage:
   867                           	opt stack 0
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodh	equ	0xFF4
   873                           prodl	equ	0xFF3
   874                           intcon	equ	0xFF2
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           postdec1	equ	0xFE5
   878                           fsr1l	equ	0xFE1
   879                           indf2	equ	0xFDF
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _high_isr *****************
   885 ;; Defined at:
   886 ;;		line 112 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;		None               void
   893 ;; Registers used:
   894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   903 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;Total ram usage:       17 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		Interrupt level 1
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913 ;; *************** function _timer_isr *****************
   914 ;; Defined at:
   915 ;;		line 124 in file "main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;		None               void
   922 ;; Registers used:
   923 ;;		None
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   933 ;;Total ram usage:       17 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		Interrupt level 1
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	intcodelo
   943  000018                     __pintcodelo:
   944                           	opt stack 0
   945  000018                     _high_isr:
   946                           	opt stack 29
   947                           
   948                           ;incstack = 0
   949  000018  CFD8 F001          	movff	status,??_high_isr
   950  00001C  CFE8 F002          	movff	wreg,??_high_isr+1
   951  000020  CFE0 F003          	movff	bsr,??_high_isr+2
   952  000024  CFFA F004          	movff	pclath,??_high_isr+3
   953  000028  CFFB F005          	movff	pclatu,??_high_isr+4
   954  00002C  CFE9 F006          	movff	fsr0l,??_high_isr+5
   955  000030  CFEA F007          	movff	fsr0h,??_high_isr+6
   956  000034  CFE1 F008          	movff	fsr1l,??_high_isr+7
   957  000038  CFE2 F009          	movff	fsr1h,??_high_isr+8
   958  00003C  CFD9 F00A          	movff	fsr2l,??_high_isr+9
   959  000040  CFDA F00B          	movff	fsr2h,??_high_isr+10
   960  000044  CFF3 F00C          	movff	prodl,??_high_isr+11
   961  000048  CFF4 F00D          	movff	prodh,??_high_isr+12
   962  00004C  CFF6 F00E          	movff	tblptrl,??_high_isr+13
   963  000050  CFF7 F00F          	movff	tblptrh,??_high_isr+14
   964  000054  CFF8 F010          	movff	tblptru,??_high_isr+15
   965  000058  CFF5 F011          	movff	tablat,??_high_isr+16
   966                           
   967                           ;main.c: 113: if (RC2IF) {
   968  00005C  AAA4               	btfss	4004,5,c	;volatile
   969  00005E  D017               	goto	i1l755
   970                           
   971                           ;main.c: 114: tampon = RCREG2;
   972  000060  CF7A F038          	movff	3962,_tampon	;volatile
   973                           
   974                           ;main.c: 115: if (compteur == 128) {
   975  000064  5034               	movf	_compteur,w,c
   976  000066  0A80               	xorlw	128
   977  000068  1035               	iorwf	_compteur+1,w,c
   978  00006A  A4D8               	btfss	status,2,c
   979  00006C  D004               	goto	i1l751
   980                           
   981                           ;main.c: 116: compteur = 0;
   982  00006E  0E00               	movlw	0
   983  000070  6E35               	movwf	_compteur+1,c
   984  000072  0E00               	movlw	0
   985  000074  6E34               	movwf	_compteur,c
   986  000076                     i1l751:
   987                           
   988                           ;main.c: 117: }
   989                           ;main.c: 118: stock_led[compteur] = tampon;
   990  000076  0100               	movlb	0	; () banked
   991  000078  0E60               	movlw	low _stock_led
   992  00007A  2434               	addwf	_compteur,w,c
   993  00007C  6ED9               	movwf	fsr2l,c
   994  00007E  0100               	movlb	0	; () banked
   995  000080  0E00               	movlw	high _stock_led
   996  000082  2035               	addwfc	_compteur+1,w,c
   997  000084  6EDA               	movwf	fsr2h,c
   998  000086  C038  FFDF         	movff	_tampon,indf2
   999                           
  1000                           ; BSR set to: 0
  1001                           ;main.c: 119: compteur++;
  1002  00008A  4A34               	infsnz	_compteur,f,c
  1003  00008C  2A35               	incf	_compteur+1,f,c
  1004  00008E                     i1l755:
  1005                           
  1006                           ;main.c: 120: }
  1007                           ;main.c: 121: RC2IF = 0;
  1008  00008E  9AA4               	bcf	4004,5,c	;volatile
  1009  000090  C011  FFF5         	movff	??_high_isr+16,tablat
  1010  000094  C010  FFF8         	movff	??_high_isr+15,tblptru
  1011  000098  C00F  FFF7         	movff	??_high_isr+14,tblptrh
  1012  00009C  C00E  FFF6         	movff	??_high_isr+13,tblptrl
  1013  0000A0  C00D  FFF4         	movff	??_high_isr+12,prodh
  1014  0000A4  C00C  FFF3         	movff	??_high_isr+11,prodl
  1015  0000A8  C00B  FFDA         	movff	??_high_isr+10,fsr2h
  1016  0000AC  C00A  FFD9         	movff	??_high_isr+9,fsr2l
  1017  0000B0  C009  FFE2         	movff	??_high_isr+8,fsr1h
  1018  0000B4  C008  FFE1         	movff	??_high_isr+7,fsr1l
  1019  0000B8  C007  FFEA         	movff	??_high_isr+6,fsr0h
  1020  0000BC  C006  FFE9         	movff	??_high_isr+5,fsr0l
  1021  0000C0  C005  FFFB         	movff	??_high_isr+4,pclatu
  1022  0000C4  C004  FFFA         	movff	??_high_isr+3,pclath
  1023  0000C8  C003  FFE0         	movff	??_high_isr+2,bsr
  1024  0000CC  C002  FFE8         	movff	??_high_isr+1,wreg
  1025  0000D0  C001  FFD8         	movff	??_high_isr,status
  1026  0000D4  0010               	retfie	
  1027  0000D6                     __end_of_high_isr:
  1028                           	opt stack 0
  1029  0000D6                     _timer_isr:
  1030                           	opt stack 29
  1031                           
  1032                           ;incstack = 0
  1033  0000D6  CFD8 F012          	movff	status,??_timer_isr
  1034  0000DA  CFE8 F013          	movff	wreg,??_timer_isr+1
  1035  0000DE  CFE0 F014          	movff	bsr,??_timer_isr+2
  1036  0000E2  CFFA F015          	movff	pclath,??_timer_isr+3
  1037  0000E6  CFFB F016          	movff	pclatu,??_timer_isr+4
  1038  0000EA  CFE9 F017          	movff	fsr0l,??_timer_isr+5
  1039  0000EE  CFEA F018          	movff	fsr0h,??_timer_isr+6
  1040  0000F2  CFE1 F019          	movff	fsr1l,??_timer_isr+7
  1041  0000F6  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
  1042  0000FA  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
  1043  0000FE  CFDA F01C          	movff	fsr2h,??_timer_isr+10
  1044  000102  CFF3 F01D          	movff	prodl,??_timer_isr+11
  1045  000106  CFF4 F01E          	movff	prodh,??_timer_isr+12
  1046  00010A  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
  1047  00010E  CFF7 F020          	movff	tblptrh,??_timer_isr+14
  1048  000112  CFF8 F021          	movff	tblptru,??_timer_isr+15
  1049  000116  CFF5 F022          	movff	tablat,??_timer_isr+16
  1050                           
  1051                           ;main.c: 126: if (TMR0IE && TMR0IF) {
  1052  00011A  BAF2               	btfsc	intcon,5,c	;volatile
  1053  00011C  D000               	goto	i1l44
  1054  00011E                     i1l44:
  1055                           
  1056                           ;main.c: 127: }
  1057                           ;main.c: 128: TMR0IF = 0;
  1058  00011E  94F2               	bcf	intcon,2,c	;volatile
  1059  000120  C022  FFF5         	movff	??_timer_isr+16,tablat
  1060  000124  C021  FFF8         	movff	??_timer_isr+15,tblptru
  1061  000128  C020  FFF7         	movff	??_timer_isr+14,tblptrh
  1062  00012C  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
  1063  000130  C01E  FFF4         	movff	??_timer_isr+12,prodh
  1064  000134  C01D  FFF3         	movff	??_timer_isr+11,prodl
  1065  000138  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
  1066  00013C  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
  1067  000140  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
  1068  000144  C019  FFE1         	movff	??_timer_isr+7,fsr1l
  1069  000148  C018  FFEA         	movff	??_timer_isr+6,fsr0h
  1070  00014C  C017  FFE9         	movff	??_timer_isr+5,fsr0l
  1071  000150  C016  FFFB         	movff	??_timer_isr+4,pclatu
  1072  000154  C015  FFFA         	movff	??_timer_isr+3,pclath
  1073  000158  C014  FFE0         	movff	??_timer_isr+2,bsr
  1074  00015C  C013  FFE8         	movff	??_timer_isr+1,wreg
  1075  000160  C012  FFD8         	movff	??_timer_isr,status
  1076  000164  0010               	retfie	
  1077  000166                     __end_of_timer_isr:
  1078                           	opt stack 0
  1079  0000                     pclatu	equ	0xFFB
  1080                           pclath	equ	0xFFA
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           prodh	equ	0xFF4
  1086                           prodl	equ	0xFF3
  1087                           intcon	equ	0xFF2
  1088                           postinc0	equ	0xFEE
  1089                           fsr0h	equ	0xFEA
  1090                           fsr0l	equ	0xFE9
  1091                           wreg	equ	0xFE8
  1092                           postdec1	equ	0xFE5
  1093                           fsr1h	equ	0xFE2
  1094                           fsr1l	equ	0xFE1
  1095                           bsr	equ	0xFE0
  1096                           indf2	equ	0xFDF
  1097                           fsr2h	equ	0xFDA
  1098                           fsr2l	equ	0xFD9
  1099                           status	equ	0xFD8
  1100                           pclatu	equ	0xFFB
  1101                           pclath	equ	0xFFA
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           prodh	equ	0xFF4
  1107                           prodl	equ	0xFF3
  1108                           intcon	equ	0xFF2
  1109                           postinc0	equ	0xFEE
  1110                           fsr0h	equ	0xFEA
  1111                           fsr0l	equ	0xFE9
  1112                           wreg	equ	0xFE8
  1113                           postdec1	equ	0xFE5
  1114                           fsr1h	equ	0xFE2
  1115                           fsr1l	equ	0xFE1
  1116                           bsr	equ	0xFE0
  1117                           indf2	equ	0xFDF
  1118                           fsr2h	equ	0xFDA
  1119                           fsr2l	equ	0xFD9
  1120                           status	equ	0xFD8
  1121                           
  1122                           	psect	rparam
  1123  0000                     pclatu	equ	0xFFB
  1124                           pclath	equ	0xFFA
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           prodh	equ	0xFF4
  1130                           prodl	equ	0xFF3
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           fsr0h	equ	0xFEA
  1134                           fsr0l	equ	0xFE9
  1135                           wreg	equ	0xFE8
  1136                           postdec1	equ	0xFE5
  1137                           fsr1h	equ	0xFE2
  1138                           fsr1l	equ	0xFE1
  1139                           bsr	equ	0xFE0
  1140                           indf2	equ	0xFDF
  1141                           fsr2h	equ	0xFDA
  1142                           fsr2l	equ	0xFD9
  1143                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      64
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_decodage

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                          _affichage
                           _decodage
                          _initComms
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decodage                                             1     1      0     120
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _affichage                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _affichage
   _decodage
   _initComms
   _initPorts

 _high_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      40       1       67.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC       6        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Nov 19 12:36:44 2014

            __CFG_CP0$ON 000000              __CFG_CP1$ON 000000              __CFG_CP2$ON 000000  
            __CFG_CP3$ON 000000              __CFG_CPB$ON 000000              __CFG_CPD$ON 000000  
                     u55 0214                       u56 0216                       u65 021E  
                     u66 0220                       u75 0228                       u76 022A  
                     u85 0232                       u86 0234                       u95 023C  
                     u96 023E              _state_clock 0037                       bsr 000FE0  
            __CFG_BORV$3 000000                      l731 01AA                      l735 01EE  
                    l727 017A                      l763 0366                      _GIE 007F97  
                    u105 0246                      u106 0248                      u115 0250  
                    u116 0252                      u205 02AA                      u125 025A  
                    u206 02AC                      u126 025C                      u135 0264  
                    u136 0266                      u145 026E                      u146 0270  
                    u155 0278                      u156 027A                      u165 0282  
                    u166 0284                      u175 028C                      u176 028E  
                    u185 0296                      u186 0298                      u195 02A0  
                    u196 02A2                      prod 000FF3                      wreg 000FE8  
           __CFG_IESO$ON 000000               _TXSTA2bits 000FBA                     _MASK 0039  
                   _PEIE 007F96                     i1l44 011E             __CFG_WRT0$ON 000000  
           __CFG_WRT1$ON 000000             __CFG_WRT2$ON 000000             __CFG_WRT3$ON 000000  
          __CFG_EBTR0$ON 000000            __CFG_EBTR1$ON 000000            __CFG_EBTR2$ON 000000  
          __CFG_EBTR3$ON 000000             __CFG_WRTB$ON 000000             __CFG_WRTC$ON 000000  
           __CFG_WRTD$ON 000000            __CFG_EBTRB$ON 000000                     _main 035E  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0166            __CFG_RETEN$ON 000000  
           _BAUDCON2bits 000FB9                    ?_main 0001                    _RC2IF 007D25  
                  i1l751 0076                    i1l755 008E                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
         __CFG_FCMEN$OFF 000000                    tablat 000FF5                    status 000FD8  
         _compteur_clock 0036           __CFG_MCLRE$OFF 000000          __initialization 02EE  
           __end_of_main 0370                   ??_main 0024            __activetblptr 000000  
         __CFG_PLLCFG$ON 000000                   _ADCON1 000FC1                   _ANCON0 000F5D  
        __CFG_BBSIZ$BB2K 000000           __CFG_WDTEN$OFF 000000                   _INTCON 000FF2  
                 _RCREG2 000F7A                   _OSCCON 000FD3                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _SPBRG2 000F7B                   _TXREG2 000F79  
       __end_of_decodage 020C           __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000  
       __end_of_high_isr 00D6           __CFG_STVREN$ON 000000                   clear_0 02F4  
                 clear_1 0300                   _tampon 0038             __pdataCOMRAM 0039  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0326       __size_of_affichage 00A2  
         __pcstackCOMRAM 0001               __pbssBANK0 0060       __size_of_initComms 0040  
     __size_of_initPorts 0032         __CFG_CANMX$PORTB 000000       __size_of_timer_isr 0090  
              ?_decodage 0001        __end_of_affichage 02AE                  _SPBRGH2 000F7C  
              ?_high_isr 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 02EE                  __ramtop 0F00                  __ptext0 035E  
                __ptext1 032C                  __ptext2 02AE                  __ptext3 016A  
                __ptext4 020C        __end_of_initComms 02EE        __end_of_initPorts 035E  
             ??_decodage 0023        __CFG_MSSPMSK$MSK7 000000               ??_high_isr 0001  
   end_of_initialization 0326        __end_of_timer_isr 0166                  postdec1 000FE5  
                postinc0 000FEE                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82         __CFG_FOSC$INTIO2 000000            __pidataCOMRAM 0370  
    start_initialization 02EE              __pbssCOMRAM 0024        __size_of_decodage 00A2  
              _affichage 020C        __size_of_high_isr 00BE              __pintcodelo 0018  
              _led_state 0024                _initComms 02AE                _initPorts 032C  
              decodage@a 0023               ?_affichage 0001                 _PIE3bits 000FA3  
               _PIR3bits 000FA4                 _RCONbits 000FD0                _timer_isr 00D6  
       __CFG_SOSCSEL$DIG 000000                _stock_led 0060               ?_initComms 0001  
             ?_initPorts 0001                copy_data0 031A                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000               ?_timer_isr 0001  
               _decodage 016A                 _high_isr 0018                 _compteur 0034  
            ??_affichage 0023            __size_of_main 0012      __CFG_INTOSCSEL$HIGH 000000  
            _OSCTUNEbits 000F9B              ??_initComms 0023              ??_initPorts 0023  
               intlevel1 0000               _RCSTA2bits 000FA6       __CFG_WDTPS$1048576 000000  
            ??_timer_isr 0012      __CFG_BORPWR$ZPBORMV 000000  
