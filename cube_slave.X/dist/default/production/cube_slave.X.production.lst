

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 18 13:29:43 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000496                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _MASK
    25  000496  80                 	db	128
    26  000497  40                 	db	64
    27  000498  20                 	db	32
    28  000499  10                 	db	16
    29  00049A  08                 	db	8
    30  00049B  04                 	db	4
    31  00049C  02                 	db	2
    32  00049D  01                 	db	1
    33  0000                     _ADCON1	set	4033
    34  0000                     _ANCON0	set	3933
    35  0000                     _BAUDCON2bits	set	4025
    36  0000                     _INTCON	set	4082
    37  0000                     _OSCCON	set	4051
    38  0000                     _OSCTUNEbits	set	3995
    39  0000                     _PIE3bits	set	4003
    40  0000                     _PIR3bits	set	4004
    41  0000                     _PORTA	set	3968
    42  0000                     _PORTAbits	set	3968
    43  0000                     _PORTB	set	3969
    44  0000                     _PORTBbits	set	3969
    45  0000                     _PORTC	set	3970
    46  0000                     _PORTCbits	set	3970
    47  0000                     _RCONbits	set	4048
    48  0000                     _RCREG2	set	3962
    49  0000                     _RCSTA2bits	set	4006
    50  0000                     _SPBRG	set	4015
    51  0000                     _SPBRG2	set	3963
    52  0000                     _SPBRGH2	set	3964
    53  0000                     _TRISA	set	3986
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISC	set	3988
    56  0000                     _TXREG2	set	3961
    57  0000                     _TXSTA2bits	set	4026
    58  0000                     _GIE	set	32663
    59  0000                     _PEIE	set	32662
    60  0000                     _RC2IF	set	32037
    61  0000                     _TMR0IE	set	32661
    62  0000                     _TMR0IF	set	32658
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  0003E2                     __pcinit:
    68                           	opt stack 0
    69  0003E2                     start_initialization:
    70                           	opt stack 0
    71  0003E2                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to BANK0 (140 bytes)
    75  0003E2  EE00  F060         	lfsr	0,__pbssBANK0
    76  0003E6  0E8C               	movlw	140
    77  0003E8                     clear_0:
    78  0003E8  6AEE               	clrf	postinc0,c
    79  0003EA  06E8               	decf	wreg,f,c
    80  0003EC  E1FD               	bnz	clear_0
    81                           
    82                           ; Clear objects allocated to COMRAM (22 bytes)
    83  0003EE  EE00  F02D         	lfsr	0,__pbssCOMRAM
    84  0003F2  0E16               	movlw	22
    85  0003F4                     clear_1:
    86  0003F4  6AEE               	clrf	postinc0,c
    87  0003F6  06E8               	decf	wreg,f,c
    88  0003F8  E1FD               	bnz	clear_1
    89                           
    90                           ; Initialize objects allocated to COMRAM (8 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  0003FA  0E96               	movlw	low __pidataCOMRAM
    93  0003FC  6EF6               	movwf	tblptrl,c
    94  0003FE  0E04               	movlw	high __pidataCOMRAM
    95  000400  6EF7               	movwf	tblptrh,c
    96  000402  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  000404  6EF8               	movwf	tblptru,c
    98  000406  EE00  F043         	lfsr	0,__pdataCOMRAM
    99  00040A  EE10 F008          	lfsr	1,8
   100  00040E                     copy_data0:
   101  00040E  0009               	tblrd		*+
   102  000410  CFF5 FFEE          	movff	tablat,postinc0
   103  000414  50E5               	movf	postdec1,w,c
   104  000416  50E1               	movf	fsr1l,w,c
   105  000418  E1FA               	bnz	copy_data0
   106  00041A                     end_of_initialization:
   107                           	opt stack 0
   108  00041A                     __end_of__initialization:
   109                           	opt stack 0
   110  00041A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111  00041C  6EF8               	movwf	tblptru,c
   112  00041E  0100               	movlb	0
   113  000420  EFA9  F001         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           tblptrl	equ	0xFF6
   117                           tablat	equ	0xFF5
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           postdec1	equ	0xFE5
   121                           fsr1l	equ	0xFE1
   122                           
   123                           	psect	bssCOMRAM
   124  00002D                     __pbssCOMRAM:
   125                           	opt stack 0
   126  00002D                     _led_state:
   127                           	opt stack 0
   128  00002D                     	ds	16
   129  00003D                     _compteur:
   130                           	opt stack 0
   131  00003D                     	ds	2
   132  00003F                     _compteur_clock:
   133                           	opt stack 0
   134  00003F                     	ds	1
   135  000040                     _mux:
   136                           	opt stack 0
   137  000040                     	ds	1
   138  000041                     _state_clock:
   139                           	opt stack 0
   140  000041                     	ds	1
   141  000042                     _tampon:
   142                           	opt stack 0
   143  000042                     	ds	1
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	dataCOMRAM
   154  000043                     __pdataCOMRAM:
   155                           	opt stack 0
   156  000043                     _MASK:
   157                           	opt stack 0
   158  000043                     	ds	8
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           postdec1	equ	0xFE5
   166                           fsr1l	equ	0xFE1
   167                           
   168                           	psect	bssBANK0
   169  000060                     __pbssBANK0:
   170                           	opt stack 0
   171  000060                     _stock_led:
   172                           	opt stack 0
   173  000060                     	ds	140
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	cstackCOMRAM
   184  000001                     __pcstackCOMRAM:
   185                           	opt stack 0
   186  000001                     ??_high_isr:
   187  000001                     
   188                           ; 0 bytes @ 0x0
   189  000001                     	ds	17
   190  000012                     ??_timer_isr:
   191                           
   192                           ; 0 bytes @ 0x11
   193  000012                     	ds	17
   194  000023                     decodage@n:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x22
   198  000023                     	ds	2
   199  000025                     ??_decodage:
   200                           
   201                           ; 0 bytes @ 0x24
   202  000025                     	ds	3
   203  000028                     decodage@a:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x27
   207  000028                     	ds	1
   208  000029                     main@i:
   209                           	opt stack 0
   210                           
   211                           ; 4 bytes @ 0x28
   212  000029                     	ds	4
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 138 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  i               4   40[COMRAM] long 
   232 ;; Return value:  Size  Location     Type
   233 ;;		None               void
   234 ;; Registers used:
   235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   244 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   245 ;;Total ram usage:        4 bytes
   246 ;; Hardware stack levels required when called:    2
   247 ;; This function calls:
   248 ;;		_affichage
   249 ;;		_decodage
   250 ;;		_initComms
   251 ;;		_initPorts
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text0
   258  000352                     __ptext0:
   259                           	opt stack 0
   260  000352                     _main:
   261                           	opt stack 29
   262                           
   263                           ;main.c: 141: long i = 0;
   264                           
   265                           ;incstack = 0
   266  000352  0E00               	movlw	0
   267  000354  6E29               	movwf	main@i,c
   268  000356  0E00               	movlw	0
   269  000358  6E2A               	movwf	main@i+1,c
   270  00035A  0E00               	movlw	0
   271  00035C  6E2B               	movwf	main@i+2,c
   272  00035E  0E00               	movlw	0
   273  000360  6E2C               	movwf	main@i+3,c
   274                           
   275                           ;main.c: 142: initPorts();
   276  000362  EC32  F002         	call	_initPorts	;wreg free
   277                           
   278                           ;main.c: 143: initComms();
   279  000366  EC12  F002         	call	_initComms	;wreg free
   280  00036A                     l783:
   281                           
   282                           ;main.c: 147: decodage(0);
   283  00036A  0E00               	movlw	0
   284  00036C  6E24               	movwf	decodage@n+1,c
   285  00036E  0E00               	movlw	0
   286  000370  6E23               	movwf	decodage@n,c
   287  000372  ECB5  F000         	call	_decodage	;wreg free
   288                           
   289                           ;main.c: 149: for (mux = 0; mux < 4; mux++) {
   290  000376  0E00               	movlw	0
   291  000378  6E40               	movwf	_mux,c
   292  00037A  0E03               	movlw	3
   293  00037C  6440               	cpfsgt	_mux,c
   294  00037E  D001               	goto	l791
   295  000380  D7F4               	goto	l783
   296  000382                     l791:
   297                           
   298                           ;main.c: 150: affichage();
   299  000382  EC36  F001         	call	_affichage	;wreg free
   300                           
   301                           ;main.c: 152: for (i = 0; i < 1000000; i++) {
   302  000386  0E00               	movlw	0
   303  000388  6E29               	movwf	main@i,c
   304  00038A  0E00               	movlw	0
   305  00038C  6E2A               	movwf	main@i+1,c
   306  00038E  0E00               	movlw	0
   307  000390  6E2B               	movwf	main@i+2,c
   308  000392  0E00               	movlw	0
   309  000394  6E2C               	movwf	main@i+3,c
   310  000396  502C               	movf	main@i+3,w,c
   311  000398  0A80               	xorlw	128
   312  00039A  0F80               	addlw	128
   313  00039C  E108               	bnz	u255
   314  00039E  0E0F               	movlw	15
   315  0003A0  5C2B               	subwf	main@i+2,w,c
   316  0003A2  E105               	bnz	u255
   317  0003A4  0E42               	movlw	66
   318  0003A6  5C2A               	subwf	main@i+1,w,c
   319  0003A8  E102               	bnz	u255
   320  0003AA  0E40               	movlw	64
   321  0003AC  5C29               	subwf	main@i,w,c
   322  0003AE                     u255:
   323  0003AE  B0D8               	btfsc	status,0,c
   324  0003B0  D013               	goto	l801
   325  0003B2  0E01               	movlw	1
   326  0003B4  2629               	addwf	main@i,f,c
   327  0003B6  0E00               	movlw	0
   328  0003B8  222A               	addwfc	main@i+1,f,c
   329  0003BA  222B               	addwfc	main@i+2,f,c
   330  0003BC  222C               	addwfc	main@i+3,f,c
   331  0003BE  502C               	movf	main@i+3,w,c
   332  0003C0  0A80               	xorlw	128
   333  0003C2  0F80               	addlw	128
   334  0003C4  E108               	bnz	u265
   335  0003C6  0E0F               	movlw	15
   336  0003C8  5C2B               	subwf	main@i+2,w,c
   337  0003CA  E105               	bnz	u265
   338  0003CC  0E42               	movlw	66
   339  0003CE  5C2A               	subwf	main@i+1,w,c
   340  0003D0  E102               	bnz	u265
   341  0003D2  0E40               	movlw	64
   342  0003D4  5C29               	subwf	main@i,w,c
   343  0003D6                     u265:
   344  0003D6  D7EB               	goto	u255
   345  0003D8                     l801:
   346  0003D8  2A40               	incf	_mux,f,c
   347  0003DA  0E03               	movlw	3
   348  0003DC  6440               	cpfsgt	_mux,c
   349  0003DE  D7D1               	goto	l791
   350  0003E0  D7C4               	goto	l783
   351  0003E2                     __end_of_main:
   352                           	opt stack 0
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           status	equ	0xFD8
   362                           
   363 ;; *************** function _initPorts *****************
   364 ;; Defined at:
   365 ;;		line 6 in file "port.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;		None               void
   372 ;; Registers used:
   373 ;;		wreg, status,2
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; Hardware stack levels required when called:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text1
   394  000464                     __ptext1:
   395                           	opt stack 0
   396  000464                     _initPorts:
   397                           	opt stack 29
   398                           
   399                           ;port.c: 10: OSCCON= 0x70;
   400                           
   401                           ;incstack = 0
   402  000464  0E70               	movlw	112
   403  000466  6ED3               	movwf	4051,c	;volatile
   404                           
   405                           ;port.c: 12: ANCON0 = 0b00000000;
   406  000468  0E00               	movlw	0
   407  00046A  010F               	movlb	15	; () banked
   408  00046C  6F5D               	movwf	93,b	;volatile
   409                           
   410                           ;port.c: 13: ADCON1 = 0b00000000;
   411  00046E  0E00               	movlw	0
   412  000470  6EC1               	movwf	4033,c	;volatile
   413                           
   414                           ;port.c: 18: PORTA = 0b00000000;
   415  000472  0E00               	movlw	0
   416  000474  6E80               	movwf	3968,c	;volatile
   417                           
   418                           ;port.c: 19: TRISA = 0b00000000;
   419  000476  0E00               	movlw	0
   420  000478  6E92               	movwf	3986,c	;volatile
   421                           
   422                           ;port.c: 21: PORTB = 0b01000000;
   423  00047A  0E40               	movlw	64
   424  00047C  6E81               	movwf	3969,c	;volatile
   425                           
   426                           ;port.c: 22: TRISB = 0b10000000;
   427  00047E  0E80               	movlw	128
   428  000480  6E93               	movwf	3987,c	;volatile
   429                           
   430                           ;port.c: 24: PORTC = 0b00000000;
   431  000482  0E00               	movlw	0
   432  000484  6E82               	movwf	3970,c	;volatile
   433                           
   434                           ;port.c: 25: TRISC = 0b00000000;
   435  000486  0E00               	movlw	0
   436  000488  6E94               	movwf	3988,c	;volatile
   437                           
   438                           ; BSR set to: 15
   439                           ;port.c: 27: GIE = 1;
   440  00048A  8EF2               	bsf	intcon,7,c	;volatile
   441                           
   442                           ; BSR set to: 15
   443                           ;port.c: 28: PEIE = 1;
   444  00048C  8CF2               	bsf	intcon,6,c	;volatile
   445                           
   446                           ;port.c: 29: INTCON =0b11111000;
   447  00048E  0EF8               	movlw	248
   448  000490  6EF2               	movwf	intcon,c	;volatile
   449                           
   450                           ; BSR set to: 15
   451                           ;port.c: 30: OSCTUNEbits.PLLEN = 1;
   452  000492  8C9B               	bsf	3995,6,c	;volatile
   453                           
   454                           ; BSR set to: 15
   455  000494  0012               	return	
   456  000496                     __end_of_initPorts:
   457                           	opt stack 0
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           intcon	equ	0xFF2
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           status	equ	0xFD8
   468                           
   469 ;; *************** function _initComms *****************
   470 ;; Defined at:
   471 ;;		line 6 in file "usart.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;		None               void
   478 ;; Registers used:
   479 ;;		wreg, status,2
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500  000424                     __ptext2:
   501                           	opt stack 0
   502  000424                     _initComms:
   503                           	opt stack 29
   504                           
   505                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   506                           
   507                           ; BSR set to: 15
   508                           ;incstack = 0
   509  000424  9EBA               	bcf	4026,7,c	;volatile
   510                           
   511                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   512  000426  9CBA               	bcf	4026,6,c	;volatile
   513                           
   514                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   515  000428  8ABA               	bsf	4026,5,c	;volatile
   516                           
   517                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   518  00042A  98BA               	bcf	4026,4,c	;volatile
   519                           
   520                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   521  00042C  96BA               	bcf	4026,3,c	;volatile
   522                           
   523                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   524  00042E  84BA               	bsf	4026,2,c	;volatile
   525                           
   526                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   527  000430  82BA               	bsf	4026,1,c	;volatile
   528                           
   529                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   530  000432  90BA               	bcf	4026,0,c	;volatile
   531                           
   532                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   533  000434  8EA6               	bsf	4006,7,c	;volatile
   534                           
   535                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   536  000436  9CA6               	bcf	4006,6,c	;volatile
   537                           
   538                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   539  000438  9AA6               	bcf	4006,5,c	;volatile
   540                           
   541                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   542  00043A  88A6               	bsf	4006,4,c	;volatile
   543                           
   544                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   545  00043C  96A6               	bcf	4006,3,c	;volatile
   546                           
   547                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   548  00043E  94A6               	bcf	4006,2,c	;volatile
   549                           
   550                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   551  000440  92A6               	bcf	4006,1,c	;volatile
   552                           
   553                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
   554  000442  90A6               	bcf	4006,0,c	;volatile
   555                           
   556                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
   557  000444  9EB9               	bcf	4025,7,c	;volatile
   558                           
   559                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
   560  000446  8CB9               	bsf	4025,6,c	;volatile
   561                           
   562                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
   563  000448  9AB9               	bcf	4025,5,c	;volatile
   564                           
   565                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
   566  00044A  98B9               	bcf	4025,4,c	;volatile
   567                           
   568                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
   569  00044C  86B9               	bsf	4025,3,c	;volatile
   570                           
   571                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
   572  00044E  92B9               	bcf	4025,1,c	;volatile
   573                           
   574                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
   575  000450  90B9               	bcf	4025,0,c	;volatile
   576                           
   577                           ;usart.c: 34: PIE3bits.RC2IE = 1;
   578  000452  8AA3               	bsf	4003,5,c	;volatile
   579                           
   580                           ;usart.c: 35: RCONbits.IPEN = 1;
   581  000454  8ED0               	bsf	4048,7,c	;volatile
   582                           
   583                           ;usart.c: 45: SPBRG = 115;
   584  000456  0E73               	movlw	115
   585  000458  6EAF               	movwf	4015,c	;volatile
   586                           
   587                           ;usart.c: 46: SPBRGH2 = 0;
   588  00045A  0E00               	movlw	0
   589  00045C  6E7C               	movwf	3964,c	;volatile
   590                           
   591                           ;usart.c: 47: SPBRG2 = 137;
   592  00045E  0E89               	movlw	137
   593  000460  6E7B               	movwf	3963,c	;volatile
   594  000462  0012               	return	
   595  000464                     __end_of_initComms:
   596                           	opt stack 0
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           intcon	equ	0xFF2
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           status	equ	0xFD8
   607                           
   608 ;; *************** function _decodage *****************
   609 ;; Defined at:
   610 ;;		line 160 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  n               2   34[COMRAM] int 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  a               1   39[COMRAM] unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;		None               void
   617 ;; Registers used:
   618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   626 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   627 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;Total ram usage:        6 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text3
   639  00016A                     __ptext3:
   640                           	opt stack 0
   641  00016A                     _decodage:
   642                           	opt stack 29
   643                           
   644                           ;main.c: 161: char a = 0;
   645                           
   646                           ;incstack = 0
   647  00016A  0E00               	movlw	0
   648  00016C  6E28               	movwf	decodage@a,c
   649                           
   650                           ;main.c: 162: for (a = 0; a < 8; a++) {
   651  00016E  0E00               	movlw	0
   652  000170  6E28               	movwf	decodage@a,c
   653  000172  0E07               	movlw	7
   654  000174  6428               	cpfsgt	decodage@a,c
   655  000176  D001               	goto	l739
   656  000178  0012               	return	
   657  00017A                     l739:
   658                           
   659                           ;main.c: 163: if (MASK[a] & stock_led[2 * 0 + 16 * n])
   660  00017A  C023  F025         	movff	decodage@n,??_decodage
   661  00017E  C024  F026         	movff	decodage@n+1,??_decodage+1
   662  000182  3A25               	swapf	??_decodage,f,c
   663  000184  3A26               	swapf	??_decodage+1,f,c
   664  000186  0EF0               	movlw	240
   665  000188  1626               	andwf	??_decodage+1,f,c
   666  00018A  5025               	movf	??_decodage,w,c
   667  00018C  0B0F               	andlw	15
   668  00018E  1226               	iorwf	??_decodage+1,f,c
   669  000190  0EF0               	movlw	240
   670  000192  1625               	andwf	??_decodage,f,c
   671  000194  0100               	movlb	0	; () banked
   672  000196  0E60               	movlw	low _stock_led
   673  000198  2425               	addwf	??_decodage,w,c
   674  00019A  6ED9               	movwf	fsr2l,c
   675  00019C  0100               	movlb	0	; () banked
   676  00019E  0E00               	movlw	high _stock_led
   677  0001A0  2026               	addwfc	??_decodage+1,w,c
   678  0001A2  6EDA               	movwf	fsr2h,c
   679  0001A4  50DF               	movf	indf2,w,c
   680  0001A6  6E27               	movwf	(??_decodage+2)& (0+255),c
   681  0001A8  5028               	movf	decodage@a,w,c
   682  0001AA  0D01               	mullw	1
   683  0001AC  0E43               	movlw	low _MASK
   684  0001AE  24F3               	addwf	prodl,w,c
   685  0001B0  6ED9               	movwf	fsr2l,c
   686  0001B2  0E00               	movlw	high _MASK
   687  0001B4  20F4               	addwfc	prodh,w,c
   688  0001B6  6EDA               	movwf	fsr2h,c
   689  0001B8  50DF               	movf	indf2,w,c
   690  0001BA  1427               	andwf	??_decodage+2,w,c
   691  0001BC  0900               	iorlw	0
   692  0001BE  B4D8               	btfsc	status,2,c
   693  0001C0  D00A               	goto	l743
   694                           
   695                           ; BSR set to: 0
   696                           ;main.c: 164: {
   697                           ;main.c: 165: led_state[0][a] = 1;
   698  0001C2  5028               	movf	decodage@a,w,c
   699  0001C4  0D01               	mullw	1
   700  0001C6  0E2D               	movlw	low _led_state
   701  0001C8  24F3               	addwf	prodl,w,c
   702  0001CA  6ED9               	movwf	fsr2l,c
   703  0001CC  0E00               	movlw	high _led_state
   704  0001CE  20F4               	addwfc	prodh,w,c
   705  0001D0  6EDA               	movwf	fsr2h,c
   706  0001D2  0E01               	movlw	1
   707  0001D4  D009               	goto	L1
   708  0001D6                     l743:
   709                           
   710                           ; BSR set to: 0
   711                           ;main.c: 167: led_state[0][a] = 0;
   712  0001D6  5028               	movf	decodage@a,w,c
   713  0001D8  0D01               	mullw	1
   714  0001DA  0E2D               	movlw	low _led_state
   715  0001DC  24F3               	addwf	prodl,w,c
   716  0001DE  6ED9               	movwf	fsr2l,c
   717  0001E0  0E00               	movlw	high _led_state
   718  0001E2  20F4               	addwfc	prodh,w,c
   719  0001E4  6EDA               	movwf	fsr2h,c
   720  0001E6  0E00               	movlw	0
   721  0001E8                     L1:
   722  0001E8  6EDF               	movwf	indf2,c
   723                           
   724                           ; BSR set to: 0
   725                           ;main.c: 168: }
   726                           ;main.c: 170: if (MASK[a] & stock_led[2 * 0 + 1 + 16 * n]) {
   727  0001EA  C023  F025         	movff	decodage@n,??_decodage
   728  0001EE  C024  F026         	movff	decodage@n+1,??_decodage+1
   729  0001F2  3A25               	swapf	??_decodage,f,c
   730  0001F4  3A26               	swapf	??_decodage+1,f,c
   731  0001F6  0EF0               	movlw	240
   732  0001F8  1626               	andwf	??_decodage+1,f,c
   733  0001FA  5025               	movf	??_decodage,w,c
   734  0001FC  0B0F               	andlw	15
   735  0001FE  1226               	iorwf	??_decodage+1,f,c
   736  000200  0EF0               	movlw	240
   737  000202  1625               	andwf	??_decodage,f,c
   738  000204  0E01               	movlw	1
   739  000206  2625               	addwf	??_decodage,f,c
   740  000208  0E00               	movlw	0
   741  00020A  2226               	addwfc	??_decodage+1,f,c
   742  00020C  0100               	movlb	0	; () banked
   743  00020E  0E60               	movlw	low _stock_led
   744  000210  2425               	addwf	??_decodage,w,c
   745  000212  6ED9               	movwf	fsr2l,c
   746  000214  0100               	movlb	0	; () banked
   747  000216  0E00               	movlw	high _stock_led
   748  000218  2026               	addwfc	??_decodage+1,w,c
   749  00021A  6EDA               	movwf	fsr2h,c
   750  00021C  50DF               	movf	indf2,w,c
   751  00021E  6E27               	movwf	(??_decodage+2)& (0+255),c
   752  000220  5028               	movf	decodage@a,w,c
   753  000222  0D01               	mullw	1
   754  000224  0E43               	movlw	low _MASK
   755  000226  24F3               	addwf	prodl,w,c
   756  000228  6ED9               	movwf	fsr2l,c
   757  00022A  0E00               	movlw	high _MASK
   758  00022C  20F4               	addwfc	prodh,w,c
   759  00022E  6EDA               	movwf	fsr2h,c
   760  000230  50DF               	movf	indf2,w,c
   761  000232  1427               	andwf	??_decodage+2,w,c
   762  000234  0900               	iorlw	0
   763  000236  B4D8               	btfsc	status,2,c
   764  000238  D00A               	goto	l747
   765                           
   766                           ; BSR set to: 0
   767                           ;main.c: 171: led_state[1][a] = 1;
   768  00023A  5028               	movf	decodage@a,w,c
   769  00023C  0D01               	mullw	1
   770  00023E  0E35               	movlw	low (_led_state+8)
   771  000240  24F3               	addwf	prodl,w,c
   772  000242  6ED9               	movwf	fsr2l,c
   773  000244  0E00               	movlw	high (_led_state+8)
   774  000246  20F4               	addwfc	prodh,w,c
   775  000248  6EDA               	movwf	fsr2h,c
   776  00024A  0E01               	movlw	1
   777  00024C  D009               	goto	L2
   778  00024E                     l747:
   779                           
   780                           ; BSR set to: 0
   781                           ;main.c: 173: led_state[1][a] = 0;
   782  00024E  5028               	movf	decodage@a,w,c
   783  000250  0D01               	mullw	1
   784  000252  0E35               	movlw	low (_led_state+8)
   785  000254  24F3               	addwf	prodl,w,c
   786  000256  6ED9               	movwf	fsr2l,c
   787  000258  0E00               	movlw	high (_led_state+8)
   788  00025A  20F4               	addwfc	prodh,w,c
   789  00025C  6EDA               	movwf	fsr2h,c
   790  00025E  0E00               	movlw	0
   791  000260                     L2:
   792  000260  6EDF               	movwf	indf2,c
   793                           
   794                           ; BSR set to: 0
   795                           
   796                           ; BSR set to: 0
   797  000262  2A28               	incf	decodage@a,f,c
   798                           
   799                           ; BSR set to: 0
   800  000264  0E07               	movlw	7
   801  000266  6428               	cpfsgt	decodage@a,c
   802  000268  D788               	goto	l739
   803  00026A  0012               	return	
   804  00026C                     __end_of_decodage:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           prodh	equ	0xFF4
   811                           prodl	equ	0xFF3
   812                           intcon	equ	0xFF2
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           indf2	equ	0xFDF
   818                           fsr2h	equ	0xFDA
   819                           fsr2l	equ	0xFD9
   820                           status	equ	0xFD8
   821                           
   822 ;; *************** function _affichage *****************
   823 ;; Defined at:
   824 ;;		line 190 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;		None               void
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text4
   853  00026C                     __ptext4:
   854                           	opt stack 0
   855  00026C                     _affichage:
   856                           	opt stack 29
   857                           
   858                           ;main.c: 192: PORTAbits.RA0 = 0;
   859                           
   860                           ;incstack = 0
   861  00026C  9080               	bcf	3968,0,c	;volatile
   862                           
   863                           ;main.c: 193: PORTAbits.RA3 = 0;
   864  00026E  9680               	bcf	3968,3,c	;volatile
   865                           
   866                           ;main.c: 194: PORTAbits.RA6 = 0;
   867  000270  9C80               	bcf	3968,6,c	;volatile
   868                           
   869                           ;main.c: 195: PORTCbits.RC3 = 0;
   870  000272  9682               	bcf	3970,3,c	;volatile
   871                           
   872                           ;main.c: 196: PORTBbits.RB5 = 0;
   873  000274  9A81               	bcf	3969,5,c	;volatile
   874                           
   875                           ;main.c: 197: PORTBbits.RB3 = 0;
   876  000276  9681               	bcf	3969,3,c	;volatile
   877                           
   878                           ;main.c: 198: PORTBbits.RB0 = 0;
   879  000278  9081               	bcf	3969,0,c	;volatile
   880                           
   881                           ;main.c: 199: PORTCbits.RC5 = 0;
   882  00027A  9A82               	bcf	3970,5,c	;volatile
   883                           
   884                           ;main.c: 201: PORTAbits.RA1 = 0;
   885  00027C  9280               	bcf	3968,1,c	;volatile
   886                           
   887                           ;main.c: 202: PORTAbits.RA2 = 0;
   888  00027E  9480               	bcf	3968,2,c	;volatile
   889                           
   890                           ;main.c: 203: PORTCbits.RC0 = 0;
   891  000280  9082               	bcf	3970,0,c	;volatile
   892                           
   893                           ;main.c: 204: PORTCbits.RC2 = 0;
   894  000282  9482               	bcf	3970,2,c	;volatile
   895                           
   896                           ;main.c: 205: PORTBbits.RB4 = 0;
   897  000284  9881               	bcf	3969,4,c	;volatile
   898                           
   899                           ;main.c: 206: PORTBbits.RB2 = 0;
   900  000286  9481               	bcf	3969,2,c	;volatile
   901                           
   902                           ;main.c: 207: PORTCbits.RC6 = 0;
   903  000288  9C82               	bcf	3970,6,c	;volatile
   904                           
   905                           ;main.c: 208: PORTCbits.RC4 = 0;
   906  00028A  9882               	bcf	3970,4,c	;volatile
   907                           
   908                           ;main.c: 210: switch (mux) {
   909  00028C  D054               	goto	l757
   910  00028E                     l73:
   911                           
   912                           ;main.c: 213: PORTAbits.RA0 = led_state[0][0];
   913  00028E  B02D               	btfsc	_led_state,0,c
   914  000290  D002               	bra	u55
   915  000292  9080               	bcf	3968,0,c	;volatile
   916  000294  D001               	bra	u56
   917  000296                     u55:
   918  000296  8080               	bsf	3968,0,c	;volatile
   919  000298                     u56:
   920                           
   921                           ;main.c: 214: PORTAbits.RA3 = led_state[0][1];
   922  000298  B02E               	btfsc	_led_state+1,0,c
   923  00029A  D002               	bra	u65
   924  00029C  9680               	bcf	3968,3,c	;volatile
   925  00029E  D001               	bra	u66
   926  0002A0                     u65:
   927  0002A0  8680               	bsf	3968,3,c	;volatile
   928  0002A2                     u66:
   929                           
   930                           ;main.c: 215: PORTAbits.RA6 = led_state[0][2];
   931  0002A2  B02F               	btfsc	_led_state+2,0,c
   932  0002A4  D002               	bra	u75
   933  0002A6  9C80               	bcf	3968,6,c	;volatile
   934  0002A8  D001               	bra	u76
   935  0002AA                     u75:
   936  0002AA  8C80               	bsf	3968,6,c	;volatile
   937  0002AC                     u76:
   938                           
   939                           ;main.c: 216: PORTCbits.RC3 = led_state[0][3];
   940  0002AC  B030               	btfsc	_led_state+3,0,c
   941  0002AE  D002               	bra	u85
   942  0002B0  9682               	bcf	3970,3,c	;volatile
   943  0002B2  D001               	bra	u86
   944  0002B4                     u85:
   945  0002B4  8682               	bsf	3970,3,c	;volatile
   946  0002B6                     u86:
   947                           
   948                           ;main.c: 217: break;
   949  0002B6  0012               	return	
   950  0002B8                     l75:
   951                           
   952                           ;main.c: 220: PORTBbits.RB5 = led_state[0][4];
   953  0002B8  B031               	btfsc	_led_state+4,0,c
   954  0002BA  D002               	bra	u95
   955  0002BC  9A81               	bcf	3969,5,c	;volatile
   956  0002BE  D001               	bra	u96
   957  0002C0                     u95:
   958  0002C0  8A81               	bsf	3969,5,c	;volatile
   959  0002C2                     u96:
   960                           
   961                           ;main.c: 221: PORTBbits.RB3 = led_state[0][5];
   962  0002C2  B032               	btfsc	_led_state+5,0,c
   963  0002C4  D002               	bra	u105
   964  0002C6  9681               	bcf	3969,3,c	;volatile
   965  0002C8  D001               	bra	u106
   966  0002CA                     u105:
   967  0002CA  8681               	bsf	3969,3,c	;volatile
   968  0002CC                     u106:
   969                           
   970                           ;main.c: 222: PORTBbits.RB0 = led_state[0][6];
   971  0002CC  B033               	btfsc	_led_state+6,0,c
   972  0002CE  D002               	bra	u115
   973  0002D0  9081               	bcf	3969,0,c	;volatile
   974  0002D2  D001               	bra	u116
   975  0002D4                     u115:
   976  0002D4  8081               	bsf	3969,0,c	;volatile
   977  0002D6                     u116:
   978                           
   979                           ;main.c: 223: PORTCbits.RC5 = led_state[0][7];
   980  0002D6  B034               	btfsc	_led_state+7,0,c
   981  0002D8  D002               	bra	u125
   982  0002DA  9A82               	bcf	3970,5,c	;volatile
   983  0002DC  D001               	bra	u126
   984  0002DE                     u125:
   985  0002DE  8A82               	bsf	3970,5,c	;volatile
   986  0002E0                     u126:
   987                           
   988                           ;main.c: 225: break;
   989  0002E0  0012               	return	
   990  0002E2                     l76:
   991                           
   992                           ;main.c: 228: PORTAbits.RA1 = led_state[1][0];
   993  0002E2  B035               	btfsc	_led_state+8,0,c
   994  0002E4  D002               	bra	u135
   995  0002E6  9280               	bcf	3968,1,c	;volatile
   996  0002E8  D001               	bra	u136
   997  0002EA                     u135:
   998  0002EA  8280               	bsf	3968,1,c	;volatile
   999  0002EC                     u136:
  1000                           
  1001                           ;main.c: 229: PORTAbits.RA2 = led_state[1][1];
  1002  0002EC  B036               	btfsc	_led_state+9,0,c
  1003  0002EE  D002               	bra	u145
  1004  0002F0  9480               	bcf	3968,2,c	;volatile
  1005  0002F2  D001               	bra	u146
  1006  0002F4                     u145:
  1007  0002F4  8480               	bsf	3968,2,c	;volatile
  1008  0002F6                     u146:
  1009                           
  1010                           ;main.c: 230: PORTCbits.RC0 = led_state[1][2];
  1011  0002F6  B037               	btfsc	_led_state+10,0,c
  1012  0002F8  D002               	bra	u155
  1013  0002FA  9082               	bcf	3970,0,c	;volatile
  1014  0002FC  D001               	bra	u156
  1015  0002FE                     u155:
  1016  0002FE  8082               	bsf	3970,0,c	;volatile
  1017  000300                     u156:
  1018                           
  1019                           ;main.c: 231: PORTCbits.RC2 = led_state[1][3];
  1020  000300  B038               	btfsc	_led_state+11,0,c
  1021  000302  D002               	bra	u165
  1022  000304  9482               	bcf	3970,2,c	;volatile
  1023  000306  D001               	bra	u166
  1024  000308                     u165:
  1025  000308  8482               	bsf	3970,2,c	;volatile
  1026  00030A                     u166:
  1027                           
  1028                           ;main.c: 232: break;
  1029  00030A  0012               	return	
  1030  00030C                     l77:
  1031                           
  1032                           ;main.c: 236: PORTBbits.RB4 = led_state[1][4];
  1033  00030C  B039               	btfsc	_led_state+12,0,c
  1034  00030E  D002               	bra	u175
  1035  000310  9881               	bcf	3969,4,c	;volatile
  1036  000312  D001               	bra	u176
  1037  000314                     u175:
  1038  000314  8881               	bsf	3969,4,c	;volatile
  1039  000316                     u176:
  1040                           
  1041                           ;main.c: 237: PORTBbits.RB2 = led_state[1][5];
  1042  000316  B03A               	btfsc	_led_state+13,0,c
  1043  000318  D002               	bra	u185
  1044  00031A  9481               	bcf	3969,2,c	;volatile
  1045  00031C  D001               	bra	u186
  1046  00031E                     u185:
  1047  00031E  8481               	bsf	3969,2,c	;volatile
  1048  000320                     u186:
  1049                           
  1050                           ;main.c: 238: PORTCbits.RC6 = led_state[1][6];
  1051  000320  B03B               	btfsc	_led_state+14,0,c
  1052  000322  D002               	bra	u195
  1053  000324  9C82               	bcf	3970,6,c	;volatile
  1054  000326  D001               	bra	u196
  1055  000328                     u195:
  1056  000328  8C82               	bsf	3970,6,c	;volatile
  1057  00032A                     u196:
  1058                           
  1059                           ;main.c: 239: PORTCbits.RC4 = led_state[1][7];
  1060  00032A  B03C               	btfsc	_led_state+15,0,c
  1061  00032C  D002               	bra	u205
  1062  00032E  9882               	bcf	3970,4,c	;volatile
  1063  000330  D001               	bra	u206
  1064  000332                     u205:
  1065  000332  8882               	bsf	3970,4,c	;volatile
  1066  000334                     u206:
  1067                           
  1068                           ;main.c: 240: break;
  1069  000334  0012               	return	
  1070  000336                     l757:
  1071  000336  5040               	movf	_mux,w,c
  1072                           
  1073                           ; Switch size 1, requested type "space"
  1074                           ; Number of cases is 4, Range of values is 0 to 3
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte           13     7 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079  000338  0A00               	xorlw	0	; case 0
  1080  00033A  B4D8               	btfsc	status,2,c
  1081  00033C  D7A8               	goto	l73
  1082  00033E  0A01               	xorlw	1	; case 1
  1083  000340  B4D8               	btfsc	status,2,c
  1084  000342  D7BA               	goto	l75
  1085  000344  0A03               	xorlw	3	; case 2
  1086  000346  B4D8               	btfsc	status,2,c
  1087  000348  D7CC               	goto	l76
  1088  00034A  0A01               	xorlw	1	; case 3
  1089  00034C  A4D8               	btfss	status,2,c
  1090  00034E  0012               	return	
  1091  000350  D7DD               	goto	l77
  1092  000352                     __end_of_affichage:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           prodh	equ	0xFF4
  1099                           prodl	equ	0xFF3
  1100                           intcon	equ	0xFF2
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           postdec1	equ	0xFE5
  1104                           fsr1l	equ	0xFE1
  1105                           indf2	equ	0xFDF
  1106                           fsr2h	equ	0xFDA
  1107                           fsr2l	equ	0xFD9
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _high_isr *****************
  1111 ;; Defined at:
  1112 ;;		line 115 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;		None               void
  1119 ;; Registers used:
  1120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;Total ram usage:       17 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		Interrupt level 1
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139 ;; *************** function _timer_isr *****************
  1140 ;; Defined at:
  1141 ;;		line 127 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;		None               void
  1148 ;; Registers used:
  1149 ;;		None
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1159 ;;Total ram usage:       17 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		Interrupt level 1
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	intcodelo
  1169  000018                     __pintcodelo:
  1170                           	opt stack 0
  1171  000018                     _high_isr:
  1172                           	opt stack 29
  1173                           
  1174                           ;incstack = 0
  1175  000018  CFD8 F001          	movff	status,??_high_isr
  1176  00001C  CFE8 F002          	movff	wreg,??_high_isr+1
  1177  000020  CFE0 F003          	movff	bsr,??_high_isr+2
  1178  000024  CFFA F004          	movff	pclath,??_high_isr+3
  1179  000028  CFFB F005          	movff	pclatu,??_high_isr+4
  1180  00002C  CFE9 F006          	movff	fsr0l,??_high_isr+5
  1181  000030  CFEA F007          	movff	fsr0h,??_high_isr+6
  1182  000034  CFE1 F008          	movff	fsr1l,??_high_isr+7
  1183  000038  CFE2 F009          	movff	fsr1h,??_high_isr+8
  1184  00003C  CFD9 F00A          	movff	fsr2l,??_high_isr+9
  1185  000040  CFDA F00B          	movff	fsr2h,??_high_isr+10
  1186  000044  CFF3 F00C          	movff	prodl,??_high_isr+11
  1187  000048  CFF4 F00D          	movff	prodh,??_high_isr+12
  1188  00004C  CFF6 F00E          	movff	tblptrl,??_high_isr+13
  1189  000050  CFF7 F00F          	movff	tblptrh,??_high_isr+14
  1190  000054  CFF8 F010          	movff	tblptru,??_high_isr+15
  1191  000058  CFF5 F011          	movff	tablat,??_high_isr+16
  1192                           
  1193                           ;main.c: 116: if (RC2IF) {
  1194  00005C  AAA4               	btfss	4004,5,c	;volatile
  1195  00005E  D017               	goto	i1l771
  1196                           
  1197                           ;main.c: 117: tampon = RCREG2;
  1198  000060  CF7A F042          	movff	3962,_tampon	;volatile
  1199                           
  1200                           ;main.c: 118: if (compteur == 128) {
  1201  000064  503D               	movf	_compteur,w,c
  1202  000066  0A80               	xorlw	128
  1203  000068  103E               	iorwf	_compteur+1,w,c
  1204  00006A  A4D8               	btfss	status,2,c
  1205  00006C  D004               	goto	i1l767
  1206                           
  1207                           ;main.c: 119: compteur = 0;
  1208  00006E  0E00               	movlw	0
  1209  000070  6E3E               	movwf	_compteur+1,c
  1210  000072  0E00               	movlw	0
  1211  000074  6E3D               	movwf	_compteur,c
  1212  000076                     i1l767:
  1213                           
  1214                           ;main.c: 120: }
  1215                           ;main.c: 121: stock_led[compteur] = tampon;
  1216  000076  0100               	movlb	0	; () banked
  1217  000078  0E60               	movlw	low _stock_led
  1218  00007A  243D               	addwf	_compteur,w,c
  1219  00007C  6ED9               	movwf	fsr2l,c
  1220  00007E  0100               	movlb	0	; () banked
  1221  000080  0E00               	movlw	high _stock_led
  1222  000082  203E               	addwfc	_compteur+1,w,c
  1223  000084  6EDA               	movwf	fsr2h,c
  1224  000086  C042  FFDF         	movff	_tampon,indf2
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;main.c: 122: compteur++;
  1228  00008A  4A3D               	infsnz	_compteur,f,c
  1229  00008C  2A3E               	incf	_compteur+1,f,c
  1230  00008E                     i1l771:
  1231                           
  1232                           ;main.c: 123: }
  1233                           ;main.c: 124: RC2IF = 0;
  1234  00008E  9AA4               	bcf	4004,5,c	;volatile
  1235  000090  C011  FFF5         	movff	??_high_isr+16,tablat
  1236  000094  C010  FFF8         	movff	??_high_isr+15,tblptru
  1237  000098  C00F  FFF7         	movff	??_high_isr+14,tblptrh
  1238  00009C  C00E  FFF6         	movff	??_high_isr+13,tblptrl
  1239  0000A0  C00D  FFF4         	movff	??_high_isr+12,prodh
  1240  0000A4  C00C  FFF3         	movff	??_high_isr+11,prodl
  1241  0000A8  C00B  FFDA         	movff	??_high_isr+10,fsr2h
  1242  0000AC  C00A  FFD9         	movff	??_high_isr+9,fsr2l
  1243  0000B0  C009  FFE2         	movff	??_high_isr+8,fsr1h
  1244  0000B4  C008  FFE1         	movff	??_high_isr+7,fsr1l
  1245  0000B8  C007  FFEA         	movff	??_high_isr+6,fsr0h
  1246  0000BC  C006  FFE9         	movff	??_high_isr+5,fsr0l
  1247  0000C0  C005  FFFB         	movff	??_high_isr+4,pclatu
  1248  0000C4  C004  FFFA         	movff	??_high_isr+3,pclath
  1249  0000C8  C003  FFE0         	movff	??_high_isr+2,bsr
  1250  0000CC  C002  FFE8         	movff	??_high_isr+1,wreg
  1251  0000D0  C001  FFD8         	movff	??_high_isr,status
  1252  0000D4  0010               	retfie	
  1253  0000D6                     __end_of_high_isr:
  1254                           	opt stack 0
  1255  0000D6                     _timer_isr:
  1256                           	opt stack 29
  1257                           
  1258                           ;incstack = 0
  1259  0000D6  CFD8 F012          	movff	status,??_timer_isr
  1260  0000DA  CFE8 F013          	movff	wreg,??_timer_isr+1
  1261  0000DE  CFE0 F014          	movff	bsr,??_timer_isr+2
  1262  0000E2  CFFA F015          	movff	pclath,??_timer_isr+3
  1263  0000E6  CFFB F016          	movff	pclatu,??_timer_isr+4
  1264  0000EA  CFE9 F017          	movff	fsr0l,??_timer_isr+5
  1265  0000EE  CFEA F018          	movff	fsr0h,??_timer_isr+6
  1266  0000F2  CFE1 F019          	movff	fsr1l,??_timer_isr+7
  1267  0000F6  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
  1268  0000FA  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
  1269  0000FE  CFDA F01C          	movff	fsr2h,??_timer_isr+10
  1270  000102  CFF3 F01D          	movff	prodl,??_timer_isr+11
  1271  000106  CFF4 F01E          	movff	prodh,??_timer_isr+12
  1272  00010A  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
  1273  00010E  CFF7 F020          	movff	tblptrh,??_timer_isr+14
  1274  000112  CFF8 F021          	movff	tblptru,??_timer_isr+15
  1275  000116  CFF5 F022          	movff	tablat,??_timer_isr+16
  1276                           
  1277                           ;main.c: 129: if (TMR0IE && TMR0IF) {
  1278  00011A  BAF2               	btfsc	intcon,5,c	;volatile
  1279  00011C  D000               	goto	i1l46
  1280  00011E                     i1l46:
  1281                           
  1282                           ;main.c: 130: }
  1283                           ;main.c: 131: TMR0IF = 0;
  1284  00011E  94F2               	bcf	intcon,2,c	;volatile
  1285  000120  C022  FFF5         	movff	??_timer_isr+16,tablat
  1286  000124  C021  FFF8         	movff	??_timer_isr+15,tblptru
  1287  000128  C020  FFF7         	movff	??_timer_isr+14,tblptrh
  1288  00012C  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
  1289  000130  C01E  FFF4         	movff	??_timer_isr+12,prodh
  1290  000134  C01D  FFF3         	movff	??_timer_isr+11,prodl
  1291  000138  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
  1292  00013C  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
  1293  000140  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
  1294  000144  C019  FFE1         	movff	??_timer_isr+7,fsr1l
  1295  000148  C018  FFEA         	movff	??_timer_isr+6,fsr0h
  1296  00014C  C017  FFE9         	movff	??_timer_isr+5,fsr0l
  1297  000150  C016  FFFB         	movff	??_timer_isr+4,pclatu
  1298  000154  C015  FFFA         	movff	??_timer_isr+3,pclath
  1299  000158  C014  FFE0         	movff	??_timer_isr+2,bsr
  1300  00015C  C013  FFE8         	movff	??_timer_isr+1,wreg
  1301  000160  C012  FFD8         	movff	??_timer_isr,status
  1302  000164  0010               	retfie	
  1303  000166                     __end_of_timer_isr:
  1304                           	opt stack 0
  1305  0000                     pclatu	equ	0xFFB
  1306                           pclath	equ	0xFFA
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           prodh	equ	0xFF4
  1312                           prodl	equ	0xFF3
  1313                           intcon	equ	0xFF2
  1314                           postinc0	equ	0xFEE
  1315                           fsr0h	equ	0xFEA
  1316                           fsr0l	equ	0xFE9
  1317                           wreg	equ	0xFE8
  1318                           postdec1	equ	0xFE5
  1319                           fsr1h	equ	0xFE2
  1320                           fsr1l	equ	0xFE1
  1321                           bsr	equ	0xFE0
  1322                           indf2	equ	0xFDF
  1323                           fsr2h	equ	0xFDA
  1324                           fsr2l	equ	0xFD9
  1325                           status	equ	0xFD8
  1326                           pclatu	equ	0xFFB
  1327                           pclath	equ	0xFFA
  1328                           tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           prodh	equ	0xFF4
  1333                           prodl	equ	0xFF3
  1334                           intcon	equ	0xFF2
  1335                           postinc0	equ	0xFEE
  1336                           fsr0h	equ	0xFEA
  1337                           fsr0l	equ	0xFE9
  1338                           wreg	equ	0xFE8
  1339                           postdec1	equ	0xFE5
  1340                           fsr1h	equ	0xFE2
  1341                           fsr1l	equ	0xFE1
  1342                           bsr	equ	0xFE0
  1343                           indf2	equ	0xFDF
  1344                           fsr2h	equ	0xFDA
  1345                           fsr2l	equ	0xFD9
  1346                           status	equ	0xFD8
  1347                           
  1348                           	psect	rparam
  1349  0000                     pclatu	equ	0xFFB
  1350                           pclath	equ	0xFFA
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           prodh	equ	0xFF4
  1356                           prodl	equ	0xFF3
  1357                           intcon	equ	0xFF2
  1358                           postinc0	equ	0xFEE
  1359                           fsr0h	equ	0xFEA
  1360                           fsr0l	equ	0xFE9
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1h	equ	0xFE2
  1364                           fsr1l	equ	0xFE1
  1365                           bsr	equ	0xFE0
  1366                           indf2	equ	0xFDF
  1367                           fsr2h	equ	0xFDA
  1368                           fsr2l	equ	0xFD9
  1369                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      74
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_decodage

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     214
                                             40 COMRAM     4     4      0
                          _affichage
                           _decodage
                          _initComms
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decodage                                             6     4      2     184
                                             34 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _affichage                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _affichage
   _decodage
   _initComms
   _initPorts

 _high_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      4A       1       77.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6       6        0.0%
DATA                 0      0      D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 18 13:29:43 2014

            __CFG_CP0$ON 000000              __CFG_CP1$ON 000000              __CFG_CP2$ON 000000  
            __CFG_CP3$ON 000000                       l73 028E                       l75 02B8  
                     l76 02E2                       l77 030C              __CFG_CPB$ON 000000  
            __CFG_CPD$ON 000000                       u55 0296                       u56 0298  
                     u65 02A0                       u66 02A2                       u75 02AA  
                     u76 02AC                       u85 02B4                       u86 02B6  
                     u95 02C0                       u96 02C2              _state_clock 0041  
                     bsr 000FE0              __CFG_BORV$3 000000                      l801 03D8  
                    l743 01D6                      l747 024E                      l739 017A  
                    l757 0336                      l791 0382                      l783 036A  
                    _GIE 007F97                      u105 02CA                      u106 02CC  
                    u115 02D4                      u116 02D6                      u205 0332  
                    u125 02DE                      u206 0334                      u126 02E0  
                    u135 02EA                      u136 02EC                      u145 02F4  
                    u146 02F6                      u155 02FE                      u156 0300  
                    u165 0308                      u166 030A                      u175 0314  
                    u255 03AE                      u176 0316                      u185 031E  
                    u265 03D6                      u186 0320                      u195 0328  
                    u196 032A                      _mux 0040                      prod 000FF3  
                    wreg 000FE8             __CFG_IESO$ON 000000               _TXSTA2bits 000FBA  
                   _MASK 0043                     _PEIE 007F96                     i1l46 011E  
           __CFG_WRT0$ON 000000             __CFG_WRT1$ON 000000             __CFG_WRT2$ON 000000  
           __CFG_WRT3$ON 000000            __CFG_EBTR0$ON 000000            __CFG_EBTR1$ON 000000  
          __CFG_EBTR2$ON 000000            __CFG_EBTR3$ON 000000             __CFG_WRTB$ON 000000  
           __CFG_WRTC$ON 000000             __CFG_WRTD$ON 000000            __CFG_EBTRB$ON 000000  
                   _main 0352                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0166  
          __CFG_RETEN$ON 000000             _BAUDCON2bits 000FB9                    ?_main 0001  
                  _RC2IF 007D25                    i1l771 008E                    i1l767 0076  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94           __CFG_FCMEN$OFF 000000                    main@i 0029  
                  tablat 000FF5                    status 000FD8           _compteur_clock 003F  
         __CFG_MCLRE$OFF 000000          __initialization 03E2             __end_of_main 03E2  
                 ??_main 0029            __activetblptr 000002           __CFG_PLLCFG$ON 000000  
                 _ADCON1 000FC1                   _ANCON0 000F5D          __CFG_BBSIZ$BB2K 000000  
         __CFG_WDTEN$OFF 000000                   _INTCON 000FF2                   _RCREG2 000F7A  
                 _OSCCON 000FD3                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _SPBRG2 000F7B                   _TXREG2 000F79         __end_of_decodage 026C  
         __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000         __end_of_high_isr 00D6  
         __CFG_STVREN$ON 000000                   clear_0 03E8                   clear_1 03F4  
                 _tampon 0042             __pdataCOMRAM 0043                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 041A       __size_of_affichage 00E6           __pcstackCOMRAM 0001  
             __pbssBANK0 0060       __size_of_initComms 0040       __size_of_initPorts 0032  
       __CFG_CANMX$PORTB 000000       __size_of_timer_isr 0090                ?_decodage 0023  
      __end_of_affichage 0352                  _SPBRGH2 000F7C                ?_high_isr 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 03E2  
                __ramtop 0F00                  __ptext0 0352                  __ptext1 0464  
                __ptext2 0424                  __ptext3 016A                  __ptext4 026C  
      __end_of_initComms 0464        __end_of_initPorts 0496               ??_decodage 0025  
      __CFG_MSSPMSK$MSK7 000000               ??_high_isr 0001     end_of_initialization 041A  
          __Lmediumconst 0000        __end_of_timer_isr 0166                  postdec1 000FE5  
                postinc0 000FEE                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82         __CFG_FOSC$INTIO2 000000            __pidataCOMRAM 0496  
    start_initialization 03E2              __pbssCOMRAM 002D        __size_of_decodage 0102  
              _affichage 026C        __size_of_high_isr 00BE              __pintcodelo 0018  
              _led_state 002D                _initComms 0424                _initPorts 0464  
              decodage@a 0028                decodage@n 0023               ?_affichage 0001  
               _PIE3bits 000FA3                 _PIR3bits 000FA4                 _RCONbits 000FD0  
              _timer_isr 00D6         __CFG_SOSCSEL$DIG 000000                _stock_led 0060  
             ?_initComms 0001               ?_initPorts 0001                copy_data0 040E  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
             ?_timer_isr 0001                 _decodage 016A                 _high_isr 0018  
               _compteur 003D              ??_affichage 0023            __size_of_main 0090  
    __CFG_INTOSCSEL$HIGH 000000              _OSCTUNEbits 000F9B              ??_initComms 0023  
            ??_initPorts 0023                 intlevel1 0000               _RCSTA2bits 000FA6  
     __CFG_WDTPS$1048576 000000              ??_timer_isr 0012      __CFG_BORPWR$ZPBORMV 000000  
