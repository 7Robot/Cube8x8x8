

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 18 20:25:48 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  000614                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _MASK
    25  000614  80                 	db	128
    26  000615  40                 	db	64
    27  000616  20                 	db	32
    28  000617  10                 	db	16
    29  000618  08                 	db	8
    30  000619  04                 	db	4
    31  00061A  02                 	db	2
    32  00061B  01                 	db	1
    33  0000                     _ADCON1	set	4033
    34  0000                     _ANCON0	set	3933
    35  0000                     _BAUDCON2bits	set	4025
    36  0000                     _INTCON	set	4082
    37  0000                     _OSCCON	set	4051
    38  0000                     _OSCTUNEbits	set	3995
    39  0000                     _PIE3bits	set	4003
    40  0000                     _PIR3bits	set	4004
    41  0000                     _PORTA	set	3968
    42  0000                     _PORTAbits	set	3968
    43  0000                     _PORTB	set	3969
    44  0000                     _PORTBbits	set	3969
    45  0000                     _PORTC	set	3970
    46  0000                     _PORTCbits	set	3970
    47  0000                     _RCONbits	set	4048
    48  0000                     _RCREG2	set	3962
    49  0000                     _RCSTA2bits	set	4006
    50  0000                     _SPBRG	set	4015
    51  0000                     _SPBRG2	set	3963
    52  0000                     _SPBRGH2	set	3964
    53  0000                     _TRISA	set	3986
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISC	set	3988
    56  0000                     _TXREG2	set	3961
    57  0000                     _TXSTA2bits	set	4026
    58  0000                     _GIE	set	32663
    59  0000                     _PEIE	set	32662
    60  0000                     _RC2IF	set	32037
    61  0000                     _TMR0IE	set	32661
    62  0000                     _TMR0IF	set	32658
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  0005A4                     __pcinit:
    68                           	opt stack 0
    69  0005A4                     start_initialization:
    70                           	opt stack 0
    71  0005A4                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to BANK0 (140 bytes)
    75  0005A4  EE00  F060         	lfsr	0,__pbssBANK0
    76  0005A8  0E8C               	movlw	140
    77  0005AA                     clear_0:
    78  0005AA  6AEE               	clrf	postinc0,c
    79  0005AC  06E8               	decf	wreg,f,c
    80  0005AE  E1FD               	bnz	clear_0
    81                           
    82                           ; Clear objects allocated to COMRAM (21 bytes)
    83  0005B0  EE00  F02C         	lfsr	0,__pbssCOMRAM
    84  0005B4  0E15               	movlw	21
    85  0005B6                     clear_1:
    86  0005B6  6AEE               	clrf	postinc0,c
    87  0005B8  06E8               	decf	wreg,f,c
    88  0005BA  E1FD               	bnz	clear_1
    89                           
    90                           ; Initialize objects allocated to COMRAM (8 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  0005BC  0E14               	movlw	low __pidataCOMRAM
    93  0005BE  6EF6               	movwf	tblptrl,c
    94  0005C0  0E06               	movlw	high __pidataCOMRAM
    95  0005C2  6EF7               	movwf	tblptrh,c
    96  0005C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  0005C6  6EF8               	movwf	tblptru,c
    98  0005C8  EE00  F041         	lfsr	0,__pdataCOMRAM
    99  0005CC  EE10 F008          	lfsr	1,8
   100  0005D0                     copy_data0:
   101  0005D0  0009               	tblrd		*+
   102  0005D2  CFF5 FFEE          	movff	tablat,postinc0
   103  0005D6  50E5               	movf	postdec1,w,c
   104  0005D8  50E1               	movf	fsr1l,w,c
   105  0005DA  E1FA               	bnz	copy_data0
   106  0005DC                     end_of_initialization:
   107                           	opt stack 0
   108  0005DC                     __end_of__initialization:
   109                           	opt stack 0
   110  0005DC  0100               	movlb	0
   111  0005DE  EF8B  F002         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           tblptrl	equ	0xFF6
   115                           tablat	equ	0xFF5
   116                           postinc0	equ	0xFEE
   117                           wreg	equ	0xFE8
   118                           postdec1	equ	0xFE5
   119                           fsr1l	equ	0xFE1
   120                           
   121                           	psect	bssCOMRAM
   122  00002C                     __pbssCOMRAM:
   123                           	opt stack 0
   124  00002C                     _led_state:
   125                           	opt stack 0
   126  00002C                     	ds	16
   127  00003C                     _compteur:
   128                           	opt stack 0
   129  00003C                     	ds	2
   130  00003E                     _compteur_clock:
   131                           	opt stack 0
   132  00003E                     	ds	1
   133  00003F                     _state_clock:
   134                           	opt stack 0
   135  00003F                     	ds	1
   136  000040                     _tampon:
   137                           	opt stack 0
   138  000040                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           tblptrh	equ	0xFF7
   141                           tblptrl	equ	0xFF6
   142                           tablat	equ	0xFF5
   143                           postinc0	equ	0xFEE
   144                           wreg	equ	0xFE8
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	dataCOMRAM
   149  000041                     __pdataCOMRAM:
   150                           	opt stack 0
   151  000041                     _MASK:
   152                           	opt stack 0
   153  000041                     	ds	8
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           wreg	equ	0xFE8
   160                           postdec1	equ	0xFE5
   161                           fsr1l	equ	0xFE1
   162                           
   163                           	psect	bssBANK0
   164  000060                     __pbssBANK0:
   165                           	opt stack 0
   166  000060                     _stock_led:
   167                           	opt stack 0
   168  000060                     	ds	140
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	cstackCOMRAM
   179  000001                     __pcstackCOMRAM:
   180                           	opt stack 0
   181  000001                     ??_high_isr:
   182  000001                     
   183                           ; 0 bytes @ 0x0
   184  000001                     	ds	17
   185  000012                     ??_timer_isr:
   186                           
   187                           ; 0 bytes @ 0x11
   188  000012                     	ds	17
   189  000023                     affichage@mux:
   190                           	opt stack 0
   191  000023                     decodage@n:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x22
   195  000023                     	ds	1
   196  000024                     affichage@d:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x23
   200  000024                     	ds	1
   201  000025                     ??_decodage:
   202                           
   203                           ; 0 bytes @ 0x24
   204  000025                     	ds	3
   205  000028                     decodage@a:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x27
   209  000028                     	ds	1
   210  000029                     main@i:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x28
   214  000029                     	ds	2
   215  00002B                     main@mux:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x2A
   219  00002B                     	ds	1
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 133 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  i               2   40[COMRAM] int 
   239 ;;  mux             1   42[COMRAM] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;		None               void
   242 ;; Registers used:
   243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   252 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   253 ;;Total ram usage:        3 bytes
   254 ;; Hardware stack levels required when called:    2
   255 ;; This function calls:
   256 ;;		_affichage
   257 ;;		_decodage
   258 ;;		_initComms
   259 ;;		_initPorts
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text0
   266  000516                     __ptext0:
   267                           	opt stack 0
   268  000516                     _main:
   269                           	opt stack 29
   270                           
   271                           ;main.c: 136: initPorts();
   272                           
   273                           ;incstack = 0
   274  000516  ECF1  F002         	call	_initPorts	;wreg free
   275                           
   276                           ;main.c: 137: initComms();
   277  00051A  ECB2  F002         	call	_initComms	;wreg free
   278                           
   279                           ;main.c: 138: int i = 0;
   280  00051E  0E00               	movlw	0
   281  000520  6E2A               	movwf	main@i+1,c
   282  000522  0E00               	movlw	0
   283  000524  6E29               	movwf	main@i,c
   284  000526                     
   285                           ;main.c: 139: char mux = 0;
   286  000526  0E00               	movlw	0
   287  000528  6E2B               	movwf	main@mux,c
   288                           
   289                           ;main.c: 142: decodage(0);
   290                           
   291                           ;main.c: 140: while (1) {
   292  00052A  0E00               	movlw	0
   293  00052C  6E24               	movwf	decodage@n+1,c
   294  00052E  0E00               	movlw	0
   295  000530  6E23               	movwf	decodage@n,c
   296  000532  EC0A  F002         	call	_decodage	;wreg free
   297                           
   298                           ;main.c: 143: affichage(mux);
   299  000536  502B               	movf	main@mux,w,c
   300  000538  ECB5  F000         	call	_affichage
   301                           
   302                           ;main.c: 144: for (i = 0; i < 100; i++) {
   303  00053C  0E00               	movlw	0
   304  00053E  6E2A               	movwf	main@i+1,c
   305  000540  0E00               	movlw	0
   306  000542  6E29               	movwf	main@i,c
   307  000544  502A               	movf	main@i+1,w,c
   308  000546  0A80               	xorlw	128
   309  000548  0F80               	addlw	-128
   310  00054A  0E64               	movlw	100
   311  00054C  B4D8               	btfsc	status,2,c
   312  00054E  5C29               	subwf	main@i,w,c
   313  000550  B0D8               	btfsc	status,0,c
   314  000552  D003               	goto	l979
   315  000554  4A29               	infsnz	main@i,f,c
   316  000556  2A2A               	incf	main@i+1,f,c
   317  000558  D7F5               	goto	L1
   318  00055A                     l979:
   319                           
   320                           ;main.c: 145: }
   321                           ;main.c: 146: mux=!mux;
   322  00055A  502B               	movf	main@mux,w,c
   323  00055C  A4D8               	btfss	status,2,c
   324  00055E  D7E3               	goto	L3
   325  000560  0E01               	movlw	1
   326  000562  D7E2               	goto	L2
   327  000564                     __end_of_main:
   328                           	opt stack 0
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           status	equ	0xFD8
   338                           
   339 ;; *************** function _initPorts *****************
   340 ;; Defined at:
   341 ;;		line 6 in file "port.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;		None               void
   348 ;; Registers used:
   349 ;;		wreg, status,2
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels used:    1
   361 ;; Hardware stack levels required when called:    1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text1
   370  0005E2                     __ptext1:
   371                           	opt stack 0
   372  0005E2                     _initPorts:
   373                           	opt stack 29
   374                           
   375                           ;port.c: 10: OSCCON= 0x70;
   376                           
   377                           ;incstack = 0
   378  0005E2  0E70               	movlw	112
   379  0005E4  6ED3               	movwf	4051,c	;volatile
   380                           
   381                           ;port.c: 12: ANCON0 = 0b00000000;
   382  0005E6  0E00               	movlw	0
   383  0005E8  010F               	movlb	15	; () banked
   384  0005EA  6F5D               	movwf	93,b	;volatile
   385                           
   386                           ;port.c: 13: ADCON1 = 0b00000000;
   387  0005EC  0E00               	movlw	0
   388  0005EE  6EC1               	movwf	4033,c	;volatile
   389                           
   390                           ;port.c: 18: PORTA = 0b00000000;
   391  0005F0  0E00               	movlw	0
   392  0005F2  6E80               	movwf	3968,c	;volatile
   393                           
   394                           ;port.c: 19: TRISA = 0b00000000;
   395  0005F4  0E00               	movlw	0
   396  0005F6  6E92               	movwf	3986,c	;volatile
   397                           
   398                           ;port.c: 21: PORTB = 0b01000000;
   399  0005F8  0E40               	movlw	64
   400  0005FA  6E81               	movwf	3969,c	;volatile
   401                           
   402                           ;port.c: 22: TRISB = 0b10000000;
   403  0005FC  0E80               	movlw	128
   404  0005FE  6E93               	movwf	3987,c	;volatile
   405                           
   406                           ;port.c: 24: PORTC = 0b00000000;
   407  000600  0E00               	movlw	0
   408  000602  6E82               	movwf	3970,c	;volatile
   409                           
   410                           ;port.c: 25: TRISC = 0b00000000;
   411  000604  0E00               	movlw	0
   412  000606  6E94               	movwf	3988,c	;volatile
   413                           
   414                           ; BSR set to: 15
   415                           ;port.c: 27: GIE = 1;
   416  000608  8EF2               	bsf	intcon,7,c	;volatile
   417                           
   418                           ; BSR set to: 15
   419                           ;port.c: 28: PEIE = 1;
   420  00060A  8CF2               	bsf	intcon,6,c	;volatile
   421                           
   422                           ;port.c: 29: INTCON =0b11100000;
   423  00060C  0EE0               	movlw	224
   424  00060E  6EF2               	movwf	intcon,c	;volatile
   425                           
   426                           ; BSR set to: 15
   427                           ;port.c: 30: OSCTUNEbits.PLLEN = 1;
   428  000610  8C9B               	bsf	3995,6,c	;volatile
   429                           
   430                           ; BSR set to: 15
   431  000612  0012               	return	
   432  000614                     __end_of_initPorts:
   433                           	opt stack 0
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           intcon	equ	0xFF2
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           status	equ	0xFD8
   444                           
   445 ;; *************** function _initComms *****************
   446 ;; Defined at:
   447 ;;		line 6 in file "usart.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;		None               void
   454 ;; Registers used:
   455 ;;		wreg, status,2
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    1
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476  000564                     __ptext2:
   477                           	opt stack 0
   478  000564                     _initComms:
   479                           	opt stack 29
   480                           
   481                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   482                           
   483                           ; BSR set to: 15
   484                           ;incstack = 0
   485  000564  9EBA               	bcf	4026,7,c	;volatile
   486                           
   487                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   488  000566  9CBA               	bcf	4026,6,c	;volatile
   489                           
   490                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   491  000568  8ABA               	bsf	4026,5,c	;volatile
   492                           
   493                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   494  00056A  98BA               	bcf	4026,4,c	;volatile
   495                           
   496                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   497  00056C  96BA               	bcf	4026,3,c	;volatile
   498                           
   499                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   500  00056E  84BA               	bsf	4026,2,c	;volatile
   501                           
   502                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   503  000570  82BA               	bsf	4026,1,c	;volatile
   504                           
   505                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   506  000572  90BA               	bcf	4026,0,c	;volatile
   507                           
   508                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   509  000574  8EA6               	bsf	4006,7,c	;volatile
   510                           
   511                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   512  000576  9CA6               	bcf	4006,6,c	;volatile
   513                           
   514                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   515  000578  9AA6               	bcf	4006,5,c	;volatile
   516                           
   517                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   518  00057A  88A6               	bsf	4006,4,c	;volatile
   519                           
   520                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   521  00057C  96A6               	bcf	4006,3,c	;volatile
   522                           
   523                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   524  00057E  94A6               	bcf	4006,2,c	;volatile
   525                           
   526                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   527  000580  92A6               	bcf	4006,1,c	;volatile
   528                           
   529                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
   530  000582  90A6               	bcf	4006,0,c	;volatile
   531                           
   532                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
   533  000584  9EB9               	bcf	4025,7,c	;volatile
   534                           
   535                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
   536  000586  8CB9               	bsf	4025,6,c	;volatile
   537                           
   538                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
   539  000588  9AB9               	bcf	4025,5,c	;volatile
   540                           
   541                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
   542  00058A  98B9               	bcf	4025,4,c	;volatile
   543                           
   544                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
   545  00058C  86B9               	bsf	4025,3,c	;volatile
   546                           
   547                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
   548  00058E  92B9               	bcf	4025,1,c	;volatile
   549                           
   550                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
   551  000590  90B9               	bcf	4025,0,c	;volatile
   552                           
   553                           ;usart.c: 34: PIE3bits.RC2IE = 1;
   554  000592  8AA3               	bsf	4003,5,c	;volatile
   555                           
   556                           ;usart.c: 35: RCONbits.IPEN = 1;
   557  000594  8ED0               	bsf	4048,7,c	;volatile
   558                           
   559                           ;usart.c: 45: SPBRG = 115;
   560  000596  0E73               	movlw	115
   561  000598  6EAF               	movwf	4015,c	;volatile
   562                           
   563                           ;usart.c: 46: SPBRGH2 = 0;
   564  00059A  0E00               	movlw	0
   565  00059C  6E7C               	movwf	3964,c	;volatile
   566                           
   567                           ;usart.c: 47: SPBRG2 = 137;
   568  00059E  0E89               	movlw	137
   569  0005A0  6E7B               	movwf	3963,c	;volatile
   570  0005A2  0012               	return	
   571  0005A4                     __end_of_initComms:
   572                           	opt stack 0
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           intcon	equ	0xFF2
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           status	equ	0xFD8
   583                           
   584 ;; *************** function _decodage *****************
   585 ;; Defined at:
   586 ;;		line 151 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  n               2   34[COMRAM] int 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  a               1   39[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;		None               void
   593 ;; Registers used:
   594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   604 ;;Total ram usage:        6 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text3
   615  000414                     __ptext3:
   616                           	opt stack 0
   617  000414                     _decodage:
   618                           	opt stack 29
   619                           
   620                           ;main.c: 152: char a = 0;
   621                           
   622                           ;incstack = 0
   623  000414  0E00               	movlw	0
   624  000416  6E28               	movwf	decodage@a,c
   625                           
   626                           ;main.c: 153: for (a = 0; a < 8; a++) {
   627  000418  0E00               	movlw	0
   628  00041A  6E28               	movwf	decodage@a,c
   629  00041C  0E07               	movlw	7
   630  00041E  6428               	cpfsgt	decodage@a,c
   631  000420  D001               	goto	l763
   632  000422  0012               	return	
   633  000424                     l763:
   634                           
   635                           ;main.c: 154: if (MASK[a] & stock_led[2 * 0 + 16 * n])
   636  000424  C023  F025         	movff	decodage@n,??_decodage
   637  000428  C024  F026         	movff	decodage@n+1,??_decodage+1
   638  00042C  3A25               	swapf	??_decodage,f,c
   639  00042E  3A26               	swapf	??_decodage+1,f,c
   640  000430  0EF0               	movlw	240
   641  000432  1626               	andwf	??_decodage+1,f,c
   642  000434  5025               	movf	??_decodage,w,c
   643  000436  0B0F               	andlw	15
   644  000438  1226               	iorwf	??_decodage+1,f,c
   645  00043A  0EF0               	movlw	240
   646  00043C  1625               	andwf	??_decodage,f,c
   647  00043E  0100               	movlb	0	; () banked
   648  000440  0E60               	movlw	low _stock_led
   649  000442  2425               	addwf	??_decodage,w,c
   650  000444  6ED9               	movwf	fsr2l,c
   651  000446  0100               	movlb	0	; () banked
   652  000448  0E00               	movlw	high _stock_led
   653  00044A  2026               	addwfc	??_decodage+1,w,c
   654  00044C  6EDA               	movwf	fsr2h,c
   655  00044E  50DF               	movf	indf2,w,c
   656  000450  6E27               	movwf	(??_decodage+2)& (0+255),c
   657  000452  5028               	movf	decodage@a,w,c
   658  000454  0D01               	mullw	1
   659  000456  0E41               	movlw	low _MASK
   660  000458  24F3               	addwf	prodl,w,c
   661  00045A  6ED9               	movwf	fsr2l,c
   662  00045C  0E00               	movlw	high _MASK
   663  00045E  20F4               	addwfc	prodh,w,c
   664  000460  6EDA               	movwf	fsr2h,c
   665  000462  50DF               	movf	indf2,w,c
   666  000464  1427               	andwf	??_decodage+2,w,c
   667  000466  0900               	iorlw	0
   668  000468  B4D8               	btfsc	status,2,c
   669  00046A  D00A               	goto	l767
   670                           
   671                           ; BSR set to: 0
   672                           ;main.c: 155: {
   673                           ;main.c: 156: led_state[0][a] = 1;
   674  00046C  5028               	movf	decodage@a,w,c
   675  00046E  0D01               	mullw	1
   676  000470  0E2C               	movlw	low _led_state
   677  000472  24F3               	addwf	prodl,w,c
   678  000474  6ED9               	movwf	fsr2l,c
   679  000476  0E00               	movlw	high _led_state
   680  000478  20F4               	addwfc	prodh,w,c
   681  00047A  6EDA               	movwf	fsr2h,c
   682  00047C  0E01               	movlw	1
   683  00047E  D009               	goto	L4
   684  000480                     l767:
   685                           
   686                           ; BSR set to: 0
   687                           ;main.c: 158: led_state[0][a] = 0;
   688  000480  5028               	movf	decodage@a,w,c
   689  000482  0D01               	mullw	1
   690  000484  0E2C               	movlw	low _led_state
   691  000486  24F3               	addwf	prodl,w,c
   692  000488  6ED9               	movwf	fsr2l,c
   693  00048A  0E00               	movlw	high _led_state
   694  00048C  20F4               	addwfc	prodh,w,c
   695  00048E  6EDA               	movwf	fsr2h,c
   696  000490  0E00               	movlw	0
   697  000492                     L4:
   698  000492  6EDF               	movwf	indf2,c
   699                           
   700                           ; BSR set to: 0
   701                           ;main.c: 159: }
   702                           ;main.c: 161: if (MASK[a] & stock_led[2 * 0 + 1 + 16 * n]) {
   703  000494  C023  F025         	movff	decodage@n,??_decodage
   704  000498  C024  F026         	movff	decodage@n+1,??_decodage+1
   705  00049C  3A25               	swapf	??_decodage,f,c
   706  00049E  3A26               	swapf	??_decodage+1,f,c
   707  0004A0  0EF0               	movlw	240
   708  0004A2  1626               	andwf	??_decodage+1,f,c
   709  0004A4  5025               	movf	??_decodage,w,c
   710  0004A6  0B0F               	andlw	15
   711  0004A8  1226               	iorwf	??_decodage+1,f,c
   712  0004AA  0EF0               	movlw	240
   713  0004AC  1625               	andwf	??_decodage,f,c
   714  0004AE  0E01               	movlw	1
   715  0004B0  2625               	addwf	??_decodage,f,c
   716  0004B2  0E00               	movlw	0
   717  0004B4  2226               	addwfc	??_decodage+1,f,c
   718  0004B6  0100               	movlb	0	; () banked
   719  0004B8  0E60               	movlw	low _stock_led
   720  0004BA  2425               	addwf	??_decodage,w,c
   721  0004BC  6ED9               	movwf	fsr2l,c
   722  0004BE  0100               	movlb	0	; () banked
   723  0004C0  0E00               	movlw	high _stock_led
   724  0004C2  2026               	addwfc	??_decodage+1,w,c
   725  0004C4  6EDA               	movwf	fsr2h,c
   726  0004C6  50DF               	movf	indf2,w,c
   727  0004C8  6E27               	movwf	(??_decodage+2)& (0+255),c
   728  0004CA  5028               	movf	decodage@a,w,c
   729  0004CC  0D01               	mullw	1
   730  0004CE  0E41               	movlw	low _MASK
   731  0004D0  24F3               	addwf	prodl,w,c
   732  0004D2  6ED9               	movwf	fsr2l,c
   733  0004D4  0E00               	movlw	high _MASK
   734  0004D6  20F4               	addwfc	prodh,w,c
   735  0004D8  6EDA               	movwf	fsr2h,c
   736  0004DA  50DF               	movf	indf2,w,c
   737  0004DC  1427               	andwf	??_decodage+2,w,c
   738  0004DE  0900               	iorlw	0
   739  0004E0  B4D8               	btfsc	status,2,c
   740  0004E2  D00A               	goto	l771
   741                           
   742                           ; BSR set to: 0
   743                           ;main.c: 162: led_state[1][a] = 1;
   744  0004E4  5028               	movf	decodage@a,w,c
   745  0004E6  0D01               	mullw	1
   746  0004E8  0E34               	movlw	low (_led_state+8)
   747  0004EA  24F3               	addwf	prodl,w,c
   748  0004EC  6ED9               	movwf	fsr2l,c
   749  0004EE  0E00               	movlw	high (_led_state+8)
   750  0004F0  20F4               	addwfc	prodh,w,c
   751  0004F2  6EDA               	movwf	fsr2h,c
   752  0004F4  0E01               	movlw	1
   753  0004F6  D009               	goto	L5
   754  0004F8                     l771:
   755                           
   756                           ; BSR set to: 0
   757                           ;main.c: 164: led_state[1][a] = 0;
   758  0004F8  5028               	movf	decodage@a,w,c
   759  0004FA  0D01               	mullw	1
   760  0004FC  0E34               	movlw	low (_led_state+8)
   761  0004FE  24F3               	addwf	prodl,w,c
   762  000500  6ED9               	movwf	fsr2l,c
   763  000502  0E00               	movlw	high (_led_state+8)
   764  000504  20F4               	addwfc	prodh,w,c
   765  000506  6EDA               	movwf	fsr2h,c
   766  000508  0E00               	movlw	0
   767  00050A                     L5:
   768  00050A  6EDF               	movwf	indf2,c
   769                           
   770                           ; BSR set to: 0
   771                           
   772                           ; BSR set to: 0
   773  00050C  2A28               	incf	decodage@a,f,c
   774                           
   775                           ; BSR set to: 0
   776  00050E  0E07               	movlw	7
   777  000510  6428               	cpfsgt	decodage@a,c
   778  000512  D788               	goto	l763
   779  000514  0012               	return	
   780  000516                     __end_of_decodage:
   781                           	opt stack 0
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           prodh	equ	0xFF4
   787                           prodl	equ	0xFF3
   788                           intcon	equ	0xFF2
   789                           postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           postdec1	equ	0xFE5
   792                           fsr1l	equ	0xFE1
   793                           indf2	equ	0xFDF
   794                           fsr2h	equ	0xFDA
   795                           fsr2l	equ	0xFD9
   796                           status	equ	0xFD8
   797                           
   798 ;; *************** function _affichage *****************
   799 ;; Defined at:
   800 ;;		line 181 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  mux             1    wreg     unsigned char 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  mux             1   34[COMRAM] unsigned char 
   805 ;;  d               2   35[COMRAM] int 
   806 ;; Return value:  Size  Location     Type
   807 ;;		None               void
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   816 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   819 ;;Total ram usage:        3 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text4
   830  00016A                     __ptext4:
   831                           	opt stack 0
   832  00016A                     _affichage:
   833                           	opt stack 29
   834                           
   835                           ;incstack = 0
   836                           ;affichage@mux stored from wreg
   837  00016A  6E23               	movwf	affichage@mux,c
   838                           
   839                           ;main.c: 182: int d;
   840                           ;main.c: 184: if (mux == 0) {
   841  00016C  6623               	tstfsz	affichage@mux,c
   842  00016E  D0A9               	goto	l68
   843                           
   844                           ;main.c: 186: PORTCbits.RC7 = 0;
   845  000170  9E82               	bcf	3970,7,c	;volatile
   846                           
   847                           ;main.c: 187: for (d = 0; d < 2; d++) {
   848  000172  0E00               	movlw	0
   849  000174  6E25               	movwf	affichage@d+1,c
   850  000176  0E00               	movlw	0
   851  000178  6E24               	movwf	affichage@d,c
   852  00017A  5025               	movf	affichage@d+1,w,c
   853  00017C  0A80               	xorlw	128
   854  00017E  0F80               	addlw	-128
   855  000180  0E02               	movlw	2
   856  000182  B4D8               	btfsc	status,2,c
   857  000184  5C24               	subwf	affichage@d,w,c
   858  000186  B0D8               	btfsc	status,0,c
   859  000188  D003               	goto	l70
   860  00018A  4A24               	infsnz	affichage@d,f,c
   861  00018C  2A25               	incf	affichage@d+1,f,c
   862  00018E  D7F5               	goto	L6
   863  000190                     l70:
   864                           
   865                           ;main.c: 188: }
   866                           ;main.c: 189: PORTBbits.RB3 = 0;
   867  000190  9681               	bcf	3969,3,c	;volatile
   868                           
   869                           ;main.c: 190: for (d = 0; d < 2; d++) {
   870  000192  0E00               	movlw	0
   871  000194  6E25               	movwf	affichage@d+1,c
   872  000196  0E00               	movlw	0
   873  000198  6E24               	movwf	affichage@d,c
   874  00019A  5025               	movf	affichage@d+1,w,c
   875  00019C  0A80               	xorlw	128
   876  00019E  0F80               	addlw	-128
   877  0001A0  0E02               	movlw	2
   878  0001A2  B4D8               	btfsc	status,2,c
   879  0001A4  5C24               	subwf	affichage@d,w,c
   880  0001A6  B0D8               	btfsc	status,0,c
   881  0001A8  D003               	goto	l72
   882  0001AA  4A24               	infsnz	affichage@d,f,c
   883  0001AC  2A25               	incf	affichage@d+1,f,c
   884  0001AE  D7F5               	goto	L7
   885  0001B0                     l72:
   886                           
   887                           ;main.c: 191: }
   888                           ;main.c: 192: PORTAbits.RA7 = 0;
   889  0001B0  9E80               	bcf	3968,7,c	;volatile
   890                           
   891                           ;main.c: 193: for (d = 0; d < 2; d++) {
   892  0001B2  0E00               	movlw	0
   893  0001B4  6E25               	movwf	affichage@d+1,c
   894  0001B6  0E00               	movlw	0
   895  0001B8  6E24               	movwf	affichage@d,c
   896  0001BA  5025               	movf	affichage@d+1,w,c
   897  0001BC  0A80               	xorlw	128
   898  0001BE  0F80               	addlw	-128
   899  0001C0  0E02               	movlw	2
   900  0001C2  B4D8               	btfsc	status,2,c
   901  0001C4  5C24               	subwf	affichage@d,w,c
   902  0001C6  B0D8               	btfsc	status,0,c
   903  0001C8  D003               	goto	l74
   904  0001CA  4A24               	infsnz	affichage@d,f,c
   905  0001CC  2A25               	incf	affichage@d+1,f,c
   906  0001CE  D7F5               	goto	L8
   907  0001D0                     l74:
   908                           
   909                           ;main.c: 194: }
   910                           ;main.c: 195: PORTCbits.RC5 = 0;
   911  0001D0  9A82               	bcf	3970,5,c	;volatile
   912                           
   913                           ;main.c: 196: for (d = 0; d < 2; d++) {
   914  0001D2  0E00               	movlw	0
   915  0001D4  6E25               	movwf	affichage@d+1,c
   916  0001D6  0E00               	movlw	0
   917  0001D8  6E24               	movwf	affichage@d,c
   918  0001DA  5025               	movf	affichage@d+1,w,c
   919  0001DC  0A80               	xorlw	128
   920  0001DE  0F80               	addlw	-128
   921  0001E0  0E02               	movlw	2
   922  0001E2  B4D8               	btfsc	status,2,c
   923  0001E4  5C24               	subwf	affichage@d,w,c
   924  0001E6  B0D8               	btfsc	status,0,c
   925  0001E8  D003               	goto	l76
   926  0001EA  4A24               	infsnz	affichage@d,f,c
   927  0001EC  2A25               	incf	affichage@d+1,f,c
   928  0001EE  D7F5               	goto	L9
   929  0001F0                     l76:
   930                           
   931                           ;main.c: 197: }
   932                           ;main.c: 198: PORTCbits.RC1 = 0;
   933  0001F0  9282               	bcf	3970,1,c	;volatile
   934                           
   935                           ;main.c: 199: for (d = 0; d < 2; d++) {
   936  0001F2  0E00               	movlw	0
   937  0001F4  6E25               	movwf	affichage@d+1,c
   938  0001F6  0E00               	movlw	0
   939  0001F8  6E24               	movwf	affichage@d,c
   940  0001FA  5025               	movf	affichage@d+1,w,c
   941  0001FC  0A80               	xorlw	128
   942  0001FE  0F80               	addlw	-128
   943  000200  0E02               	movlw	2
   944  000202  B4D8               	btfsc	status,2,c
   945  000204  5C24               	subwf	affichage@d,w,c
   946  000206  B0D8               	btfsc	status,0,c
   947  000208  D003               	goto	l78
   948  00020A  4A24               	infsnz	affichage@d,f,c
   949  00020C  2A25               	incf	affichage@d+1,f,c
   950  00020E  D7F5               	goto	L10
   951  000210                     l78:
   952                           
   953                           ;main.c: 200: }
   954                           ;main.c: 201: PORTBbits.RB2 = 0;
   955  000210  9481               	bcf	3969,2,c	;volatile
   956                           
   957                           ;main.c: 202: for (d = 0; d < 2; d++) {
   958  000212  0E00               	movlw	0
   959  000214  6E25               	movwf	affichage@d+1,c
   960  000216  0E00               	movlw	0
   961  000218  6E24               	movwf	affichage@d,c
   962  00021A  5025               	movf	affichage@d+1,w,c
   963  00021C  0A80               	xorlw	128
   964  00021E  0F80               	addlw	-128
   965  000220  0E02               	movlw	2
   966  000222  B4D8               	btfsc	status,2,c
   967  000224  5C24               	subwf	affichage@d,w,c
   968  000226  B0D8               	btfsc	status,0,c
   969  000228  D003               	goto	l80
   970  00022A  4A24               	infsnz	affichage@d,f,c
   971  00022C  2A25               	incf	affichage@d+1,f,c
   972  00022E  D7F5               	goto	L11
   973  000230                     l80:
   974                           
   975                           ;main.c: 203: }
   976                           ;main.c: 204: PORTCbits.RC6 = 0;
   977  000230  9C82               	bcf	3970,6,c	;volatile
   978                           
   979                           ;main.c: 205: for (d = 0; d < 2; d++) {
   980  000232  0E00               	movlw	0
   981  000234  6E25               	movwf	affichage@d+1,c
   982  000236  0E00               	movlw	0
   983  000238  6E24               	movwf	affichage@d,c
   984  00023A  5025               	movf	affichage@d+1,w,c
   985  00023C  0A80               	xorlw	128
   986  00023E  0F80               	addlw	-128
   987  000240  0E02               	movlw	2
   988  000242  B4D8               	btfsc	status,2,c
   989  000244  5C24               	subwf	affichage@d,w,c
   990  000246  B0D8               	btfsc	status,0,c
   991  000248  D003               	goto	l82
   992  00024A  4A24               	infsnz	affichage@d,f,c
   993  00024C  2A25               	incf	affichage@d+1,f,c
   994  00024E  D7F5               	goto	L12
   995  000250                     l82:
   996                           
   997                           ;main.c: 206: }
   998                           ;main.c: 207: PORTCbits.RC4 = 0;
   999  000250  9882               	bcf	3970,4,c	;volatile
  1000                           
  1001                           ;main.c: 208: for (d = 0; d < 2; d++) {
  1002  000252  0E00               	movlw	0
  1003  000254  6E25               	movwf	affichage@d+1,c
  1004  000256  0E00               	movlw	0
  1005  000258  6E24               	movwf	affichage@d,c
  1006  00025A  5025               	movf	affichage@d+1,w,c
  1007  00025C  0A80               	xorlw	128
  1008  00025E  0F80               	addlw	-128
  1009  000260  0E02               	movlw	2
  1010  000262  B4D8               	btfsc	status,2,c
  1011  000264  5C24               	subwf	affichage@d,w,c
  1012  000266  B0D8               	btfsc	status,0,c
  1013  000268  D003               	goto	l84
  1014  00026A  4A24               	infsnz	affichage@d,f,c
  1015  00026C  2A25               	incf	affichage@d+1,f,c
  1016  00026E  D7F5               	goto	L13
  1017  000270                     l84:
  1018                           
  1019                           ;main.c: 209: }
  1020                           ;main.c: 210: PORTAbits.RA0 = led_state[0][0];
  1021  000270  B02C               	btfsc	_led_state,0,c
  1022  000272  D002               	bra	u225
  1023  000274  9080               	bcf	3968,0,c	;volatile
  1024  000276  D001               	bra	u226
  1025  000278                     u225:
  1026  000278  8080               	bsf	3968,0,c	;volatile
  1027  00027A                     u226:
  1028                           
  1029                           ;main.c: 211: PORTAbits.RA3 = led_state[0][1];
  1030  00027A  B02D               	btfsc	_led_state+1,0,c
  1031  00027C  D002               	bra	u235
  1032  00027E  9680               	bcf	3968,3,c	;volatile
  1033  000280  D001               	bra	u236
  1034  000282                     u235:
  1035  000282  8680               	bsf	3968,3,c	;volatile
  1036  000284                     u236:
  1037                           
  1038                           ;main.c: 212: PORTAbits.RA6 = led_state[0][2];
  1039  000284  B02E               	btfsc	_led_state+2,0,c
  1040  000286  D002               	bra	u245
  1041  000288  9C80               	bcf	3968,6,c	;volatile
  1042  00028A  D001               	bra	u246
  1043  00028C                     u245:
  1044  00028C  8C80               	bsf	3968,6,c	;volatile
  1045  00028E                     u246:
  1046                           
  1047                           ;main.c: 213: PORTCbits.RC3 = led_state[0][3];
  1048  00028E  B02F               	btfsc	_led_state+3,0,c
  1049  000290  D002               	bra	u255
  1050  000292  9682               	bcf	3970,3,c	;volatile
  1051  000294  D001               	bra	u256
  1052  000296                     u255:
  1053  000296  8682               	bsf	3970,3,c	;volatile
  1054  000298                     u256:
  1055                           
  1056                           ;main.c: 214: PORTAbits.RA1 = led_state[1][0];
  1057  000298  B034               	btfsc	_led_state+8,0,c
  1058  00029A  D002               	bra	u265
  1059  00029C  9280               	bcf	3968,1,c	;volatile
  1060  00029E  D001               	bra	u266
  1061  0002A0                     u265:
  1062  0002A0  8280               	bsf	3968,1,c	;volatile
  1063  0002A2                     u266:
  1064                           
  1065                           ;main.c: 215: PORTAbits.RA2 = led_state[1][1];
  1066  0002A2  B035               	btfsc	_led_state+9,0,c
  1067  0002A4  D002               	bra	u275
  1068  0002A6  9480               	bcf	3968,2,c	;volatile
  1069  0002A8  D001               	bra	u276
  1070  0002AA                     u275:
  1071  0002AA  8480               	bsf	3968,2,c	;volatile
  1072  0002AC                     u276:
  1073                           
  1074                           ;main.c: 216: PORTCbits.RC0 = led_state[1][2];
  1075  0002AC  B036               	btfsc	_led_state+10,0,c
  1076  0002AE  D002               	bra	u285
  1077  0002B0  9082               	bcf	3970,0,c	;volatile
  1078  0002B2  D001               	bra	u286
  1079  0002B4                     u285:
  1080  0002B4  8082               	bsf	3970,0,c	;volatile
  1081  0002B6                     u286:
  1082                           
  1083                           ;main.c: 217: PORTCbits.RC2 = led_state[1][3];
  1084  0002B6  B037               	btfsc	_led_state+11,0,c
  1085  0002B8  D002               	bra	u295
  1086  0002BA  9482               	bcf	3970,2,c	;volatile
  1087  0002BC  D001               	bra	u296
  1088  0002BE                     u295:
  1089  0002BE  8482               	bsf	3970,2,c	;volatile
  1090  0002C0                     u296:
  1091                           
  1092                           ;main.c: 218: } else {
  1093  0002C0  0012               	return	
  1094  0002C2                     l68:
  1095                           
  1096                           ;main.c: 219: PORTAbits.RA0 = 0;
  1097  0002C2  9080               	bcf	3968,0,c	;volatile
  1098                           
  1099                           ;main.c: 220: for (d = 0; d < 2; d++) {
  1100  0002C4  0E00               	movlw	0
  1101  0002C6  6E25               	movwf	affichage@d+1,c
  1102  0002C8  0E00               	movlw	0
  1103  0002CA  6E24               	movwf	affichage@d,c
  1104  0002CC  5025               	movf	affichage@d+1,w,c
  1105  0002CE  0A80               	xorlw	128
  1106  0002D0  0F80               	addlw	-128
  1107  0002D2  0E02               	movlw	2
  1108  0002D4  B4D8               	btfsc	status,2,c
  1109  0002D6  5C24               	subwf	affichage@d,w,c
  1110  0002D8  B0D8               	btfsc	status,0,c
  1111  0002DA  D003               	goto	l87
  1112  0002DC  4A24               	infsnz	affichage@d,f,c
  1113  0002DE  2A25               	incf	affichage@d+1,f,c
  1114  0002E0  D7F5               	goto	L14
  1115  0002E2                     l87:
  1116                           
  1117                           ;main.c: 221: }
  1118                           ;main.c: 222: PORTAbits.RA3 = 0;
  1119  0002E2  9680               	bcf	3968,3,c	;volatile
  1120                           
  1121                           ;main.c: 223: for (d = 0; d < 2; d++) {
  1122  0002E4  0E00               	movlw	0
  1123  0002E6  6E25               	movwf	affichage@d+1,c
  1124  0002E8  0E00               	movlw	0
  1125  0002EA  6E24               	movwf	affichage@d,c
  1126  0002EC  5025               	movf	affichage@d+1,w,c
  1127  0002EE  0A80               	xorlw	128
  1128  0002F0  0F80               	addlw	-128
  1129  0002F2  0E02               	movlw	2
  1130  0002F4  B4D8               	btfsc	status,2,c
  1131  0002F6  5C24               	subwf	affichage@d,w,c
  1132  0002F8  B0D8               	btfsc	status,0,c
  1133  0002FA  D003               	goto	l89
  1134  0002FC  4A24               	infsnz	affichage@d,f,c
  1135  0002FE  2A25               	incf	affichage@d+1,f,c
  1136  000300  D7F5               	goto	L15
  1137  000302                     l89:
  1138                           
  1139                           ;main.c: 224: }
  1140                           ;main.c: 225: PORTAbits.RA6 = 0;
  1141  000302  9C80               	bcf	3968,6,c	;volatile
  1142                           
  1143                           ;main.c: 226: for (d = 0; d < 2; d++) {
  1144  000304  0E00               	movlw	0
  1145  000306  6E25               	movwf	affichage@d+1,c
  1146  000308  0E00               	movlw	0
  1147  00030A  6E24               	movwf	affichage@d,c
  1148  00030C  5025               	movf	affichage@d+1,w,c
  1149  00030E  0A80               	xorlw	128
  1150  000310  0F80               	addlw	-128
  1151  000312  0E02               	movlw	2
  1152  000314  B4D8               	btfsc	status,2,c
  1153  000316  5C24               	subwf	affichage@d,w,c
  1154  000318  B0D8               	btfsc	status,0,c
  1155  00031A  D003               	goto	l91
  1156  00031C  4A24               	infsnz	affichage@d,f,c
  1157  00031E  2A25               	incf	affichage@d+1,f,c
  1158  000320  D7F5               	goto	L16
  1159  000322                     l91:
  1160                           
  1161                           ;main.c: 227: }
  1162                           ;main.c: 228: PORTCbits.RC3 = 0;
  1163  000322  9682               	bcf	3970,3,c	;volatile
  1164                           
  1165                           ;main.c: 229: for (d = 0; d < 2; d++) {
  1166  000324  0E00               	movlw	0
  1167  000326  6E25               	movwf	affichage@d+1,c
  1168  000328  0E00               	movlw	0
  1169  00032A  6E24               	movwf	affichage@d,c
  1170  00032C  5025               	movf	affichage@d+1,w,c
  1171  00032E  0A80               	xorlw	128
  1172  000330  0F80               	addlw	-128
  1173  000332  0E02               	movlw	2
  1174  000334  B4D8               	btfsc	status,2,c
  1175  000336  5C24               	subwf	affichage@d,w,c
  1176  000338  B0D8               	btfsc	status,0,c
  1177  00033A  D003               	goto	l93
  1178  00033C  4A24               	infsnz	affichage@d,f,c
  1179  00033E  2A25               	incf	affichage@d+1,f,c
  1180  000340  D7F5               	goto	L17
  1181  000342                     l93:
  1182                           
  1183                           ;main.c: 230: }
  1184                           ;main.c: 231: PORTAbits.RA1 = 0;
  1185  000342  9280               	bcf	3968,1,c	;volatile
  1186                           
  1187                           ;main.c: 232: for (d = 0; d < 2; d++) {
  1188  000344  0E00               	movlw	0
  1189  000346  6E25               	movwf	affichage@d+1,c
  1190  000348  0E00               	movlw	0
  1191  00034A  6E24               	movwf	affichage@d,c
  1192  00034C  5025               	movf	affichage@d+1,w,c
  1193  00034E  0A80               	xorlw	128
  1194  000350  0F80               	addlw	-128
  1195  000352  0E02               	movlw	2
  1196  000354  B4D8               	btfsc	status,2,c
  1197  000356  5C24               	subwf	affichage@d,w,c
  1198  000358  B0D8               	btfsc	status,0,c
  1199  00035A  D003               	goto	l95
  1200  00035C  4A24               	infsnz	affichage@d,f,c
  1201  00035E  2A25               	incf	affichage@d+1,f,c
  1202  000360  D7F5               	goto	L18
  1203  000362                     l95:
  1204                           
  1205                           ;main.c: 233: }
  1206                           ;main.c: 234: PORTAbits.RA2 = 0;
  1207  000362  9480               	bcf	3968,2,c	;volatile
  1208                           
  1209                           ;main.c: 235: for (d = 0; d < 2; d++) {
  1210  000364  0E00               	movlw	0
  1211  000366  6E25               	movwf	affichage@d+1,c
  1212  000368  0E00               	movlw	0
  1213  00036A  6E24               	movwf	affichage@d,c
  1214  00036C  5025               	movf	affichage@d+1,w,c
  1215  00036E  0A80               	xorlw	128
  1216  000370  0F80               	addlw	-128
  1217  000372  0E02               	movlw	2
  1218  000374  B4D8               	btfsc	status,2,c
  1219  000376  5C24               	subwf	affichage@d,w,c
  1220  000378  B0D8               	btfsc	status,0,c
  1221  00037A  D003               	goto	l97
  1222  00037C  4A24               	infsnz	affichage@d,f,c
  1223  00037E  2A25               	incf	affichage@d+1,f,c
  1224  000380  D7F5               	goto	L19
  1225  000382                     l97:
  1226                           
  1227                           ;main.c: 236: }
  1228                           ;main.c: 237: PORTCbits.RC0 = 0;
  1229  000382  9082               	bcf	3970,0,c	;volatile
  1230                           
  1231                           ;main.c: 238: for (d = 0; d < 2; d++) {
  1232  000384  0E00               	movlw	0
  1233  000386  6E25               	movwf	affichage@d+1,c
  1234  000388  0E00               	movlw	0
  1235  00038A  6E24               	movwf	affichage@d,c
  1236  00038C  5025               	movf	affichage@d+1,w,c
  1237  00038E  0A80               	xorlw	128
  1238  000390  0F80               	addlw	-128
  1239  000392  0E02               	movlw	2
  1240  000394  B4D8               	btfsc	status,2,c
  1241  000396  5C24               	subwf	affichage@d,w,c
  1242  000398  B0D8               	btfsc	status,0,c
  1243  00039A  D003               	goto	l99
  1244  00039C  4A24               	infsnz	affichage@d,f,c
  1245  00039E  2A25               	incf	affichage@d+1,f,c
  1246  0003A0  D7F5               	goto	L20
  1247  0003A2                     l99:
  1248                           
  1249                           ;main.c: 239: }
  1250                           ;main.c: 240: PORTCbits.RC2 = 0;
  1251  0003A2  9482               	bcf	3970,2,c	;volatile
  1252                           
  1253                           ;main.c: 241: for (d = 0; d < 2; d++) {
  1254  0003A4  0E00               	movlw	0
  1255  0003A6  6E25               	movwf	affichage@d+1,c
  1256  0003A8  0E00               	movlw	0
  1257  0003AA  6E24               	movwf	affichage@d,c
  1258  0003AC  5025               	movf	affichage@d+1,w,c
  1259  0003AE  0A80               	xorlw	128
  1260  0003B0  0F80               	addlw	-128
  1261  0003B2  0E02               	movlw	2
  1262  0003B4  B4D8               	btfsc	status,2,c
  1263  0003B6  5C24               	subwf	affichage@d,w,c
  1264  0003B8  B0D8               	btfsc	status,0,c
  1265  0003BA  D003               	goto	l101
  1266  0003BC  4A24               	infsnz	affichage@d,f,c
  1267  0003BE  2A25               	incf	affichage@d+1,f,c
  1268  0003C0  D7F5               	goto	L21
  1269  0003C2                     l101:
  1270                           
  1271                           ;main.c: 242: }
  1272                           ;main.c: 244: PORTCbits.RC7 = led_state[0][4];
  1273  0003C2  B030               	btfsc	_led_state+4,0,c
  1274  0003C4  D002               	bra	u465
  1275  0003C6  9E82               	bcf	3970,7,c	;volatile
  1276  0003C8  D001               	bra	u466
  1277  0003CA                     u465:
  1278  0003CA  8E82               	bsf	3970,7,c	;volatile
  1279  0003CC                     u466:
  1280                           
  1281                           ;main.c: 245: PORTBbits.RB3 = led_state[0][5];
  1282  0003CC  B031               	btfsc	_led_state+5,0,c
  1283  0003CE  D002               	bra	u475
  1284  0003D0  9681               	bcf	3969,3,c	;volatile
  1285  0003D2  D001               	bra	u476
  1286  0003D4                     u475:
  1287  0003D4  8681               	bsf	3969,3,c	;volatile
  1288  0003D6                     u476:
  1289                           
  1290                           ;main.c: 246: PORTAbits.RA7 = led_state[0][6];
  1291  0003D6  B032               	btfsc	_led_state+6,0,c
  1292  0003D8  D002               	bra	u485
  1293  0003DA  9E80               	bcf	3968,7,c	;volatile
  1294  0003DC  D001               	bra	u486
  1295  0003DE                     u485:
  1296  0003DE  8E80               	bsf	3968,7,c	;volatile
  1297  0003E0                     u486:
  1298                           
  1299                           ;main.c: 247: PORTCbits.RC5 = led_state[0][7];
  1300  0003E0  B033               	btfsc	_led_state+7,0,c
  1301  0003E2  D002               	bra	u495
  1302  0003E4  9A82               	bcf	3970,5,c	;volatile
  1303  0003E6  D001               	bra	u496
  1304  0003E8                     u495:
  1305  0003E8  8A82               	bsf	3970,5,c	;volatile
  1306  0003EA                     u496:
  1307                           
  1308                           ;main.c: 248: PORTCbits.RC1 = led_state[1][4];
  1309  0003EA  B038               	btfsc	_led_state+12,0,c
  1310  0003EC  D002               	bra	u505
  1311  0003EE  9282               	bcf	3970,1,c	;volatile
  1312  0003F0  D001               	bra	u506
  1313  0003F2                     u505:
  1314  0003F2  8282               	bsf	3970,1,c	;volatile
  1315  0003F4                     u506:
  1316                           
  1317                           ;main.c: 249: PORTBbits.RB2 = led_state[1][5];
  1318  0003F4  B039               	btfsc	_led_state+13,0,c
  1319  0003F6  D002               	bra	u515
  1320  0003F8  9481               	bcf	3969,2,c	;volatile
  1321  0003FA  D001               	bra	u516
  1322  0003FC                     u515:
  1323  0003FC  8481               	bsf	3969,2,c	;volatile
  1324  0003FE                     u516:
  1325                           
  1326                           ;main.c: 250: PORTCbits.RC6 = led_state[1][6];
  1327  0003FE  B03A               	btfsc	_led_state+14,0,c
  1328  000400  D002               	bra	u525
  1329  000402  9C82               	bcf	3970,6,c	;volatile
  1330  000404  D001               	bra	u526
  1331  000406                     u525:
  1332  000406  8C82               	bsf	3970,6,c	;volatile
  1333  000408                     u526:
  1334                           
  1335                           ;main.c: 251: PORTCbits.RC4 = led_state[1][7];
  1336  000408  B03B               	btfsc	_led_state+15,0,c
  1337  00040A  D002               	bra	u535
  1338  00040C  9882               	bcf	3970,4,c	;volatile
  1339  00040E  D001               	bra	u536
  1340  000410                     u535:
  1341  000410  8882               	bsf	3970,4,c	;volatile
  1342  000412                     u536:
  1343  000412  0012               	return	
  1344  000414                     __end_of_affichage:
  1345                           	opt stack 0
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           prodh	equ	0xFF4
  1351                           prodl	equ	0xFF3
  1352                           intcon	equ	0xFF2
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           postdec1	equ	0xFE5
  1356                           fsr1l	equ	0xFE1
  1357                           indf2	equ	0xFDF
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _high_isr *****************
  1363 ;; Defined at:
  1364 ;;		line 114 in file "main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;Total ram usage:       17 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		Interrupt level 1
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391 ;; *************** function _timer_isr *****************
  1392 ;; Defined at:
  1393 ;;		line 126 in file "main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;		None               void
  1400 ;; Registers used:
  1401 ;;		None
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1410 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;Total ram usage:       17 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		Interrupt level 1
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	intcodelo
  1421  000018                     __pintcodelo:
  1422                           	opt stack 0
  1423  000018                     _high_isr:
  1424                           	opt stack 29
  1425                           
  1426                           ;incstack = 0
  1427  000018  CFD8 F001          	movff	status,??_high_isr
  1428  00001C  CFE8 F002          	movff	wreg,??_high_isr+1
  1429  000020  CFE0 F003          	movff	bsr,??_high_isr+2
  1430  000024  CFFA F004          	movff	pclath,??_high_isr+3
  1431  000028  CFFB F005          	movff	pclatu,??_high_isr+4
  1432  00002C  CFE9 F006          	movff	fsr0l,??_high_isr+5
  1433  000030  CFEA F007          	movff	fsr0h,??_high_isr+6
  1434  000034  CFE1 F008          	movff	fsr1l,??_high_isr+7
  1435  000038  CFE2 F009          	movff	fsr1h,??_high_isr+8
  1436  00003C  CFD9 F00A          	movff	fsr2l,??_high_isr+9
  1437  000040  CFDA F00B          	movff	fsr2h,??_high_isr+10
  1438  000044  CFF3 F00C          	movff	prodl,??_high_isr+11
  1439  000048  CFF4 F00D          	movff	prodh,??_high_isr+12
  1440  00004C  CFF6 F00E          	movff	tblptrl,??_high_isr+13
  1441  000050  CFF7 F00F          	movff	tblptrh,??_high_isr+14
  1442  000054  CFF8 F010          	movff	tblptru,??_high_isr+15
  1443  000058  CFF5 F011          	movff	tablat,??_high_isr+16
  1444                           
  1445                           ;main.c: 115: if (RC2IF) {
  1446  00005C  AAA4               	btfss	4004,5,c	;volatile
  1447  00005E  D017               	goto	i1l953
  1448                           
  1449                           ;main.c: 116: tampon = RCREG2;
  1450  000060  CF7A F040          	movff	3962,_tampon	;volatile
  1451                           
  1452                           ;main.c: 117: if (compteur == 128) {
  1453  000064  503C               	movf	_compteur,w,c
  1454  000066  0A80               	xorlw	128
  1455  000068  103D               	iorwf	_compteur+1,w,c
  1456  00006A  A4D8               	btfss	status,2,c
  1457  00006C  D004               	goto	i1l949
  1458                           
  1459                           ;main.c: 118: compteur = 0;
  1460  00006E  0E00               	movlw	0
  1461  000070  6E3D               	movwf	_compteur+1,c
  1462  000072  0E00               	movlw	0
  1463  000074  6E3C               	movwf	_compteur,c
  1464  000076                     i1l949:
  1465                           
  1466                           ;main.c: 119: }
  1467                           ;main.c: 120: stock_led[compteur] = tampon;
  1468  000076  0100               	movlb	0	; () banked
  1469  000078  0E60               	movlw	low _stock_led
  1470  00007A  243C               	addwf	_compteur,w,c
  1471  00007C  6ED9               	movwf	fsr2l,c
  1472  00007E  0100               	movlb	0	; () banked
  1473  000080  0E00               	movlw	high _stock_led
  1474  000082  203D               	addwfc	_compteur+1,w,c
  1475  000084  6EDA               	movwf	fsr2h,c
  1476  000086  C040  FFDF         	movff	_tampon,indf2
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;main.c: 121: compteur++;
  1480  00008A  4A3C               	infsnz	_compteur,f,c
  1481  00008C  2A3D               	incf	_compteur+1,f,c
  1482  00008E                     i1l953:
  1483                           
  1484                           ;main.c: 122: }
  1485                           ;main.c: 123: RC2IF = 0;
  1486  00008E  9AA4               	bcf	4004,5,c	;volatile
  1487  000090  C011  FFF5         	movff	??_high_isr+16,tablat
  1488  000094  C010  FFF8         	movff	??_high_isr+15,tblptru
  1489  000098  C00F  FFF7         	movff	??_high_isr+14,tblptrh
  1490  00009C  C00E  FFF6         	movff	??_high_isr+13,tblptrl
  1491  0000A0  C00D  FFF4         	movff	??_high_isr+12,prodh
  1492  0000A4  C00C  FFF3         	movff	??_high_isr+11,prodl
  1493  0000A8  C00B  FFDA         	movff	??_high_isr+10,fsr2h
  1494  0000AC  C00A  FFD9         	movff	??_high_isr+9,fsr2l
  1495  0000B0  C009  FFE2         	movff	??_high_isr+8,fsr1h
  1496  0000B4  C008  FFE1         	movff	??_high_isr+7,fsr1l
  1497  0000B8  C007  FFEA         	movff	??_high_isr+6,fsr0h
  1498  0000BC  C006  FFE9         	movff	??_high_isr+5,fsr0l
  1499  0000C0  C005  FFFB         	movff	??_high_isr+4,pclatu
  1500  0000C4  C004  FFFA         	movff	??_high_isr+3,pclath
  1501  0000C8  C003  FFE0         	movff	??_high_isr+2,bsr
  1502  0000CC  C002  FFE8         	movff	??_high_isr+1,wreg
  1503  0000D0  C001  FFD8         	movff	??_high_isr,status
  1504  0000D4  0010               	retfie	
  1505  0000D6                     __end_of_high_isr:
  1506                           	opt stack 0
  1507  0000D6                     _timer_isr:
  1508                           	opt stack 29
  1509                           
  1510                           ;incstack = 0
  1511  0000D6  CFD8 F012          	movff	status,??_timer_isr
  1512  0000DA  CFE8 F013          	movff	wreg,??_timer_isr+1
  1513  0000DE  CFE0 F014          	movff	bsr,??_timer_isr+2
  1514  0000E2  CFFA F015          	movff	pclath,??_timer_isr+3
  1515  0000E6  CFFB F016          	movff	pclatu,??_timer_isr+4
  1516  0000EA  CFE9 F017          	movff	fsr0l,??_timer_isr+5
  1517  0000EE  CFEA F018          	movff	fsr0h,??_timer_isr+6
  1518  0000F2  CFE1 F019          	movff	fsr1l,??_timer_isr+7
  1519  0000F6  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
  1520  0000FA  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
  1521  0000FE  CFDA F01C          	movff	fsr2h,??_timer_isr+10
  1522  000102  CFF3 F01D          	movff	prodl,??_timer_isr+11
  1523  000106  CFF4 F01E          	movff	prodh,??_timer_isr+12
  1524  00010A  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
  1525  00010E  CFF7 F020          	movff	tblptrh,??_timer_isr+14
  1526  000112  CFF8 F021          	movff	tblptru,??_timer_isr+15
  1527  000116  CFF5 F022          	movff	tablat,??_timer_isr+16
  1528                           
  1529                           ;main.c: 128: if (TMR0IE && TMR0IF) {
  1530  00011A  BAF2               	btfsc	intcon,5,c	;volatile
  1531  00011C  D000               	goto	i1l44
  1532  00011E                     i1l44:
  1533                           
  1534                           ;main.c: 129: }
  1535                           ;main.c: 130: TMR0IF = 0;
  1536  00011E  94F2               	bcf	intcon,2,c	;volatile
  1537  000120  C022  FFF5         	movff	??_timer_isr+16,tablat
  1538  000124  C021  FFF8         	movff	??_timer_isr+15,tblptru
  1539  000128  C020  FFF7         	movff	??_timer_isr+14,tblptrh
  1540  00012C  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
  1541  000130  C01E  FFF4         	movff	??_timer_isr+12,prodh
  1542  000134  C01D  FFF3         	movff	??_timer_isr+11,prodl
  1543  000138  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
  1544  00013C  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
  1545  000140  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
  1546  000144  C019  FFE1         	movff	??_timer_isr+7,fsr1l
  1547  000148  C018  FFEA         	movff	??_timer_isr+6,fsr0h
  1548  00014C  C017  FFE9         	movff	??_timer_isr+5,fsr0l
  1549  000150  C016  FFFB         	movff	??_timer_isr+4,pclatu
  1550  000154  C015  FFFA         	movff	??_timer_isr+3,pclath
  1551  000158  C014  FFE0         	movff	??_timer_isr+2,bsr
  1552  00015C  C013  FFE8         	movff	??_timer_isr+1,wreg
  1553  000160  C012  FFD8         	movff	??_timer_isr,status
  1554  000164  0010               	retfie	
  1555  000166                     __end_of_timer_isr:
  1556                           	opt stack 0
  1557  0000                     pclatu	equ	0xFFB
  1558                           pclath	equ	0xFFA
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           prodh	equ	0xFF4
  1564                           prodl	equ	0xFF3
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           fsr0h	equ	0xFEA
  1568                           fsr0l	equ	0xFE9
  1569                           wreg	equ	0xFE8
  1570                           postdec1	equ	0xFE5
  1571                           fsr1h	equ	0xFE2
  1572                           fsr1l	equ	0xFE1
  1573                           bsr	equ	0xFE0
  1574                           indf2	equ	0xFDF
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           pclatu	equ	0xFFB
  1579                           pclath	equ	0xFFA
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           prodh	equ	0xFF4
  1585                           prodl	equ	0xFF3
  1586                           intcon	equ	0xFF2
  1587                           postinc0	equ	0xFEE
  1588                           fsr0h	equ	0xFEA
  1589                           fsr0l	equ	0xFE9
  1590                           wreg	equ	0xFE8
  1591                           postdec1	equ	0xFE5
  1592                           fsr1h	equ	0xFE2
  1593                           fsr1l	equ	0xFE1
  1594                           bsr	equ	0xFE0
  1595                           indf2	equ	0xFDF
  1596                           fsr2h	equ	0xFDA
  1597                           fsr2l	equ	0xFD9
  1598                           status	equ	0xFD8
  1599                           
  1600                           	psect	rparam
  1601  0000                     pclatu	equ	0xFFB
  1602                           pclath	equ	0xFFA
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           prodh	equ	0xFF4
  1608                           prodl	equ	0xFF3
  1609                           intcon	equ	0xFF2
  1610                           postinc0	equ	0xFEE
  1611                           fsr0h	equ	0xFEA
  1612                           fsr0l	equ	0xFE9
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1h	equ	0xFE2
  1616                           fsr1l	equ	0xFE1
  1617                           bsr	equ	0xFE0
  1618                           indf2	equ	0xFDF
  1619                           fsr2h	equ	0xFDA
  1620                           fsr2l	equ	0xFD9
  1621                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      72
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_decodage

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     739
                                             40 COMRAM     3     3      0
                          _affichage
                           _decodage
                          _initComms
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decodage                                             6     4      2     184
                                             34 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _affichage                                            3     3      0     495
                                             34 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _affichage
   _decodage
   _initComms
   _initPorts

 _high_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      48       1       75.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4       6        0.0%
DATA                 0      0      D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 18 20:25:48 2014

            __CFG_CP0$ON 000000              __CFG_CP1$ON 000000              __CFG_CP2$ON 000000  
            __CFG_CP3$ON 000000                       l70 0190                       l80 0230  
                     l72 01B0                       l82 0250                       l74 01D0  
                     l91 0322                       l84 0270                       l76 01F0  
                     l68 02C2                       l93 0342                       l78 0210  
                     l95 0362                       l87 02E2                       l97 0382  
                     l89 0302                       l99 03A2              __CFG_CPB$ON 000000  
            __CFG_CPD$ON 000000              _state_clock 003F                       bsr 000FE0  
            __CFG_BORV$3 000000                      l101 03C2                      l771 04F8  
                    l763 0424                      l767 0480                      l979 055A  
                    _GIE 007F97                      u225 0278                      u226 027A  
                    u235 0282                      u236 0284                      u245 028C  
                    u246 028E                      u255 0296                      u256 0298  
                    u505 03F2                      u265 02A0                      u506 03F4  
                    u266 02A2                      u515 03FC                      u275 02AA  
                    u516 03FE                      u276 02AC                      u525 0406  
                    u285 02B4                      u526 0408                      u286 02B6  
                    u535 0410                      u295 02BE                      u536 0412  
                    u296 02C0                      u465 03CA                      u466 03CC  
                    u475 03D4                      u476 03D6                      u485 03DE  
                    u486 03E0                      u495 03E8                      u496 03EA  
                    prod 000FF3                      wreg 000FE8             __CFG_IESO$ON 000000  
             _TXSTA2bits 000FBA                     _MASK 0041                     _PEIE 007F96  
                   i1l44 011E             __CFG_WRT0$ON 000000             __CFG_WRT1$ON 000000  
           __CFG_WRT2$ON 000000             __CFG_WRT3$ON 000000            __CFG_EBTR0$ON 000000  
          __CFG_EBTR1$ON 000000            __CFG_EBTR2$ON 000000            __CFG_EBTR3$ON 000000  
           __CFG_WRTB$ON 000000             __CFG_WRTC$ON 000000             __CFG_WRTD$ON 000000  
          __CFG_EBTRB$ON 000000                     _main 0516                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0166            __CFG_RETEN$ON 000000             _BAUDCON2bits 000FB9  
                  ?_main 0001                    _RC2IF 007D25                    i1l953 008E  
                  i1l949 0076                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94           __CFG_FCMEN$OFF 000000  
                  main@i 0029                    tablat 000FF5                    status 000FD8  
         _compteur_clock 003E           __CFG_MCLRE$OFF 000000          __initialization 05A4  
           __end_of_main 0564                   ??_main 0029            __activetblptr 000000  
         __CFG_PLLCFG$ON 000000                   _ADCON1 000FC1                   _ANCON0 000F5D  
        __CFG_BBSIZ$BB2K 000000           __CFG_WDTEN$OFF 000000                   _INTCON 000FF2  
                 _RCREG2 000F7A                   _OSCCON 000FD3                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _SPBRG2 000F7B                   _TXREG2 000F79  
       __end_of_decodage 0516           __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000  
       __end_of_high_isr 00D6           __CFG_STVREN$ON 000000                   clear_0 05AA  
                 clear_1 05B6                   _tampon 0040             __pdataCOMRAM 0041  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 05DC       __size_of_affichage 02AA  
         __pcstackCOMRAM 0001               __pbssBANK0 0060       __size_of_initComms 0040  
     __size_of_initPorts 0032         __CFG_CANMX$PORTB 000000       __size_of_timer_isr 0090  
              ?_decodage 0023        __end_of_affichage 0414                  _SPBRGH2 000F7C  
             affichage@d 0024                ?_high_isr 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 05A4                  __ramtop 0F00  
                __ptext0 0516                  __ptext1 05E2                  __ptext2 0564  
                __ptext3 0414                  __ptext4 016A        __end_of_initComms 05A4  
      __end_of_initPorts 0614               ??_decodage 0025        __CFG_MSSPMSK$MSK7 000000  
                main@mux 002B               ??_high_isr 0001     end_of_initialization 05DC  
      __end_of_timer_isr 0166                  postdec1 000FE5                  postinc0 000FEE  
           affichage@mux 0023                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82         __CFG_FOSC$INTIO2 000000            __pidataCOMRAM 0614  
    start_initialization 05A4              __pbssCOMRAM 002C        __size_of_decodage 0102  
              _affichage 016A        __size_of_high_isr 00BE              __pintcodelo 0018  
              _led_state 002C                _initComms 0564                _initPorts 05E2  
              decodage@a 0028                decodage@n 0023               ?_affichage 0001  
               _PIE3bits 000FA3                 _PIR3bits 000FA4                 _RCONbits 000FD0  
              _timer_isr 00D6         __CFG_SOSCSEL$DIG 000000                _stock_led 0060  
             ?_initComms 0001               ?_initPorts 0001                copy_data0 05D0  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
             ?_timer_isr 0001                 _decodage 0414                 _high_isr 0018  
               _compteur 003C              ??_affichage 0023            __size_of_main 004E  
    __CFG_INTOSCSEL$HIGH 000000              _OSCTUNEbits 000F9B              ??_initComms 0023  
            ??_initPorts 0023                 intlevel1 0000               _RCSTA2bits 000FA6  
     __CFG_WDTPS$1048576 000000              ??_timer_isr 0012      __CFG_BORPWR$ZPBORMV 000000  
